<haxe>
	<class path="Array" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/js/_std/Array.hx" extern="1">
		<join public="1" set="method">
			<f a="sep">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a string representation of `this` Array, with `sep` separating
		each element.

		The result of this operation is equal to `Std.string(this[0]) + sep +
		Std.string(this[1]) + sep + ... + sep + Std.string(this[this.length-1])`

		If `this` is the empty Array `[]`, the result is the empty String `""`.
		If `this` has exactly one element, the result is equal to a call to
		`Std.string(this[0])`.

		If `sep` is null, the result is unspecified.</haxe_doc>
		</join>
		<push public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Adds the element `x` at the end of `this` Array and returns the new
		length of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` increases by 1.</haxe_doc>
		</push>
		<haxe_doc>An Array is a storage for values. You can access it using indexes or
	with its API.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Class" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/Class.hx">
		<this><x path="Class"><c path="Class.T"/></x></this>
		<haxe_doc>An abstract type that represents a Class.
	
	See `Type` for the Haxe Reflection API.</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<class path="Date" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/_std/Date.hx" extern="1">
		<now public="1" get="inline" set="null" line="38" static="1">
			<f a=""><c path="Date"/></f>
			<haxe_doc>Returns a Date representing the current local time.</haxe_doc>
		</now>
		<fromTime public="1" get="inline" set="null" line="42" static="1">
			<f a="t">
				<x path="Float"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from timestamp `t`.</haxe_doc>
		</fromTime>
		<fromString public="1" get="inline" set="null" line="48" static="1">
			<f a="s">
				<c path="String"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from a formated string `s`, with the following accepted
		formats:
		
		- `"YYYY-MM-DD hh:mm:ss"`
		- `"YYYY-MM-DD"`
		- `"hh:mm:ss"`
		
		The first two formats are expressed in local time, the third in UTC
		Epoch.</haxe_doc>
		</fromString>
		<getTime public="1" set="method">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns the timestamp of the date. It might only have a per-second
		precision depending on the platforms.</haxe_doc>
		</getTime>
		<getHours public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the hours of `this` Date (0-23 range).</haxe_doc>
		</getHours>
		<getMinutes public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the minutes of `this` Date (0-59 range).</haxe_doc>
		</getMinutes>
		<getSeconds public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the seconds of the `this` Date (0-59 range).</haxe_doc>
		</getSeconds>
		<getFullYear public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the full year of `this` Date (4-digits).</haxe_doc>
		</getFullYear>
		<getMonth public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the month of `this` Date (0-11 range).</haxe_doc>
		</getMonth>
		<getDate public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of `this` Date (1-31 range).</haxe_doc>
		</getDate>
		<getDay public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of the week of `this` Date (0-6 range).</haxe_doc>
		</getDay>
		<toString public="1" get="inline" set="null" line="34">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representation of `this` Date, by using the
		standard format [YYYY-MM-DD HH:MM:SS]. See `DateTools.format` for
		other formating rules.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="year:month:day:hour:min:sec">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new date object from the given arguments.
		
		The behaviour of a Date instance is only consistent across platforms if
		the the arguments describe a valid date.
		
		- month: 0 to 11
		- day: 1 to 31
		- hour: 0 to 23
		- min: 0 to 59
		- sec: 0 to 59</haxe_doc>
		</new>
		<haxe_doc>The Date class provides a basic structure for date and time related
	information. Date instances can be created by
	
	- `new Date()` for a specific date,
	- `Date.now()` to obtain information about the current time,
	- `Date.fromTime()` with a given timestamp or
	- `Date.fromString()` by parsing from a String.
	
	There is some extra functions available in the `DateTools` class.
	
	In the context of haxe dates, a timestamp is defined as the number of
	milliseconds elapsed since 1st January 1970.</haxe_doc>
		<meta><m n=":coreApi"/></meta>
	</class>
	<class path="EReg" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/_std/EReg.hx">
		<r><d/></r>
		<match public="1" set="method" line="31">
			<f a="s">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `this` regular expression matches String `s`.
		
		This method modifies the internal state.
		
		If `s` is `null`, the result is unspecified.</haxe_doc>
		</match>
		<matched public="1" set="method" line="38">
			<f a="n">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the matched sub-group `n` of `this` EReg.
		
		This method should only be called after `this.match` or
		`this.matchSub`, and then operates on the String of that operation.
		
		The index `n` corresponds to the n-th set of parentheses in the pattern
		of `this` EReg. If no such sub-group exists, an exception is thrown.
		
		If `n` equals 0, the whole matched substring is returned.</haxe_doc>
		</matched>
		<replace public="1" set="method" line="84">
			<f a="s:by">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Replaces the first substring of `s` which `this` EReg matches with `by`.
		
		If `this` EReg does not match any substring, the result is `s`.
		
		By default, this method replaces only the first matched substring. If
		the global g modifier is in place, all matched substrings are replaced.
		
		If `by` contains `$1` to `$9`, the digit corresponds to number of a
		matched sub-group and its value is used instead. If no such sub-group
		exists, the replacement is unspecified. The string `$$` becomes `$`.
		
		If `s` or `by` are null, the result is unspecified.</haxe_doc>
		</replace>
		<new public="1" set="method" line="26">
			<f a="r:opt">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new regular expression with pattern `r` and modifiers `opt`.
		
		This is equivalent to the shorthand syntax `~/r/opt`
		
		If `r` or `opt` are null, the result is unspecified.</haxe_doc>
		</new>
		<haxe_doc>The EReg class represents regular expressions.
	
	While basic usage and patterns consistently work across platforms, some more
	complex operations may yield different results. This is a necessary trade-
	off to retain a certain level of performance.
	
	EReg instances can be created by calling the constructor, or with the
	special syntax ~/pattern/modifier
	
	EReg instances maintain an internal state, which is affected by several of
	its methods.
	
	A detailed explanation of the supported operations is available at
	http://haxe.org/doc/cross/regexp</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Enum" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/Enum.hx">
		<this><x path="Enum"><c path="Enum.T"/></x></this>
		<haxe_doc>An abstract type that represents an Enum type.
	
	The corresponding enum instance type is `EnumValue`.
	
	See `Type` for the Haxe Reflection API.</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="EnumValue" params="" file="K:\Program Files\HaxeToolkit\haxe\std/EnumValue.hx">
		<this><x path="EnumValue"/></this>
		<haxe_doc>An abstract type that represents any enum value.
	See `Type` for the Haxe Reflection API.</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<class path="List" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/List.hx">
		<h><c path="Array"><d/></c></h>
		<q><c path="Array"><d/></c></q>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` List.</haxe_doc>
		</length>
		<add public="1" set="method" line="49">
			<f a="item">
				<c path="List.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds element `item` at the end of `this` List.
		
		`this.length` increases by 1.</haxe_doc>
		</add>
		<push public="1" set="method" line="64">
			<f a="item">
				<c path="List.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds element `item` at the beginning of `this` List.
		
		`this.length` increases by 1.</haxe_doc>
		</push>
		<first public="1" set="method" line="81">
			<f a=""><t path="Null"><c path="List.T"/></t></f>
			<haxe_doc>Returns the first element of `this` List, or null if no elements exist.
		
		This function does not modify `this` List.</haxe_doc>
		</first>
		<last public="1" set="method" line="90">
			<f a=""><t path="Null"><c path="List.T"/></t></f>
			<haxe_doc>Returns the last element of `this` List, or null if no elements exist.
		
		This function does not modify `this` List.</haxe_doc>
		</last>
		<pop public="1" set="method" line="100">
			<f a=""><t path="Null"><c path="List.T"/></t></f>
			<haxe_doc>Returns the first element of `this` List, or null if no elements exist.
		
		The element is removed from `this` List.</haxe_doc>
		</pop>
		<clear public="1" set="method" line="124">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Empties `this` List.
		
		This function does not traverse the elements, but simply sets the
		internal references to null and `this.length` to 0.</haxe_doc>
		</clear>
		<iterator public="1" set="method" line="161">
			<f a=""><t path="Iterator"><c path="List.T"/></t></f>
			<haxe_doc>Returns an iterator on the elements of the list.</haxe_doc>
		</iterator>
		<filter public="1" set="method" line="243">
			<f a="f">
				<f a="">
					<c path="List.T"/>
					<x path="Bool"/>
				</f>
				<c path="List"><c path="List.T"/></c>
			</f>
			<haxe_doc>Returns a list filtered with `f`. The returned list will contain all
		elements for which `f(x) == true`.</haxe_doc>
		</filter>
		<map public="1" params="X" set="method" line="259">
			<f a="f">
				<f a="">
					<c path="List.T"/>
					<c path="map.X"/>
				</f>
				<c path="List"><c path="map.X"/></c>
			</f>
			<haxe_doc>Returns a new list where all elements have been converted by the
		function `f`.</haxe_doc>
		</map>
		<new public="1" set="method" line="40">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new empty list.</haxe_doc>
		</new>
		<haxe_doc>A linked-list of elements. The list is composed of two-elements arrays
	that are chained together. It is optimized so that adding or removing an
	element does not imply copying the whole array content every time.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<abstract path="Map" params="K:V" file="K:\Program Files\HaxeToolkit\haxe\std/Map.hx">
		<from>
			<icast field="fromStringMap"><c path="haxe.ds.StringMap"><c path="fromStringMap.V"/></c></icast>
			<icast field="fromIntMap"><c path="haxe.ds.IntMap"><c path="fromIntMap.V"/></c></icast>
			<icast field="fromObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="fromObjectMap.K"/>
	<c path="fromObjectMap.V"/>
</c></icast>
		</from>
		<this><c path="IMap">
	<c path="Map.K"/>
	<c path="Map.V"/>
</c></this>
		<to>
			<icast field="toStringMap"><c path="haxe.ds.StringMap"><c path="Map.V"/></c></icast>
			<icast field="toIntMap"><c path="haxe.ds.IntMap"><c path="Map.V"/></c></icast>
			<icast field="toEnumValueMapMap"><c path="haxe.ds.EnumValueMap">
	<c path="toEnumValueMapMap.K"/>
	<c path="Map.V"/>
</c></icast>
			<icast field="toObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="toObjectMap.K"/>
	<c path="Map.V"/>
</c></icast>
		</to>
		<haxe_doc><![CDATA[Map allows key to value mapping for arbitrary value types, and many key
	types.
		
	This is a multi-type abstract, it is instantiated as one of its
	specialization types depending on its type parameters.
	
	A Map can be instantiated without explicit type parameters. Type inference
	will then determine the type parameters from the usage.
	
	Maps can also be created with `key1 => value1, key2 => value2` syntax.
	
	Map is an abstract type, it is not available at runtime.]]></haxe_doc>
		<meta><m n=":multiType"><e>K</e></m></meta>
		<impl><class path="_Map.Map_Impl_" params="" file="K:\Program Files\HaxeToolkit\haxe\std/Map.hx" private="1" module="Map"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="IMap" params="K:V" file="K:\Program Files\HaxeToolkit\haxe\std/Map.hx" module="Map" interface="1"><meta><m n=":keep"/></meta></class>
	<typedef path="_Map.Hashable" params="" file="K:\Program Files\HaxeToolkit\haxe\std/Map.hx" private="1" module="Map"><a><hashCode set="method"><f a=""><x path="Int"/></f></hashCode></a></typedef>
	<class path="Math" params="" file="K:\Program Files\HaxeToolkit\haxe\std/Math.hx" extern="1">
		<NEGATIVE_INFINITY public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special Float constant which denotes negative infinity.

		For example, this is the result of -1.0 / 0.0.

		Operations with NEGATIVE_INFINITY as an operand may result in
		Operations with NEGATIVE_INFINITY as an operand may result in
		NEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. For detailed information,
		see ...

		If this constant is converted to an Int, e.g. through Std.int(), the
		result is unspecified.</haxe_doc>
		</NEGATIVE_INFINITY>
		<POSITIVE_INFINITY public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special Float constant which denotes negative infinity.

		For example, this is the result of 1.0 / 0.0.

		Operations with POSITIVE_INFINITY as an operand may result in
		NEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. For detailed information,
		see ...

		If this constant is converted to an Int, e.g. through Std.int(), the
		result is unspecified.</haxe_doc>
		</POSITIVE_INFINITY>
		<NaN public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special Float constant which denotes an invalid number.

		NaN stands for "Not a Number". It occurs when a mathematically incorrect
		operation is executed, such as taking the square root of a negative
		number: Math.sqrt(-1).

		All further operations with NaN as an operand will result in NaN.

		If this constant is converted to an Int, e.g. through Std.int(), the
		result is unspecified.

		In order to test if a value is NaN, you should use Math.isNaN() function.

		(Php) In PHP versions prior to 5.3.1 VC 9 there may be unexpected
		results when performing arithmetic operations with NaN on Windows, see:
			https://bugs.php.net/bug.php?id=42143</haxe_doc>
		</NaN>
		<min public="1" set="method" static="1">
			<f a="a:b">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the smaller of values `a` and `b`.

		If `a` or `b` are NaN, the result is NaN.

		If `a` or `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.

		If `a` and `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.</haxe_doc>
		</min>
		<max public="1" set="method" static="1">
			<f a="a:b">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the greater of values `a` and `b`.

		If `a` or `b` are NaN, the result is NaN.

		If `a` or `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.

		If `a` and `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.</haxe_doc>
		</max>
		<isFinite public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `f` is a finite number.

		If `f` is POSITIVE_INFINITY, NEGATIVE_INFINITY or NaN, the result is
		false.

		Otherwise the result is true.</haxe_doc>
		</isFinite>
		<isNaN public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `f` is not a valid number.

		If `f` is NaN, the result is true.

		Otherwise the result is false. In particular, both POSITIVE_INFINITY and
		NEGATIVE_INFINITY are not considered NaN.</haxe_doc>
		</isNaN>
		<haxe_doc>This class defines mathematical functions and constants.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="Reflect" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/_std/Reflect.hx">
		<field public="1" set="method" line="28" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Returns the value of the field named `field` on object `o`.
		
		If `o` is not an object or has no field named `field`, the result is
		null.
		
		If the field is defined as a property, its accessors are ignored. Refer
		to `Reflect.getProperty` for a function supporting property accessors.
		
		If `field` is null, the result is unspecified.
		
		(As3) If used on a property field, the getter will be invoked. It is
		not possible to obtain the value directly.</haxe_doc>
		</field>
		<haxe_doc>The Reflect API is a way to manipulate values dynamicly through an
	abstract interface in an untyped manner. Use with care.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="String" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/_std/String.hx" extern="1">
		<fromCharCode public="1" set="method" static="1">
			<f a="code">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String corresponding to the character code `code`.
		
		If `code` is negative or has another invalid value, the result is
		unspecified.</haxe_doc>
		</fromCharCode>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of characters in `this` String.</haxe_doc>
		</length>
		<toUpperCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are upper case.
		
		Affects the characters `a-z`. Other characters remain unchanged.</haxe_doc>
		</toUpperCase>
		<toLowerCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are lower case.
		
		Affects the characters `A-Z`. Other characters remain unchanged.</haxe_doc>
		</toLowerCase>
		<charAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the character at position `index` of `this` String.
		
		If `index` is negative or exceeds `this.length`, the empty String ""
		is returned.</haxe_doc>
		</charAt>
		<indexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the leftmost occurence of `str` within `this`
		String.
		
		If `startIndex` is given, the search is performed within the substring
		of `this` String starting from `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.
		
		If `str` cannot be found, -1 is returned.</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the rightmost occurence of `str` within `this`
		String.
		
		If `startIndex` is given, the search is performed within the substring
		of `this` String from 0 to `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.
		
		If `str` cannot be found, -1 is returned.</haxe_doc>
		</lastIndexOf>
		<split public="1" set="method">
			<f a="delimiter">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Splits `this` String at each occurence of `delimiter`.
		
		If `this` String is the empty String "", the result is not consistent
		across targets and may either be `[]` (on Js, Cpp) or `[""]`.
		
		If `delimiter` is the empty String "", `this` String is split into an
		Array of `this.length` elements, where the elements correspond to the
		characters of `this` String.
		
		If `delimiter` is not found within `this` String, the result is an Array
		with one element, which equals `this` String.
		
		If `delimiter` is null, the result is unspecified.
		
		Otherwise, `this` String is split into parts at each occurence of
		`delimiter`. If `this` String starts (or ends) with [delimiter}, the
		result Array contains a leading (or trailing) empty String "" element.
		Two subsequent delimiters also result in an empty String "" element.</haxe_doc>
		</split>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the String itself.</haxe_doc>
		</toString>
		<substring public="1" set="method">
			<f a="startIndex:?endIndex">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the part of `this` String from `startIndex` to `endIndex`.
		
		If `startIndex` or `endIndex` are negative, 0 is used instead.
		
		If `startIndex` exceeds `endIndex`, they are swapped.
		
		If the (possibly swapped) `endIndex` is omitted or exceeds
		`this.length`, `this.length` is used instead.
		
		If the (possibly swapped) `startIndex` exceeds `this.length`, the empty
		String "" is returned.</haxe_doc>
		</substring>
		<charCodeAt public="1" get="inline" set="null" line="35">
			<f a="index">
				<x path="Int"/>
				<t path="Null"><x path="Int"/></t>
			</f>
			<haxe_doc>Returns the character code at position `index` of `this` String.
		
		If `index` is negative or exceeds `this.length`, null is returned.
		
		To obtain the character code of a single character, "x".code can be used
		instead to inline the character code at compile time. Note that this
		only works on String literals of length 1.</haxe_doc>
		</charCodeAt>
		<substr public="1" get="inline" set="null" line="39">
			<f a="pos:?len" v=":null">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns `len` characters of `this` String, starting at position `pos`.
		
		If `len` is omitted, all characters from position `pos` to the end of
		`this` String are included.
		
		If `pos` is negative, its value is calculated from the end of `this`
		String by `this.length + pos`. If this yields a negative value, 0 is
		used instead.
		
		If the calculated position + `len` exceeds `this.length`, the characters
		from that position to the end of `this` String are returned.
		
		If `len` is negative, the result is unspecified.</haxe_doc>
		</substr>
		<new public="1" set="method">
			<f a="string">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a copy from a given String.</haxe_doc>
		</new>
		<haxe_doc>The basic String class.
	
	A haxe String is immutable, it is not possible to modify individual
	characters. No method of this class changes the state of `this` String.
	
	Strings can be constructed using the string literal syntax "string value".
	
	String can be concatenated by using the + operator. If an operand is not a
	String, it is passed through Std.string() first.</haxe_doc>
		<meta><m n=":coreApi"/></meta>
	</class>
	<class path="Std" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/_std/Std.hx">
		<string public="1" set="method" line="35" static="1">
			<f a="s">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Converts any value to a String.

		If `s` is of `String`, `Int`, `Float` or `Bool`, its value is returned.

		If `s` is an instance of a class and that class or one of its parent classes has
		a `toString` method, that method is called. If no such method is present, the result
		is unspecified.

		If `s` is an enum constructor without argument, the constructor's name is returned. If
		arguments exists, the constructor's name followed by the String representations of
		the arguments is returned.

		If `s` is a structure, the field names along with their values are returned. The field order
		and the operator separating field names and values are unspecified.

		If s is null, "null" is returned.</haxe_doc>
		</string>
		<parseInt public="1" set="method" line="43" static="1">
			<f a="x">
				<c path="String"/>
				<t path="Null"><x path="Int"/></t>
			</f>
			<haxe_doc>Converts a `String` to an `Int`.

		Leading whitespaces are ignored.

		If `x` starts with 0x or 0X, hexadecimal notation is recognized where the following digits may
		contain 0-9 and A-F.

		Otherwise `x` is read as decimal number with 0-9 being allowed characters. `x` may also start with
		a - to denote a negative value.

		In decimal mode, parsing continues until an invalid character is detected, in which case the
		result up to that point is returned. For hexadecimal notation, the effect of invalid characters
		is unspecified.

		Leading 0s that are not part of the 0x/0X hexadecimal notation are ignored, which means octal
		notation is not supported.

		If the input cannot be recognized, the result is null.</haxe_doc>
		</parseInt>
		<haxe_doc>The Std class provides standard methods for manipulating basic types.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":keepInit"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Void" params="" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes">
		<this><x path="Void"/></this>
		<haxe_doc>The standard Void type. Only `null` values can be of the type `Void`.</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<abstract path="Float" params="" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes">
		<this><x path="Float"/></this>
		<haxe_doc><![CDATA[The standard Float type, this is a double-precision IEEE 64bit float.
	
	On static targets, null cannot be assigned to Float. If this is necessary,
	`Null<Float>` can be used instead.]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Int" params="" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes">
		<this><x path="Int"/></this>
		<to><icast><x path="Float"/></icast></to>
		<haxe_doc><![CDATA[The standard Int type. Its precision depends on the platform.
	
	On static targets, null cannot be assigned to Int. If this is necessary,
	`Null<Int>` can be used instead.]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="Null" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes">
		<c path="Null.T"/>
		<haxe_doc>`Null` can be useful in two cases. In order to document some methods
	that accepts or can return a `null` value, or for the Flash9 compiler and AS3
	generator to distinguish between base values that can be null and others that
	can't.</haxe_doc>
	</typedef>
	<abstract path="Bool" params="" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes">
		<this><x path="Bool"/></this>
		<haxe_doc><![CDATA[The standard Boolean type, which can either be true or false.
	
	On static targets, null cannot be assigned to Bool. If this is necessary,
	`Null<Bool>` can be used instead.]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Dynamic" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes">
		<this><x path="Dynamic"><c path="Dynamic.T"/></x></this>
		<haxe_doc>Dynamic is a special type which is compatible with all other types.
	
	Use of Dynamic should be minimized as it prevents several compiler
	checks and optimizations.</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="Iterator" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes">
		<a>
			<next set="method">
				<f a=""><c path="Iterator.T"/></f>
				<haxe_doc>Returns the current item of the Iterator and advances to the next one.
		
		This method is not required to check hasNext() first. A call to this
		method while hasNext() is false yields unspecified behavior.</haxe_doc>
			</next>
			<hasNext set="method">
				<f a=""><x path="Bool"/></f>
				<haxe_doc>Returns false if the iteration is complete, true otherwise.
		
		Usually iteration is considered to be complete if all elements of the
		underlying data structure were handled through calls to next(). However,
		in custom iterators any logic may be used to determine the completion
		state.</haxe_doc>
			</hasNext>
		</a>
		<haxe_doc>An Iterator is a structure that permits iteration over elements of type T.

	Any class with matching hasNext and next fields is considered an Iterator
	and can then be used e.g. in for-loops. This makes it easy to implement
	custom iterators.</haxe_doc>
	</typedef>
	<typedef path="Iterable" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes">
		<a><iterator set="method"><f a=""><t path="Iterator"><c path="Iterable.T"/></t></f></iterator></a>
		<haxe_doc>An Iterable is a data structure which has an iterator() method.
	See `Lambda` for generic functions on iterable structures.</haxe_doc>
	</typedef>
	<class path="ArrayAccess" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/StdTypes.hx" module="StdTypes" extern="1" interface="1"><haxe_doc>ArrayAccess is used to indicate a class that can be accessed using brackets.
	The type parameter represent the type of the elements stored.</haxe_doc></class>
	<class path="haxe.ds.StringMap" params="T" file="K:\Program Files\HaxeToolkit\haxe\std/js/_std/haxe/ds/StringMap.hx">
		<implements path="IMap">
			<c path="String"/>
			<c path="haxe.ds.StringMap.T"/>
		</implements>
		<h><d/></h>
		<set public="1" set="method" line="32">
			<f a="key:value">
				<c path="String"/>
				<c path="haxe.ds.StringMap.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<get public="1" set="method" line="36">
			<f a="key">
				<c path="String"/>
				<t path="Null"><c path="haxe.ds.StringMap.T"/></t>
			</f>
			<haxe_doc>See `Map.get`</haxe_doc>
		</get>
		<exists public="1" set="method" line="40">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<keys public="1" set="method" line="51">
			<f a=""><t path="Iterator"><c path="String"/></t></f>
			<haxe_doc>See `Map.keys`</haxe_doc>
		</keys>
		<iterator public="1" set="method" line="62">
			<f a=""><t path="Iterator"><c path="haxe.ds.StringMap.T"/></t></f>
			<haxe_doc>See `Map.iterator`</haxe_doc>
		</iterator>
		<new public="1" set="method" line="28">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringMap.</haxe_doc>
		</new>
		<haxe_doc>StringMap allows mapping of String keys to arbitrary values.
	
	See `Map` for documentation details.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="com.onquery.Context" params="" file="src/com/onquery/Context.hx">
		<extends path="haxe.ds.StringMap"><d/></extends>
		<_parent><c path="haxe.ds.StringMap"><d/></c></_parent>
		<getParent public="1" set="method" line="7"><f a=""><c path="haxe.ds.StringMap"><d/></c></f></getParent>
		<setParent public="1" set="method" line="8"><f a="parent">
	<c path="haxe.ds.StringMap"><d/></c>
	<c path="haxe.ds.StringMap"><d/></c>
</f></setParent>
		<get public="1" set="method" line="16" override="1"><f a="key">
	<c path="String"/>
	<t path="Null"><d/></t>
</f></get>
		<exists public="1" set="method" line="26" override="1"><f a="key">
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<keys public="1" set="method" line="36" override="1"><f a=""><t path="Iterator"><c path="String"/></t></f></keys>
		<getMap public="1" set="method" line="40"><f a=""><c path="haxe.ds.StringMap"><d/></c></f></getMap>
		<iterator public="1" set="method" line="56" override="1"><f a=""><t path="Iterator"><d/></t></f></iterator>
		<new public="1" set="method" line="11"><f a="?parent" v="null">
	<c path="haxe.ds.StringMap"><d/></c>
	<x path="Void"/>
</f></new>
	</class>
	<class path="com.onquery.OnQuery" params="" file="src/com/onquery/OnQuery.hx">
		<globalContext public="1" line="12" static="1"><c path="com.onquery.Context"/></globalContext>
		<watch public="1" set="method" line="16" static="1"><f a="target">
	<t path="com.onquery.EventTarget"/>
	<c path="com.onquery.Watcher"/>
</f></watch>
		<when public="1" set="method" line="20" static="1"><f a="query">
	<c path="String"/>
	<c path="com.onquery.signals.Signal"/>
</f></when>
		<getContext public="1" set="method" line="24" static="1"><f a="target">
	<t path="com.onquery.EventTarget"/>
	<c path="com.onquery.Context"/>
</f></getContext>
		<main set="method" line="40" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":keep"/></meta>
		</main>
		<meta>
			<m n=":expose"><e>"OnQuery"</e></m>
			<m n=":expose"/>
		</meta>
	</class>
	<typedef path="com.onquery.Operator" params="" file="src/com/onquery/OnQuery.hx" module="com.onquery.OnQuery"><f a=":">
	<d/>
	<d/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="com.onquery.EventListener" params="" file="src/com/onquery/OnQuery.hx" module="com.onquery.OnQuery"><f a="">
	<d/>
	<x path="Void"/>
</f></typedef>
	<typedef path="com.onquery.Event" params="" file="src/com/onquery/OnQuery.hx" module="com.onquery.OnQuery"><c path="js.html.Event"/></typedef>
	<typedef path="com.onquery.EventTarget" params="" file="src/com/onquery/OnQuery.hx" module="com.onquery.OnQuery"><c path="js.html.EventTarget"/></typedef>
	<typedef path="com.onquery.ContextEvent" params="" file="src/com/onquery/OnQuery.hx" module="com.onquery.OnQuery"><c path="js.html.Event"/></typedef>
	<typedef path="com.onquery.UInt" params="" file="src/com/onquery/OnQuery.hx" module="com.onquery.OnQuery"><x path="Int"/></typedef>
	<class path="com.onquery.Watcher" params="" file="src/com/onquery/Watcher.hx">
		<context><c path="com.onquery.Context"/></context>
		<bind public="1" set="method" line="14"><f a="query:handler:?options" v="::null">
	<c path="String"/>
	<t path="com.onquery.EventListener"/>
	<c path="haxe.ds.StringMap"><d/></c>
	<x path="Void"/>
</f></bind>
		<on public="1" set="method" line="18"><f a="query">
	<c path="String"/>
	<c path="com.onquery.signals.Signal"/>
</f></on>
		<unbind public="1" set="method" line="27"><f a="query:handler">
	<c path="String"/>
	<t path="com.onquery.EventListener"/>
	<x path="Void"/>
</f></unbind>
		<use public="1" set="method" line="31"><f a="data">
	<c path="haxe.ds.StringMap"><d/></c>
	<c path="com.onquery.Watcher"/>
</f></use>
		<new public="1" set="method" line="9"><f a="c">
	<c path="com.onquery.Context"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="com.onquery.collections.ListenersCollection" params="" file="src/com/onquery/collections/ListenersCollection.hx" interface="1">
		<addListener public="1" set="method">
			<f a="listener:?options">
				<t path="com.onquery.EventListener"/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Subscribes a listener.
 * @param	listener A function with arguments
 * that matches the value classes dispatched by the Signal.
 * If value classes are not specified (e.g. via Signal constructor), dispatch() can be called without arguments.
 * @return a ISlot, which contains the Function passed as the parameter</haxe_doc>
		</addListener>
		<removeListener public="1" set="method">
			<f a="listener">
				<t path="com.onquery.EventListener"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Unsubscribes a listener from the Signal.
 * @param	listener
 * @return a ISlot, which contains the Function passed as the parameter</haxe_doc>
		</removeListener>
		<removeAllListeners public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Unsubscribes all listeners from the Signal.</haxe_doc>
		</removeAllListeners>
		<invokeListeners public="1" set="method">
			<f a="event">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Dispatches an Dynamic to listeners.
 * @param	event	Any number of parameters to send to listeners. Will be type-checked against valueClasses.</haxe_doc>
		</invokeListeners>
	</class>
	<class path="com.onquery.collections.ListenersArray" params="" file="src/com/onquery/collections/ListenersArray.hx">
		<implements path="com.onquery.collections.ListenersCollection"/>
		<list><c path="List"><c path="com.onquery.collections.Slot"/></c></list>
		<removeListener public="1" set="method" line="12"><f a="listener">
	<t path="com.onquery.EventListener"/>
	<x path="Void"/>
</f></removeListener>
		<addListener public="1" set="method" line="18"><f a="listener:?options" v=":null">
	<t path="com.onquery.EventListener"/>
	<d/>
	<x path="Void"/>
</f></addListener>
		<invokeListeners public="1" set="method" line="26"><f a="event">
	<d/>
	<x path="Void"/>
</f></invokeListeners>
		<removeAllListeners public="1" set="method" line="38"><f a=""><x path="Void"/></f></removeAllListeners>
		<new public="1" set="method" line="8"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="com.onquery.collections.Slot" params="" file="src/com/onquery/collections/Slot.hx">
		<listener public="1"><t path="com.onquery.EventListener"/></listener>
		<options public="1"><d/></options>
		<new public="1" set="method" line="18">
			<f a="listener:options">
				<t path="com.onquery.EventListener"/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Creates and returns a new Slot Dynamic.
 *
 * @param listener The listener associated with the slot.
 * @param priority The priority of the slot.
 *</haxe_doc>
		</new>
		<haxe_doc>*</haxe_doc>
	</class>
	<class path="com.onquery.core.SignalToken" params="" file="src/com/onquery/core/SignalToken.hx">
		<currentTime line="9" static="1"><x path="Float"/></currentTime>
		<count public="1"><x path="Float"/></count>
		<time public="1"><x path="Float"/></time>
		<_signal><c path="com.onquery.signals.Signal"/></_signal>
		<getSignal public="1" set="method" line="17"><f a=""><c path="com.onquery.signals.Signal"/></f></getSignal>
		<setSignal public="1" set="method" line="19"><f a="value">
	<c path="com.onquery.signals.Signal"/>
	<c path="com.onquery.signals.Signal"/>
</f></setSignal>
		<refresh set="method" line="30"><f a="?event" v="null">
	<d/>
	<x path="Void"/>
</f></refresh>
		<reset public="1" set="method" line="35"><f a="?event" v="null">
	<d/>
	<x path="Void"/>
</f></reset>
		<new public="1" set="method" line="11"><f a="?signal" v="null">
	<c path="com.onquery.signals.Signal"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="com.onquery.core.Connector" params="" file="src/com/onquery/core/Connector.hx">
		<OPEN public="1" line="20" static="1"><c path="com.onquery.core.Connector"/></OPEN>
		<CLOSE public="1" line="21" static="1"><c path="com.onquery.core.Connector"/></CLOSE>
		<NOT public="1" line="23" static="1"><c path="com.onquery.core.Connector"/></NOT>
		<OR public="1" line="33" static="1"><c path="com.onquery.core.Connector"/></OR>
		<AND public="1" line="45" static="1"><c path="com.onquery.core.Connector"/></AND>
		<NEXT public="1" line="57" static="1"><c path="com.onquery.core.Connector"/></NEXT>
		<registry public="1" line="72" static="1"><c path="haxe.ds.StringMap"><c path="com.onquery.core.Connector"/></c></registry>
		<precedence public="1"><x path="Int"/></precedence>
		<argc public="1"><x path="Int"/></argc>
		<leftAssociative public="1"><x path="Bool"/></leftAssociative>
		<connect public="1"><f a="">
	<c path="List"><c path="com.onquery.core.SignalToken"/></c>
	<c path="com.onquery.core.SignalToken"/>
</f></connect>
		<new public="1" set="method" line="12"><f a="connect:?argc:?precedence:?leftAssociative" v=":0:0:false">
	<f a="">
		<c path="List"><c path="com.onquery.core.SignalToken"/></c>
		<c path="com.onquery.core.SignalToken"/>
	</f>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="com.onquery.core.Interpreter" params="" file="src/com/onquery/core/Interpreter.hx">
		<compile public="1" set="method" line="10" static="1"><f a="expression:context">
	<c path="String"/>
	<c path="com.onquery.Context"/>
	<c path="com.onquery.signals.Signal"/>
</f></compile>
		<build set="method" line="34" static="1"><f a="prototype:context">
	<c path="com.onquery.core.SignalPrototype"/>
	<c path="com.onquery.Context"/>
	<c path="com.onquery.signals.Signal"/>
</f></build>
		<interpt public="1" set="method" line="82" static="1"><f a="input">
	<c path="String"/>
	<c path="List"><d/></c>
</f></interpt>
	</class>
	<class path="com.onquery.core.SignalPrototype" params="" file="src/com/onquery/core/SignalPrototype.hx">
		<type public="1"><c path="String"/></type>
		<properties public="1"><c path="List"><d/></c></properties>
		<new public="1" set="method" line="11"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="com.onquery.filters.Filter" params="" file="src/com/onquery/filters/Filter.hx" interface="1"><match public="1" set="method"><f a="object">
	<d/>
	<x path="Bool"/>
</f></match></class>
	<class path="com.onquery.filters.PropertyFilter" params="" file="src/com/onquery/filters/PropertyFilter.hx">
		<implements path="com.onquery.filters.Filter"/>
		<operators line="23" static="1"><c path="haxe.ds.StringMap"><t path="com.onquery.Operator"/></c></operators>
		<contains set="method" line="33" static="1"><f a="left:right">
	<d/>
	<d/>
	<x path="Bool"/>
</f></contains>
		<exists set="method" line="37" static="1"><f a="left:right">
	<d/>
	<d/>
	<x path="Bool"/>
</f></exists>
		<differs set="method" line="40" static="1"><f a="left:right">
	<d/>
	<d/>
	<x path="Bool"/>
</f></differs>
		<equals set="method" line="44" static="1"><f a="left:right">
	<d/>
	<d/>
	<x path="Bool"/>
</f></equals>
		<boolEquals set="method" line="47" static="1"><f a="left:right">
	<d/>
	<d/>
	<x path="Bool"/>
</f></boolEquals>
		<greaterThan set="method" line="51" static="1"><f a="left:right">
	<d/>
	<d/>
	<x path="Bool"/>
</f></greaterThan>
		<lessThan set="method" line="55" static="1"><f a="left:right">
	<d/>
	<d/>
	<x path="Bool"/>
</f></lessThan>
		<name public="1"><c path="String"/></name>
		<operator public="1"><c path="String"/></operator>
		<value public="1"><c path="String"/></value>
		<match public="1" set="method" line="16"><f a="object">
	<d/>
	<x path="Bool"/>
</f></match>
		<new public="1" set="method" line="10"><f a="name:operator:value">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="com.onquery.pseudos.Pseudo" params="" file="src/com/onquery/pseudos/Pseudo.hx">
		<getInstance public="1" set="method" line="23" static="1"><f a="name:value">
	<c path="String"/>
	<c path="String"/>
	<c path="com.onquery.pseudos.Pseudo"/>
</f></getInstance>
		<_name><c path="String"/></_name>
		<_value><c path="String"/></_value>
		<getName public="1" set="method" line="13"><f a=""><c path="String"/></f></getName>
		<setName public="1" set="method" line="14"><f a="value">
	<c path="String"/>
	<c path="String"/>
</f></setName>
		<getValue public="1" set="method" line="16"><f a=""><c path="String"/></f></getValue>
		<setValue public="1" set="method" line="17"><f a="val">
	<c path="String"/>
	<c path="String"/>
</f></setValue>
		<attach public="1" set="method" line="19"><f a="signal">
	<c path="com.onquery.signals.Signal"/>
	<c path="com.onquery.signals.Signal"/>
</f></attach>
		<new public="1" set="method" line="8"><f a="n">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="com.onquery.pseudos.DelayPseudo" params="" file="src/com/onquery/pseudos/DelayPseudo.hx">
		<extends path="com.onquery.pseudos.Pseudo"/>
		<implements path="com.onquery.filters.Filter"/>
		<_signal><c path="com.onquery.signals.Signal"/></_signal>
		<delayed><x path="Bool"/></delayed>
		<attach public="1" set="method" line="13" override="1"><f a="signal">
	<c path="com.onquery.signals.Signal"/>
	<c path="com.onquery.signals.Signal"/>
</f></attach>
		<match public="1" set="method" line="19"><f a="event">
	<d/>
	<x path="Bool"/>
</f></match>
		<new public="1" set="method" line="10"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="com.onquery.pseudos.PausePseudo" params="" file="src/com/onquery/pseudos/PausePseudo.hx">
		<extends path="com.onquery.pseudos.Pseudo"/>
		<implements path="com.onquery.filters.Filter"/>
		<_signal><c path="com.onquery.signals.Signal"/></_signal>
		<paused><x path="Bool"/></paused>
		<timer><c path="haxe.Timer"/></timer>
		<lastEvent><d/></lastEvent>
		<attach public="1" set="method" line="16" override="1"><f a="signal">
	<c path="com.onquery.signals.Signal"/>
	<c path="com.onquery.signals.Signal"/>
</f></attach>
		<match public="1" set="method" line="22"><f a="event">
	<d/>
	<x path="Bool"/>
</f></match>
		<onPause set="method" line="36"><f a=""><x path="Void"/></f></onPause>
		<new public="1" set="method" line="13"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="com.onquery.pseudos.RewindPseudo" params="" file="src/com/onquery/pseudos/RewindPseudo.hx">
		<extends path="com.onquery.pseudos.Pseudo"/>
		<rewinder><c path="com.onquery.signals.Signal"/></rewinder>
		<attach public="1" set="method" line="13" override="1"><f a="signal">
	<c path="com.onquery.signals.Signal"/>
	<c path="com.onquery.signals.Signal"/>
</f></attach>
		<new public="1" set="method" line="9"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="com.onquery.pseudos.ThrottlePseudo" params="" file="src/com/onquery/pseudos/ThrottlePseudo.hx">
		<extends path="com.onquery.pseudos.Pseudo"/>
		<implements path="com.onquery.filters.Filter"/>
		<_signal><c path="com.onquery.signals.Signal"/></_signal>
		<throttling><x path="Bool"/></throttling>
		<timer><c path="haxe.Timer"/></timer>
		<attach public="1" set="method" line="15" override="1"><f a="signal">
	<c path="com.onquery.signals.Signal"/>
	<c path="com.onquery.signals.Signal"/>
</f></attach>
		<match public="1" set="method" line="21"><f a="event">
	<d/>
	<x path="Bool"/>
</f></match>
		<onThrottle set="method" line="30"><f a=""><x path="Void"/></f></onThrottle>
		<new public="1" set="method" line="12"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="com.onquery.signals.CoreSignal" params="" file="src/com/onquery/signals/CoreSignal.hx">
		<implements path="com.onquery.collections.ListenersCollection"/>
		<listeners public="1"><c path="com.onquery.collections.ListenersCollection"/></listeners>
		<_context><c path="com.onquery.Context"/></_context>
		<_type><c path="String"/></_type>
		<getContext public="1" set="method" line="20"><f a=""><c path="com.onquery.Context"/></f></getContext>
		<getTarget public="1" set="method" line="21"><f a=""><t path="com.onquery.EventTarget"/></f></getTarget>
		<getType public="1" set="method" line="23"><f a=""><c path="String"/></f></getType>
		<setType public="1" set="method" line="24"><f a="value">
	<c path="String"/>
	<c path="String"/>
</f></setType>
		<addListener public="1" set="method" line="27">
			<f a="listener:?options" v=":null">
				<t path="com.onquery.EventListener"/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>@inheritDoc</haxe_doc>
		</addListener>
		<removeListener public="1" set="method" line="32">
			<f a="listener">
				<t path="com.onquery.EventListener"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@inheritDoc</haxe_doc>
		</removeListener>
		<removeAllListeners public="1" set="method" line="37">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@inheritDoc</haxe_doc>
		</removeAllListeners>
		<invokeListeners public="1" set="method" line="42">
			<f a="event">
				<t path="com.onquery.Event"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@inheritDoc</haxe_doc>
		</invokeListeners>
		<new public="1" set="method" line="14"><f a="c">
	<c path="com.onquery.Context"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="com.onquery.signals.Signal" params="" file="src/com/onquery/signals/Signal.hx">
		<extends path="com.onquery.signals.CoreSignal"/>
		<filters public="1"><c path="List"><c path="com.onquery.filters.Filter"/></c></filters>
		<setType public="1" set="method" line="17" override="1"><f a="t">
	<c path="String"/>
	<c path="String"/>
</f></setType>
		<dispose public="1" set="method" line="23"><f a="?event" v="null">
	<t path="com.onquery.Event"/>
	<x path="Void"/>
</f></dispose>
		<invokeListeners public="1" set="method" line="28" override="1"><f a="event">
	<d/>
	<x path="Void"/>
</f></invokeListeners>
		<new public="1" set="method" line="10"><f a="c">
	<c path="com.onquery.Context"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="com.onquery.signals.ConnectedSignal" params="" file="src/com/onquery/signals/ConnectedSignal.hx">
		<extends path="com.onquery.signals.Signal"/>
		<queue public="1"><c path="List"><d/></c></queue>
		<_rewinder><c path="com.onquery.signals.Signal"/></_rewinder>
		<setRewinder public="1" set="method" line="15"><f a="value">
	<c path="com.onquery.signals.Signal"/>
	<c path="com.onquery.signals.Signal"/>
</f></setRewinder>
		<rewind public="1" set="method" line="33"><f a="?event" v="null">
	<d/>
	<x path="Void"/>
</f></rewind>
		<recheck public="1" set="method" line="41"><f a="?event" v="null">
	<d/>
	<x path="Void"/>
</f></recheck>
		<reduce public="1" set="method" line="48"><f a=""><c path="com.onquery.core.SignalToken"/></f></reduce>
		<setTokens set="method" line="93"><f a="tokens">
	<c path="List"><d/></c>
	<x path="Void"/>
</f></setTokens>
		<new public="1" set="method" line="26"><f a="c:t">
	<c path="com.onquery.Context"/>
	<c path="List"><d/></c>
	<x path="Void"/>
</f></new>
		<meta><m n=":expose"><e>"ConnectedSignal"</e></m></meta>
	</class>
	<class path="haxe.EnumTools" params="" file="K:\Program Files\HaxeToolkit\haxe\std/haxe/EnumTools.hx" extern="1">
		<getName public="1" params="T" get="inline" set="null" line="41" static="1">
			<f a="e">
				<x path="Enum"><c path="getName.T"/></x>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the name of enum `e`, including its path.
		
		If `e` is inside a package, the package structure is returned dot-
		separated, with another dot separating the enum name:
			pack1.pack2.(...).packN.EnumName
		If `e` is a sub-type of a haxe module, that module is not part of the
		package structure.
			
		If `e` has no package, the enum name is returned.
		
		If `e` is null, the result is unspecified.
		
		The enum name does not include any type parameters.</haxe_doc>
		</getName>
		<createByName public="1" params="T" get="inline" set="null" line="54" static="1">
			<f a="e:constr:?params" v="::null">
				<x path="Enum"><c path="createByName.T"/></x>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createByName.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor `constr` with
		arguments `params`.
		
		If `e` or `constr` is null, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createByName>
		<createByIndex public="1" params="T" get="inline" set="null" line="70" static="1">
			<f a="e:index:?params" v="::null">
				<x path="Enum"><c path="createByIndex.T"/></x>
				<x path="Int"/>
				<c path="Array"><d/></c>
				<c path="createByIndex.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor number
		`index` with arguments `params`.
		
		The constructor indices are preserved from haxe syntax, so the first
		declared is index 0, the next index 1 etc.
		
		If `e` or `constr` is null, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createByIndex>
		<createAll public="1" params="T" get="inline" set="null" line="87" static="1">
			<f a="e">
				<x path="Enum"><c path="createAll.T"/></x>
				<c path="Array"><c path="createAll.T"/></c>
			</f>
			<haxe_doc>Returns a list of all constructors of enum `e` that require no
		arguments.
		
		This may return the empty Array [] if all constructors of `e` require
		arguments.
		
		Otherwise an instance of `e` constructed through each of its non-
		argument constructors is returned, in the order of the constructor
		declaration.
		
		If `e` is null, the result is unspecified.</haxe_doc>
		</createAll>
		<getConstructors public="1" params="T" get="inline" set="null" line="99" static="1">
			<f a="e">
				<x path="Enum"><c path="getConstructors.T"/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns a list of the names of all constructors of enum `e`.
		
		The order of the constructor names in the returned Array is preserved
		from the original syntax.
		
		If `c` is null, the result is unspecified.</haxe_doc>
		</getConstructors>
	</class>
	<class path="haxe.EnumValueTools" params="" file="K:\Program Files\HaxeToolkit\haxe\std/haxe/EnumTools.hx" module="haxe.EnumTools" extern="1">
		<equals public="1" params="T" get="inline" set="null" line="114" static="1">
			<f a="a:b">
				<c path="equals.T"/>
				<c path="equals.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Recursively compares two enum instances `a` and `b` by value.
		
		Unlike `a == b`, this function performs a deep equality check on the
		arguments of the constructors, if exists.
		
		If `a` or `b` are null, the result is unspecified.</haxe_doc>
		</equals>
		<getName public="1" get="inline" set="null" line="125" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the constructor name of enum instance `e`.
		
		The result String does not contain any constructor arguments.
		
		If `e` is null, the result is unspecified.</haxe_doc>
		</getName>
		<getParameters public="1" get="inline" set="null" line="139" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="Array"><d/></c>
			</f>
			<haxe_doc>Returns a list of the constructor arguments of enum instance `e`.
		
		If `e` has no arguments, the result is [].
		
		Otherwise the result are the values that were used as arguments to `e`,
		in the order of their declaration.
		
		If `e` is null, the result is unspecified.</haxe_doc>
		</getParameters>
		<getIndex public="1" get="inline" set="null" line="151" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the index of enum instance `e`.
		
		This corresponds to the original syntactic position of `e`. The index of
		the first declared constructor is 0, the next one is 1 etc.
		
		If `e` is null, the result is unspecified.</haxe_doc>
		</getIndex>
	</class>
	<typedef path="haxe.PosInfos" params="" file="K:\Program Files\HaxeToolkit\haxe\std/haxe/PosInfos.hx">
		<a>
			<methodName><c path="String"/></methodName>
			<lineNumber><x path="Int"/></lineNumber>
			<fileName><c path="String"/></fileName>
			<customParams>
				<c path="Array"><d/></c>
				<meta><m n=":optional"/></meta>
			</customParams>
			<className><c path="String"/></className>
		</a>
		<haxe_doc>PosInfos is a magic type which can be used to generate position information
	into the output for debugging use.
	
	If a function has a final optional argument of this type, i.e.
	(..., ?pos:haxe.PosInfos), each call to that function which does not assign
	a value to that argument has its position added as call argument.
	
	This can be used to track positions of calls in e.g. a unit testing
	framework.</haxe_doc>
	</typedef>
	<class path="haxe.Timer" params="" file="K:\Program Files\HaxeToolkit\haxe\std/haxe/Timer.hx">
		<delay public="1" set="method" line="126" static="1">
			<f a="f:time_ms">
				<f a=""><x path="Void"/></f>
				<x path="Int"/>
				<c path="haxe.Timer"/>
			</f>
			<haxe_doc>Invokes `f` after `time_ms` milliseconds.
		
		This is a convenience function for creating a new Timer instance with
		`time_ms` as argument, binding its run() method to `f` and then stopping
		`this` Timer upon the first invocation.
		
		If `f` is null, the result is unspecified.</haxe_doc>
		</delay>
		<id><t path="Null"><x path="Int"/></t></id>
		<stop public="1" set="method" line="83">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Stops `this` Timer.
		
		After calling this method, no additional invocations of `this.run`
		will occur.
		
		It is not possible to restart `this` Timer once stopped.</haxe_doc>
		</stop>
		<run public="1" set="dynamic" line="113">
			<f a=""><x path="Void"/></f>
			<haxe_doc>This method is invoked repeatedly on `this` Timer.
		
		It can be overridden in a subclass, or rebound directly to a custom
		function:
			var timer = new haxe.Timer(1000); // 1000ms delay
			timer.run = function() { ... }
			
		Once bound, it can still be rebound to different functions until `this`
		Timer is stopped through a call to `this.stop`.</haxe_doc>
		</run>
		<new public="1" set="method" line="59">
			<f a="time_ms">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new timer that will run every `time_ms` milliseconds.
		
		After creating the Timer instance, it calls `this].run` repeatedly,
		with delays of `time_ms` milliseconds, until `this.stop` is called.
		
		The first invocation occurs after `time_ms` milliseconds, not
		immediately.
		
		The accuracy of this may be platform-dependent.</haxe_doc>
		</new>
		<haxe_doc>The Timer class allows you to create asynchronous timers on platforms that
	support events.
	
	The intended usage is to create an instance of the Timer class with a given
	interval, set its run() method to a custom function to be invoked and
	eventually call stop() to stop the Timer.

	Note that a running Timer may or may not prevent the program to exit 
	automatically when main() returns.
	
	It is also possible to extend this class and override its run() method in
	the child class.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<abstract path="haxe.ds.HashMap" params="K:V" file="K:\Program Files\HaxeToolkit\haxe\std/haxe/ds/HashMap.hx">
		<this><a>
	<values><c path="haxe.ds.IntMap"><c path="haxe.ds.HashMap.V"/></c></values>
	<keys><c path="haxe.ds.IntMap"><c path="haxe.ds.HashMap.K"/></c></keys>
</a></this>
		<impl><class path="haxe.ds._HashMap.HashMap_Impl_" params="" file="K:\Program Files\HaxeToolkit\haxe\std/haxe/ds/HashMap.hx" private="1" module="haxe.ds.HashMap"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="js.Boot" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/Boot.hx">
		<getClass get="inline" set="null" line="70" static="1"><f a="o">
	<d/>
	<d/>
</f></getClass>
		<__string_rec set="method" line="78" static="1">
			<f a="o:s">
				<a>
					<toString set="null"><f a=""><c path="String"/></f></toString>
					<length set="null"><x path="Int"/></length>
					<hasOwnProperty set="null"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></hasOwnProperty>
					<__enum__ set="null"><x path="Bool"/></__enum__>
				</a>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":ifFeature"><e>"has_enum"</e></m></meta>
		</__string_rec>
		<__interfLoop set="method" line="150" static="1"><f a="cc:cl">
	<d/>
	<d/>
	<x path="Bool"/>
</f></__interfLoop>
		<__instanceof set="method" line="165" static="1">
			<f a="o:cl">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":ifFeature"><e>"typed_catch"</e></m></meta>
		</__instanceof>
		<__cast set="method" line="201" static="1">
			<f a="o:t">
				<d/>
				<d/>
				<unknown/>
			</f>
			<meta><m n=":ifFeature"><e>"typed_cast"</e></m></meta>
		</__cast>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="js.html.EventTarget" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/EventTarget.hx" extern="1">
		<addEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<t path="js.html.EventListener"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></addEventListener>
		<dispatchEvent public="1" set="method"><f a="event">
	<c path="js.html.Event"/>
	<x path="Bool"/>
</f></dispatchEvent>
		<removeEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<t path="js.html.EventListener"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<haxe_doc><![CDATA[An <code>EventTarget</code> is a DOM interface implemented by objects that can receive DOM events and have listeners for them. The most common <code>EventTarget</code>s are <a rel="internal" href="/api/js/html/Element" title="en/DOM/element">DOM elements</a>, although other objects can be <code>EventTarget</code>s too, for example <a rel="internal" href="/api/js/html/Document" title="en/DOM/document">document</a>, <a rel="internal" href="/api/js/html/DOMWindow" title="en/DOM/window">window</a>, <a rel="internal" href="/api/js/html/XMLHttpRequest" title="en/XMLHttpRequest">XMLHttpRequest</a>, and others.
<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/EventTarget">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"EventTarget"</e></m></meta>
	</class>
	<class path="js.html.Node" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Node.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<ATTRIBUTE_NODE public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></ATTRIBUTE_NODE>
		<CDATA_SECTION_NODE public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></CDATA_SECTION_NODE>
		<COMMENT_NODE public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></COMMENT_NODE>
		<DOCUMENT_FRAGMENT_NODE public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></DOCUMENT_FRAGMENT_NODE>
		<DOCUMENT_NODE public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></DOCUMENT_NODE>
		<DOCUMENT_POSITION_CONTAINED_BY public="1" get="inline" set="null" line="53" static="1"><x path="Int"/></DOCUMENT_POSITION_CONTAINED_BY>
		<DOCUMENT_POSITION_CONTAINS public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></DOCUMENT_POSITION_CONTAINS>
		<DOCUMENT_POSITION_DISCONNECTED public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></DOCUMENT_POSITION_DISCONNECTED>
		<DOCUMENT_POSITION_FOLLOWING public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></DOCUMENT_POSITION_FOLLOWING>
		<DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC>
		<DOCUMENT_POSITION_PRECEDING public="1" get="inline" set="null" line="63" static="1"><x path="Int"/></DOCUMENT_POSITION_PRECEDING>
		<DOCUMENT_TYPE_NODE public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></DOCUMENT_TYPE_NODE>
		<ELEMENT_NODE public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></ELEMENT_NODE>
		<ENTITY_NODE public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></ENTITY_NODE>
		<ENTITY_REFERENCE_NODE public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></ENTITY_REFERENCE_NODE>
		<NOTATION_NODE public="1" get="inline" set="null" line="73" static="1"><x path="Int"/></NOTATION_NODE>
		<PROCESSING_INSTRUCTION_NODE public="1" get="inline" set="null" line="75" static="1"><x path="Int"/></PROCESSING_INSTRUCTION_NODE>
		<TEXT_NODE public="1" get="inline" set="null" line="77" static="1"><x path="Int"/></TEXT_NODE>
		<attributes public="1" set="null"><c path="js.html.NamedNodeMap"/></attributes>
		<baseURI public="1" set="null"><c path="String"/></baseURI>
		<childNodes public="1" set="null"><c path="js.html.NodeList"/></childNodes>
		<firstChild public="1" set="null"><c path="js.html.Node"/></firstChild>
		<lastChild public="1" set="null"><c path="js.html.Node"/></lastChild>
		<localName public="1" set="null"><c path="String"/></localName>
		<namespaceURI public="1" set="null"><c path="String"/></namespaceURI>
		<nextSibling public="1" set="null"><c path="js.html.Node"/></nextSibling>
		<nodeName public="1" set="null"><c path="String"/></nodeName>
		<nodeType public="1" set="null"><x path="Int"/></nodeType>
		<nodeValue public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</nodeValue>
		<ownerDocument public="1" set="null"><c path="js.html.Document"/></ownerDocument>
		<parentElement public="1" set="null"><c path="js.html.Element"/></parentElement>
		<parentNode public="1" set="null"><c path="js.html.Node"/></parentNode>
		<prefix public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</prefix>
		<previousSibling public="1" set="null"><c path="js.html.Node"/></previousSibling>
		<textContent public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</textContent>
		<appendChild public="1" set="method"><f a="newChild">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></appendChild>
		<cloneNode public="1" set="method"><f a="deep">
	<x path="Bool"/>
	<c path="js.html.Node"/>
</f></cloneNode>
		<compareDocumentPosition public="1" set="method"><f a="other">
	<c path="js.html.Node"/>
	<x path="Int"/>
</f></compareDocumentPosition>
		<contains public="1" set="method"><f a="other">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></contains>
		<hasAttributes public="1" set="method"><f a=""><x path="Bool"/></f></hasAttributes>
		<hasChildNodes public="1" set="method"><f a=""><x path="Bool"/></f></hasChildNodes>
		<insertBefore public="1" set="method"><f a="newChild:refChild">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></insertBefore>
		<isDefaultNamespace public="1" set="method"><f a="?namespaceURI">
	<c path="String"/>
	<x path="Bool"/>
</f></isDefaultNamespace>
		<isEqualNode public="1" set="method"><f a="other">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></isEqualNode>
		<isSameNode public="1" set="method"><f a="other">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></isSameNode>
		<isSupported public="1" set="method"><f a="feature:?version">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isSupported>
		<lookupNamespaceURI public="1" set="method"><f a="?prefix">
	<c path="String"/>
	<c path="String"/>
</f></lookupNamespaceURI>
		<lookupPrefix public="1" set="method"><f a="?namespaceURI">
	<c path="String"/>
	<c path="String"/>
</f></lookupPrefix>
		<normalize public="1" set="method"><f a=""><x path="Void"/></f></normalize>
		<removeChild public="1" set="method"><f a="oldChild">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></removeChild>
		<replaceChild public="1" set="method"><f a="newChild:oldChild">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></replaceChild>
		<haxe_doc><![CDATA[A <code>Node</code> is an interface from which a number of DOM types inherit, and allows these various types to be treated (or tested) similarly.<br> The following all inherit this interface and its methods and properties (though they may return null in particular cases where not relevant; or throw an exception when adding children to a node type for which no children can exist): <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Element">Element</a></code>
, <code><a rel="custom" href="/api/js/html/Attr">Attr</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/CharacterData">CharacterData</a></code>
 (which <code><a rel="custom" href="/api/js/html/Text">Text</a></code>
, <code><a rel="custom" href="/api/js/html/Comment">Comment</a></code>
, and <code><a rel="custom" href="/api/js/html/CDATASection">CDATASection</a></code>
 inherit), <code><a rel="custom" href="/api/js/html/ProcessingInstruction">ProcessingInstruction</a></code>
, <code><a rel="custom" href="/api/js/html/DocumentFragment">DocumentFragment</a></code>
, <code><a rel="custom" href="/api/js/html/DocumentType">DocumentType</a></code>
, <code><a rel="custom" href="/api/js/html/Notation">Notation</a></code>
, <code><a rel="custom" href="/api/js/html/Entity">Entity</a></code>
, <code><a rel="custom" href="/api/js/html/EntityReference">EntityReference</a></code><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Node">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Node"</e></m></meta>
	</class>
	<class path="js.html.Element" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Element.hx" extern="1">
		<extends path="js.html.Node"/>
		<ALLOW_KEYBOARD_INPUT public="1" get="inline" set="null" line="90" static="1"><x path="Int"/></ALLOW_KEYBOARD_INPUT>
		<accessKey public="1"><c path="String"/></accessKey>
		<childElementCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of child nodes that are elements.</haxe_doc>
		</childElementCount>
		<children public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[A live <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/XPCOM_Interface_Reference/nsIDOMNodeList&amp;ident=nsIDOMNodeList" class="new">nsIDOMNodeList</a></code>
 of the current child elements.]]></haxe_doc>
		</children>
		<classList public="1" set="null">
			<c path="js.html.DOMTokenList"/>
			<haxe_doc>Token list of class attribute</haxe_doc>
		</classList>
		<className public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the class of the element.</haxe_doc>
		</className>
		<clientHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The inner height of an element.</haxe_doc>
		</clientHeight>
		<clientLeft public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The width of the left border of an element.</haxe_doc>
		</clientLeft>
		<clientTop public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The width of the top border of an element.</haxe_doc>
		</clientTop>
		<clientWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The inner width of an element.</haxe_doc>
		</clientWidth>
		<contentEditable public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets whether or not the element is editable. Setter throws DOMException.</haxe_doc>
		</contentEditable>
		<dataset public="1" set="null">
			<d><c path="String"/></d>
			<haxe_doc>Allows access to read and write custom data attributes on the element.</haxe_doc>
		</dataset>
		<dir public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the directionality of the element.</haxe_doc>
		</dir>
		<draggable public="1"><x path="Bool"/></draggable>
		<dropzone public="1"><c path="String"/></dropzone>
		<firstElementChild public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[The first direct child element of an element, or <code>null</code> if the element has no child elements.]]></haxe_doc>
		</firstElementChild>
		<hidden public="1"><x path="Bool"/></hidden>
		<id public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the id of the element.</haxe_doc>
		</id>
		<innerHTML public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the markup of the element's content. Setter throws DOMException.</haxe_doc>
		</innerHTML>
		<innerText public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</innerText>
		<isContentEditable public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether or not the content of the element can be edited. Read only.</haxe_doc>
		</isContentEditable>
		<lang public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the language of an element's attributes, text, and element contents.</haxe_doc>
		</lang>
		<lastElementChild public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[The last direct child element of an element, or <code>null</code> if the element has no child elements.]]></haxe_doc>
		</lastElementChild>
		<nextElementSibling public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[The element immediately following the given one in the tree, or <code>null</code> if there's no sibling node.]]></haxe_doc>
		</nextElementSibling>
		<offsetHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The height of an element, relative to the layout.</haxe_doc>
		</offsetHeight>
		<offsetLeft public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The distance from this element's left border to its <code>offsetParent</code>'s left border.]]></haxe_doc>
		</offsetLeft>
		<offsetParent public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>The element from which all offset calculations are currently computed.</haxe_doc>
		</offsetParent>
		<offsetTop public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The distance from this element's top border to its <code>offsetParent</code>'s top border.]]></haxe_doc>
		</offsetTop>
		<offsetWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The width of an element, relative to the layout.</haxe_doc>
		</offsetWidth>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onbeforecopy public="1"><t path="js.html.EventListener"/></onbeforecopy>
		<onbeforecut public="1"><t path="js.html.EventListener"/></onbeforecut>
		<onbeforepaste public="1"><t path="js.html.EventListener"/></onbeforepaste>
		<onblur public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the blur event.</haxe_doc>
		</onblur>
		<onchange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the change event.</haxe_doc>
		</onchange>
		<onclick public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the click event.</haxe_doc>
		</onclick>
		<oncontextmenu public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the contextmenu event.</haxe_doc>
		</oncontextmenu>
		<oncopy public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the copy event.</haxe_doc>
		</oncopy>
		<oncut public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the cut event.</haxe_doc>
		</oncut>
		<ondblclick public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the dblclick event.</haxe_doc>
		</ondblclick>
		<ondrag public="1"><t path="js.html.EventListener"/></ondrag>
		<ondragend public="1"><t path="js.html.EventListener"/></ondragend>
		<ondragenter public="1"><t path="js.html.EventListener"/></ondragenter>
		<ondragleave public="1"><t path="js.html.EventListener"/></ondragleave>
		<ondragover public="1"><t path="js.html.EventListener"/></ondragover>
		<ondragstart public="1"><t path="js.html.EventListener"/></ondragstart>
		<ondrop public="1"><t path="js.html.EventListener"/></ondrop>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onfocus public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the focus event.</haxe_doc>
		</onfocus>
		<onfullscreenchange public="1"><t path="js.html.EventListener"/></onfullscreenchange>
		<onfullscreenerror public="1"><t path="js.html.EventListener"/></onfullscreenerror>
		<oninput public="1"><t path="js.html.EventListener"/></oninput>
		<oninvalid public="1"><t path="js.html.EventListener"/></oninvalid>
		<onkeydown public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the keydown event.</haxe_doc>
		</onkeydown>
		<onkeypress public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the keypress event.</haxe_doc>
		</onkeypress>
		<onkeyup public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the keyup event.</haxe_doc>
		</onkeyup>
		<onload public="1"><t path="js.html.EventListener"/></onload>
		<onmousedown public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mousedown event.</haxe_doc>
		</onmousedown>
		<onmousemove public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mousemove event.</haxe_doc>
		</onmousemove>
		<onmouseout public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mouseout event.</haxe_doc>
		</onmouseout>
		<onmouseover public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mouseover event.</haxe_doc>
		</onmouseover>
		<onmouseup public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mouseup event.</haxe_doc>
		</onmouseup>
		<onmousewheel public="1"><t path="js.html.EventListener"/></onmousewheel>
		<onpaste public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the paste event.</haxe_doc>
		</onpaste>
		<onreset public="1"><t path="js.html.EventListener"/></onreset>
		<onscroll public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the scroll event.</haxe_doc>
		</onscroll>
		<onsearch public="1"><t path="js.html.EventListener"/></onsearch>
		<onselect public="1"><t path="js.html.EventListener"/></onselect>
		<onselectstart public="1"><t path="js.html.EventListener"/></onselectstart>
		<onsubmit public="1"><t path="js.html.EventListener"/></onsubmit>
		<ontouchcancel public="1"><t path="js.html.EventListener"/></ontouchcancel>
		<ontouchend public="1"><t path="js.html.EventListener"/></ontouchend>
		<ontouchmove public="1"><t path="js.html.EventListener"/></ontouchmove>
		<ontouchstart public="1"><t path="js.html.EventListener"/></ontouchstart>
		<outerHTML public="1">
			<c path="String"/>
			<haxe_doc>Gets the markup of the element including its content. When used as a setter, replaces the element with nodes parsed from the given string. Setter throws DOMException.</haxe_doc>
		</outerHTML>
		<outerText public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</outerText>
		<previousElementSibling public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[The element immediately preceding the given one in the tree, or <code>null</code> if there is no sibling element.]]></haxe_doc>
		</previousElementSibling>
		<pseudo public="1"><c path="String"/></pseudo>
		<scrollHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The scroll view height of an element.</haxe_doc>
		</scrollHeight>
		<scrollLeft public="1">
			<x path="Int"/>
			<haxe_doc>Gets/sets the left scroll offset of an element.</haxe_doc>
		</scrollLeft>
		<scrollTop public="1">
			<x path="Int"/>
			<haxe_doc>Gets/sets the top scroll offset of an element.</haxe_doc>
		</scrollTop>
		<scrollWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The scroll view width of an element.</haxe_doc>
		</scrollWidth>
		<spellcheck public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Controls <a title="en/Controlling_spell_checking_in_HTML_forms" rel="internal" href="https://developer.mozilla.org/en/HTML/Controlling_spell_checking_in_HTML_forms">spell-checking</a> (present on all HTML&nbsp;elements)]]></haxe_doc>
		</spellcheck>
		<style public="1" set="null">
			<c path="js.html.CSSStyleDeclaration"/>
			<haxe_doc>An object representing the declarations of an element's style attributes.</haxe_doc>
		</style>
		<tabIndex public="1">
			<x path="Int"/>
			<haxe_doc>Gets/sets the position of the element in the tabbing order.</haxe_doc>
		</tabIndex>
		<tagName public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of the tag for the given element.</haxe_doc>
		</tagName>
		<title public="1">
			<c path="String"/>
			<haxe_doc>A string that appears in a popup box when mouse is over the element.</haxe_doc>
		</title>
		<translate public="1"><x path="Bool"/></translate>
		<blur public="1" set="method"><f a=""><x path="Void"/></f></blur>
		<click public="1" set="method"><f a=""><x path="Void"/></f></click>
		<focus public="1" set="method"><f a=""><x path="Void"/></f></focus>
		<getAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="String"/>
</f></getAttribute>
		<getAttributeNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></getAttributeNS>
		<getAttributeNode public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></getAttributeNode>
		<getAttributeNodeNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></getAttributeNodeNS>
		<getBoundingClientRect public="1" set="method"><f a=""><c path="js.html.ClientRect"/></f></getBoundingClientRect>
		<getClientRects public="1" set="method"><f a=""><c path="js.html.ClientRectList"/></f></getClientRects>
		<getElementsByClassName public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByClassName>
		<getElementsByTagName public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByTagName>
		<getElementsByTagNameNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByTagNameNS>
		<hasAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasAttribute>
		<hasAttributeNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></hasAttributeNS>
		<insertAdjacentElement public="1" set="method"><f a="where:element">
	<c path="String"/>
	<c path="js.html.Element"/>
	<c path="js.html.Element"/>
</f></insertAdjacentElement>
		<insertAdjacentHTML public="1" set="method"><f a="where:html">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></insertAdjacentHTML>
		<insertAdjacentText public="1" set="method"><f a="where:text">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></insertAdjacentText>
		<matchesSelector public="1" set="method"><f a="selectors">
	<c path="String"/>
	<x path="Bool"/>
</f></matchesSelector>
		<querySelector public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></querySelector>
		<querySelectorAll public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></querySelectorAll>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<removeAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></removeAttribute>
		<removeAttributeNS public="1" set="method"><f a="namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></removeAttributeNS>
		<removeAttributeNode public="1" set="method"><f a="oldAttr">
	<c path="js.html.Attr"/>
	<c path="js.html.Attr"/>
</f></removeAttributeNode>
		<requestFullScreen public="1" set="method"><f a="flags">
	<x path="Int"/>
	<x path="Void"/>
</f></requestFullScreen>
		<requestFullscreen public="1" set="method"><f a=""><x path="Void"/></f></requestFullscreen>
		<requestPointerLock public="1" set="method"><f a=""><x path="Void"/></f></requestPointerLock>
		<scrollByLines public="1" set="method"><f a="lines">
	<x path="Int"/>
	<x path="Void"/>
</f></scrollByLines>
		<scrollByPages public="1" set="method"><f a="pages">
	<x path="Int"/>
	<x path="Void"/>
</f></scrollByPages>
		<scrollIntoView public="1" set="method"><f a="?alignWithTop">
	<x path="Bool"/>
	<x path="Void"/>
</f></scrollIntoView>
		<scrollIntoViewIfNeeded public="1" set="method"><f a="?centerIfNeeded">
	<x path="Bool"/>
	<x path="Void"/>
</f></scrollIntoViewIfNeeded>
		<setAttribute public="1" set="method"><f a="name:value">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setAttribute>
		<setAttributeNS public="1" set="method"><f a="?namespaceURI:qualifiedName:value">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setAttributeNS>
		<setAttributeNode public="1" set="method"><f a="newAttr">
	<c path="js.html.Attr"/>
	<c path="js.html.Attr"/>
</f></setAttributeNode>
		<setAttributeNodeNS public="1" set="method"><f a="newAttr">
	<c path="js.html.Attr"/>
	<c path="js.html.Attr"/>
</f></setAttributeNodeNS>
		<haxe_doc><![CDATA[<p>This chapter provides a brief reference for the general methods, properties, and events available to most HTML and XML elements in the Gecko DOM.</p>
<p>Various W3C specifications apply to elements:</p>
<ul> <li><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Core/" title="http://www.w3.org/TR/DOM-Level-2-Core/" target="_blank">DOM Core Specification</a>—describes the core interfaces shared by most DOM objects in HTML and XML documents</li> <li><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/" title="http://www.w3.org/TR/DOM-Level-2-HTML/" target="_blank">DOM HTML Specification</a>—describes interfaces for objects in HTML and XHTML documents that build on the core specification</li> <li><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Events/" title="http://www.w3.org/TR/DOM-Level-2-Events/" target="_blank">DOM Events Specification</a>—describes events shared by most DOM objects, building on the DOM Core and <a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Views/" title="http://www.w3.org/TR/DOM-Level-2-Views/" target="_blank">Views</a> specifications</li> <li><a class="external" title="http://www.w3.org/TR/ElementTraversal/" rel="external" href="http://www.w3.org/TR/ElementTraversal/" target="_blank">Element Traversal Specification</a>—describes the new attributes that allow traversal of elements in the DOM&nbsp;tree 
<span>New in <a rel="custom" href="https://developer.mozilla.org/en/Firefox_3.5_for_developers">Firefox 3.5</a></span>
</li>
</ul>
<p>The articles listed here span the above and include links to the appropriate W3C DOM specification.</p>
<p>While these interfaces are generally shared by most HTML and XML elements, there are more specialized interfaces for particular objects listed in the DOM HTML Specification. Note, however, that these HTML&nbsp;interfaces are "only for [HTML 4.01] and [XHTML 1.0] documents and are not guaranteed to work with any future version of XHTML." The HTML 5 draft does state it aims for backwards compatibility with these HTML&nbsp;interfaces but says of them that "some features that were formerly deprecated, poorly supported, rarely used or considered unnecessary have been removed." One can avoid the potential conflict by moving entirely to DOM&nbsp;XML attribute methods such as <code>getAttribute()</code>.</p>
<p><code><a rel="custom" href="https://developer.mozilla.org/en/DOM/HTMLHtmlElement">Html</a></code>
, <code><a rel="custom" href="/api/js/html/HeadElement">Head</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/HTMLLinkElement">Link</a></code>
, <code><a rel="custom" href="/api/js/html/TitleElement">Title</a></code>
, <code><a rel="custom" href="/api/js/html/MetaElement">Meta</a></code>
, <code><a rel="custom" href="/api/js/html/BaseElement">Base</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/HTMLIsIndexElement" class="new">IsIndex</a></code>
, <code><a rel="custom" href="/api/js/html/StyleElement">Style</a></code>
, <code><a rel="custom" href="/api/js/html/BodyElement">Body</a></code>
, <code><a rel="custom" href="/api/js/html/FormElement">Form</a></code>
, <code><a rel="custom" href="/api/js/html/SelectElement">Select</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/HTMLOptGroupElement" class="new">OptGroup</a></code>
, <a title="en/HTML/Element/HTMLOptionElement" rel="internal" href="https://developer.mozilla.org/en/HTML/Element/HTMLOptionElement" class="new ">Option</a>, <code><a rel="custom" href="/api/js/html/InputElement">Input</a></code>
, <code><a rel="custom" href="/api/js/html/TextAreaElement">TextArea</a></code>
, <code><a rel="custom" href="/api/js/html/ButtonElement">Button</a></code>
, <code><a rel="custom" href="/api/js/html/LabelElement">Label</a></code>
, <code><a rel="custom" href="/api/js/html/FieldSetElement">FieldSet</a></code>
, <code><a rel="custom" href="/api/js/html/LegendElement">Legend</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/HTMLUListElement" class="new">UList</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/OList" class="new">OList</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/DList" class="new">DList</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Directory" class="new">Directory</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Menu" class="new">Menu</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/LI" class="new">LI</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Div" class="new">Div</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Paragraph" class="new">Paragraph</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Heading" class="new">Heading</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Quote" class="new">Quote</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Pre" class="new">Pre</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/BR" class="new">BR</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/BaseFont" class="new">BaseFont</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Font" class="new">Font</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/HR" class="new">HR</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Mod" class="new">Mod</a></code>
, <code><a rel="custom" href="/api/js/html/AnchorElement">Anchor</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Image" class="new">Image</a></code>
, <code><a rel="custom" href="/api/js/html/ObjectElement">Object</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Param" class="new">Param</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Applet" class="new">Applet</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Map" class="new">Map</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Area" class="new">Area</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Script" class="new">Script</a></code>
, <code><a rel="custom" href="/api/js/html/TableElement">Table</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TableCaption" class="new">TableCaption</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TableCol" class="new">TableCol</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TableSection" class="new">TableSection</a></code>
, <code><a rel="custom" href="/api/js/html/TableRowElement">TableRow</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TableCell" class="new">TableCell</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/FrameSet" class="new">FrameSet</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Frame" class="new">Frame</a></code>
, <code><a rel="custom" href="/api/js/html/IFrameElement">IFrame</a></code>
</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/element">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Element"</e></m></meta>
	</class>
	<class path="js.html.AnchorElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/AnchorElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<charset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The character encoding of the linked resource. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</charset>
		<coords public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Comma-separated list of coordinates. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</coords>
		<download public="1"><c path="String"/></download>
		<hash public="1">
			<c path="String"/>
			<haxe_doc>The fragment identifier (including the leading hash mark (#)), if any, in the referenced URL.</haxe_doc>
		</hash>
		<host public="1">
			<c path="String"/>
			<haxe_doc>The hostname and port (if it's not the default port) in the referenced URL.</haxe_doc>
		</host>
		<hostname public="1">
			<c path="String"/>
			<haxe_doc>The hostname in the referenced URL.</haxe_doc>
		</hostname>
		<href public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-href">href</a></code>
 HTML attribute, containing a valid URL of a linked resource.]]></haxe_doc>
		</href>
		<hreflang public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-hreflang">hreflang</a></code>
 HTML&nbsp;attribute, indicating the language of the linked resource.]]></haxe_doc>
		</hreflang>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Anchor name. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</name>
		<origin public="1" set="null"><c path="String"/></origin>
		<pathname public="1">
			<c path="String"/>
			<haxe_doc>The path name component, if any, of the referenced URL.</haxe_doc>
		</pathname>
		<ping public="1"><c path="String"/></ping>
		<port public="1">
			<c path="String"/>
			<haxe_doc>The port component, if any, of the referenced URL.</haxe_doc>
		</port>
		<protocol public="1">
			<c path="String"/>
			<haxe_doc>The protocol component (including trailing colon (:)), of the referenced URL.</haxe_doc>
		</protocol>
		<rel public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-rel">rel</a></code>
 HTML attribute, specifying the relationship of the target object to the link object.]]></haxe_doc>
		</rel>
		<rev public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reverse link type. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</rev>
		<search public="1">
			<c path="String"/>
			<haxe_doc>The search element (including leading question mark (?)), if any, of the referenced URL</haxe_doc>
		</search>
		<shape public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The shape of the active area. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</shape>
		<target public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflectst the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-target">target</a></code>
 HTML attribute, indicating where to display the linked resource.]]></haxe_doc>
		</target>
		<text public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Same as the <strong><a title="https://developer.mozilla.org/En/DOM/Node.textContent" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.textContent">textContent</a></strong> property.]]></haxe_doc>
		</text>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-type">type</a></code>
 HTML attribute, indicating the MIME type of the linked resource.]]></haxe_doc>
		</type>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<haxe_doc><![CDATA[DOM anchor elements expose the <a target="_blank" href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlanchorelement" rel="external nofollow" class=" external" title="http://www.w3.org/TR/html5/text-level-semantics.html#htmlanchorelement">HTMLAnchorElement</a> (or <span><a href="https://developer.mozilla.org/en/HTML" rel="custom nofollow">HTML 4</a></span> <a target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-48250443" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-48250443" rel="external nofollow" class=" external"><code>HTMLAnchorElement</code></a>) interface, which provides special properties and methods (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of hyperlink elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLAnchorElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAnchorElement"</e></m></meta>
	</class>
	<class path="js.html.AppletElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/AppletElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute is used to position the applet on the page relative to content that might flow around it. The HTML 4.01 specification defines values of bottom, left, middle, right, and top, whereas Microsoft and Netscape also might support <strong>absbottom</strong>, <strong>absmiddle</strong>, <strong>baseline</strong>, <strong>center</strong>, and <strong>texttop</strong>.]]></haxe_doc>
		</align>
		<alt public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute causes a descriptive text alternate to be displayed on browsers that do not support Java. Page designers should also remember that content enclosed within the <code>&lt;applet&gt;</code> element may also be rendered as alternative text.]]></haxe_doc>
		</alt>
		<archive public="1">
			<c path="String"/>
			<haxe_doc>This attribute refers to an archived or compressed version of the applet and its associated class files, which might help reduce download time.</haxe_doc>
		</archive>
		<code public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the URL of the applet's class file to be loaded and executed. Applet filenames are identified by a .class filename extension. The URL specified by code might be relative to the <code>codebase</code> attribute.]]></haxe_doc>
		</code>
		<codeBase public="1"><c path="String"/></codeBase>
		<height public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies the height, in pixels, that the applet needs.</haxe_doc>
		</height>
		<hspace public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies additional horizontal space, in pixels, to be reserved on either side of the applet.</haxe_doc>
		</hspace>
		<name public="1">
			<c path="String"/>
			<haxe_doc>This attribute assigns a name to the applet so that it can be identified by other resources; particularly scripts.</haxe_doc>
		</name>
		<object public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies the URL of a serialized representation of an applet.</haxe_doc>
		</object>
		<vspace public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies additional vertical space, in pixels, to be reserved above and below the applet.</haxe_doc>
		</vspace>
		<width public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies in pixels the width that the applet needs.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[Obsolete<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/applet">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAppletElement"</e></m></meta>
	</class>
	<class path="js.html.AreaElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/AreaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<alt public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-alt">alt</a></code>
 HTML attribute, containing alternative text for the element.]]></haxe_doc>
		</alt>
		<coords public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-coords">coords</a></code>
 HTML attribute, containing coordinates to define the hot-spot region.]]></haxe_doc>
		</coords>
		<hash public="1" set="null">
			<c path="String"/>
			<haxe_doc>The fragment identifier (including the leading hash mark (#)), if any, in the referenced URL.</haxe_doc>
		</hash>
		<host public="1" set="null">
			<c path="String"/>
			<haxe_doc>The hostname and port (if it's not the default port) in the referenced URL.</haxe_doc>
		</host>
		<hostname public="1" set="null">
			<c path="String"/>
			<haxe_doc>The hostname in the referenced URL.</haxe_doc>
		</hostname>
		<href public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-href">href</a></code>
 HTML attribute, containing a valid URL&nbsp;of a linked resource.]]></haxe_doc>
		</href>
		<noHref public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates that this area is inactive. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</noHref>
		<pathname public="1" set="null">
			<c path="String"/>
			<haxe_doc>The path name component, if any, of the referenced URL.</haxe_doc>
		</pathname>
		<ping public="1"><c path="String"/></ping>
		<port public="1" set="null">
			<c path="String"/>
			<haxe_doc>The port component, if any, of the referenced URL.</haxe_doc>
		</port>
		<protocol public="1" set="null">
			<c path="String"/>
			<haxe_doc>The protocol component (including trailing colon (:)), of the referenced URL.</haxe_doc>
		</protocol>
		<search public="1" set="null">
			<c path="String"/>
			<haxe_doc>The search element (including leading question mark (?)), if any, of the referenced URL</haxe_doc>
		</search>
		<shape public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-shape">shape</a></code>
 HTML&nbsp;attribute, indicating the shape of the hot-spot, limited to known values.]]></haxe_doc>
		</shape>
		<target public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-target">target</a></code>
 HTML&nbsp;attribute, indicating the browsing context in which to open the linked resource.]]></haxe_doc>
		</target>
		<haxe_doc><![CDATA[DOM area objects expose the <a class=" external" title="http://www.w3.org/TR/html5/the-map-element.html#htmlareaelement" rel="external" href="http://www.w3.org/TR/html5/the-map-element.html#htmlareaelement" target="_blank">HTMLAreaElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26019118" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26019118" target="_blank"><code>HTMLAreaElement</code></a>) interface, which provides special properties and methods (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of area elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLAreaElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAreaElement"</e></m></meta>
	</class>
	<class path="js.html.ArrayBuffer" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ArrayBuffer.hx" extern="1">
		<byteLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The size, in bytes, of the array. This is established when the array is constructed and cannot be changed. <strong>Read only.</strong>]]></haxe_doc>
		</byteLength>
		<slice public="1" set="method"><f a="begin:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBuffer"/>
</f></slice>
		<new public="1" set="method"><f a="?arg0">
	<d/>
	<x path="Void"/>
</f></new>
		<haxe_doc><![CDATA[The <code>ArrayBuffer</code> is a data type that is used to represent a generic, fixed-length binary data buffer. You can't directly manipulate the contents of an <code>ArrayBuffer</code>; instead, you create an <a title="en/JavaScript typed arrays/ArrayBufferView" rel="internal" href="/api/js/html/ArrayBufferView"><code>ArrayBufferView</code></a> object which represents the buffer in a specific format, and use that to read and write the contents of the buffer.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ArrayBuffer"</e></m></meta>
	</class>
	<class path="js.html.ArrayBufferView" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ArrayBufferView.hx" extern="1">
		<buffer public="1" set="null">
			<c path="js.html.ArrayBuffer"/>
			<haxe_doc><![CDATA[The buffer this view references. <strong>Read only.</strong>]]></haxe_doc>
		</buffer>
		<byteLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The length, in bytes, of the view. <strong>Read only.</strong>]]></haxe_doc>
		</byteLength>
		<byteOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The offset, in bytes, to the first byte of the view within the <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>.]]></haxe_doc>
		</byteOffset>
		<haxe_doc><![CDATA[<p>The <code>ArrayBufferView</code> type describes a particular view on the contents of an <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="/api/js/html/ArrayBuffer"><code>ArrayBuffer</code></a>'s data.</p>
<p>Of note is that you may create multiple views into the same buffer, each looking at the buffer's contents starting at a particular offset. This makes it possible to set up views of different data types to read the contents of a buffer based on the types of data at specific offsets into the buffer.</p>
<div class="note"><strong>Note:</strong> Typically, you'll instantiate one of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">subclasses</a> of this object instead of this base class. Those provide access to the data formatted using specific data types.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ArrayBufferView"</e></m></meta>
	</class>
	<class path="js.html.Attr" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Attr.hx" extern="1">
		<extends path="js.html.Node"/>
		<isId public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the attribute is an "ID attribute". An "ID attribute" being an attribute which value is expected to be unique across a DOM Document. In HTML DOM, "id" is the only ID attribute, but XML documents could define others. Whether or not an attribute is unique is often determined by a DTD or other schema description.</haxe_doc>
		</isId>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The attribute's name.</haxe_doc>
		</name>
		<ownerElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>This property has been deprecated and will be removed in the future. Since you can only get Attr objects from elements, you should already know th</haxe_doc>
		</ownerElement>
		<specified public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This property has been deprecated and will be removed in the future; it now always returns <code>true</code>.]]></haxe_doc>
		</specified>
		<value public="1">
			<c path="String"/>
			<haxe_doc>The attribute's value. Setter throws DOMException.</haxe_doc>
		</value>
		<haxe_doc><![CDATA[<p>This type represents a DOM&nbsp;element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Element.getAttribute">Element.getAttribute()</a></code>
, but certain functions (e.g., <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Element.getAttributeNode">Element.getAttributeNode()</a></code>
)&nbsp;or means of iterating give <code>Attr</code> types.</p>
<div class="warning"><strong>Warning:</strong> In DOM Core 1, 2 and 3, Attr inherited from Node. This is no longer the case in <a class="external" rel="external" href="http://www.w3.org/TR/dom/" title="http://www.w3.org/TR/dom/" target="_blank">DOM4</a>. In order to bring the implementation of <code>Attr</code> up to specification, work is underway to change it to no longer inherit from <code><a rel="custom" href="/api/js/html/Node">Node</a></code>
. You should not be using any <code><a rel="custom" href="/api/js/html/Node">Node</a></code>
 properties or methods on <code>Attr</code> objects. Starting in Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, the ones that are going to be removed output warning messages to the console. You should revise your code accordingly. See <a rel="custom" href="https://developer.mozilla.org/en/DOM/Attr#Deprecated_properties_and_methods">Deprecated properties and methods</a> for a complete list.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Attr">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Attr"</e></m></meta>
	</class>
	<class path="js.html.MediaElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MediaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<HAVE_CURRENT_DATA public="1" get="inline" set="null" line="34" static="1">
			<x path="Int"/>
			<haxe_doc>Data is available for the current playback position, but not enough to actually play more than one frame.</haxe_doc>
		</HAVE_CURRENT_DATA>
		<HAVE_ENOUGH_DATA public="1" get="inline" set="null" line="37" static="1">
			<x path="Int"/>
			<haxe_doc>Enough data is available—and the download rate is high enough—that the media can be played through to the end without interruption.</haxe_doc>
		</HAVE_ENOUGH_DATA>
		<HAVE_FUTURE_DATA public="1" get="inline" set="null" line="40" static="1">
			<x path="Int"/>
			<haxe_doc>Data for the current playback position as well as for at least a little bit of time into the future is available (in other words, at least two frames of video, for example).</haxe_doc>
		</HAVE_FUTURE_DATA>
		<HAVE_METADATA public="1" get="inline" set="null" line="43" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Enough of the media resource has been retrieved that the metadata attributes are initialized.&nbsp; Seeking will no longer raise an exception.]]></haxe_doc>
		</HAVE_METADATA>
		<HAVE_NOTHING public="1" get="inline" set="null" line="46" static="1">
			<x path="Int"/>
			<haxe_doc>No information is available about the media resource.</haxe_doc>
		</HAVE_NOTHING>
		<NETWORK_EMPTY public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></NETWORK_EMPTY>
		<NETWORK_IDLE public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></NETWORK_IDLE>
		<NETWORK_LOADING public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></NETWORK_LOADING>
		<NETWORK_NO_SOURCE public="1" get="inline" set="null" line="54" static="1"><x path="Int"/></NETWORK_NO_SOURCE>
		<audioDecodedByteCount public="1" set="null"><x path="Int"/></audioDecodedByteCount>
		<autoplay public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-autoplay">autoplay</a></code>
 HTML&nbsp;attribute, indicating whether to begin playing as soon as enough media is available.]]></haxe_doc>
		</autoplay>
		<buffered public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>The ranges of the media source that the browser has buffered, if any.</haxe_doc>
		</buffered>
		<closedCaptionsVisible public="1"><x path="Bool"/></closedCaptionsVisible>
		<controller public="1"><c path="js.html.MediaController"/></controller>
		<controls public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-controls">controls</a></code>
 HTML attribute, indicating whether user interface items for controlling the resource should be displayed.]]></haxe_doc>
		</controls>
		<currentSrc public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The absolute URL of the chosen media resource (if, for example, the server selects a media file based on the resolution of the user's display), or an empty string if the <code>networkState</code> is <code>EMPTY</code>.]]></haxe_doc>
		</currentSrc>
		<currentTime public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The current playback time, in seconds.&nbsp; Setting this value seeks the media to the new time. Setter throws DOMException.]]></haxe_doc>
		</currentTime>
		<defaultMuted public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-muted">muted</a></code>
 HTML attribute, indicating whether the media element's audio output should be muted by default. Changing the value dynamically will not unmute the audio (it only controls the default state).]]></haxe_doc>
		</defaultMuted>
		<defaultPlaybackRate public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The default playback rate for the media.&nbsp; The Ogg backend does not support this.&nbsp; 1.0 is "normal speed," values lower than 1.0 make the media play slower than normal, higher values make it play faster.&nbsp; The value 0.0 is invalid and throws a <code>NOT_SUPPORTED_ERR</code>&nbsp;exception.]]></haxe_doc>
		</defaultPlaybackRate>
		<duration public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[The length of the media in seconds, or zero if no media data is available.&nbsp; If the media data is available but the length is unknown, this value is <code>NaN</code>.&nbsp; If the media is streamed and has no predefined length, the value is <code>Inf</code>.]]></haxe_doc>
		</duration>
		<ended public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the media element has ended playback.</haxe_doc>
		</ended>
		<error public="1" set="null">
			<c path="js.html.MediaError"/>
			<haxe_doc>The media error object for the most recent error, or null if there has not been an error.</haxe_doc>
		</error>
		<hasClosedCaptions public="1" set="null"><x path="Bool"/></hasClosedCaptions>
		<initialTime public="1" set="null"><x path="Float"/></initialTime>
		<loop public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-loop">loop</a></code>
 HTML&nbsp;attribute, indicating whether the media element should start over when it reaches the end.]]></haxe_doc>
		</loop>
		<mediaGroup public="1"><c path="String"/></mediaGroup>
		<muted public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the audio is muted, and <code>false</code> otherwise.]]></haxe_doc>
		</muted>
		<networkState public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[<p>The current state of fetching the media over the network.</p> <table class="standard-table"> <tbody> <tr> <td class="header">Constant</td> <td class="header">Value</td> <td class="header">Description</td> </tr> <tr> <td><code>EMPTY</code></td> <td>0</td> <td>There is no data yet.&nbsp; The <code>readyState</code> is also <code>HAVE_NOTHING</code>.</td> </tr> <tr> <td><code>LOADING</code></td> <td>1</td> <td>The media is loading.</td> </tr> <tr> <td><code>LOADED_METADATA</code></td> <td>2</td> <td>The media's metadata has been loaded.</td> </tr> <tr> <td><code>LOADED_FIRST_FRAME</code></td> <td>3</td> <td>The media's first frame has been loaded.</td> </tr> <tr> <td><code>LOADED</code></td> <td>4</td> <td>The media has been fully loaded.</td> </tr> </tbody> </table>]]></haxe_doc>
		</networkState>
		<onkeyadded public="1"><t path="js.html.EventListener"/></onkeyadded>
		<onkeyerror public="1"><t path="js.html.EventListener"/></onkeyerror>
		<onkeymessage public="1"><t path="js.html.EventListener"/></onkeymessage>
		<onneedkey public="1"><t path="js.html.EventListener"/></onneedkey>
		<paused public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the media element is paused.</haxe_doc>
		</paused>
		<playbackRate public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The current rate at which the media is being played back. This is used to implement user controls for fast forward, slow motion, and so forth. The normal playback rate is multiplied by this value to obtain the current rate, so a value of 1.0 indicates normal speed.&nbsp; Not supported by the Ogg backend.]]></haxe_doc>
		</playbackRate>
		<played public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>The ranges of the media source that the browser has played, if any.</haxe_doc>
		</played>
		<preload public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-preload">preload</a></code>
 HTML attribute, indicating what data should be preloaded at page-load time, if any.]]></haxe_doc>
		</preload>
		<preservesPitch public="1"><x path="Bool"/></preservesPitch>
		<readyState public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[<p>The readiness state of the media:</p> <table class="standard-table"> <tbody> <tr> <td class="header">Constant</td> <td class="header">Value</td> <td class="header">Description</td> </tr> <tr> <td><code>HAVE_NOTHING</code></td> <td>0</td> <td>No information is available about the media resource.</td> </tr> <tr> <td><code>HAVE_METADATA</code></td> <td>1</td> <td>Enough of the media resource has been retrieved that the metadata attributes are initialized.&nbsp; Seeking will no longer raise an exception.</td> </tr> <tr> <td><code>HAVE_CURRENT_DATA</code></td> <td>2</td> <td>Data is available for the current playback position, but not enough to actually play more than one frame.</td> </tr> <tr> <td><code>HAVE_FUTURE_DATA</code></td> <td>3</td> <td>Data for the current playback position as well as for at least a little bit of time into the future is available (in other words, at least two frames of video, for example).</td> </tr> <tr> <td><code>HAVE_ENOUGH_DATA</code></td> <td>4</td> <td>Enough data is available—and the download rate is high enough—that the media can be played through to the end without interruption.</td> </tr> </tbody> </table>]]></haxe_doc>
		</readyState>
		<seekable public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>The time ranges that the user is able to seek to, if any.</haxe_doc>
		</seekable>
		<seeking public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the media is in the process of seeking to a new position.</haxe_doc>
		</seeking>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-src">src</a></code>
 HTML attribute, containing the URL of a media resource to use.]]></haxe_doc>
		</src>
		<startTime public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The earliest possible position in the media, in seconds.</haxe_doc>
		</startTime>
		<textTracks public="1" set="null"><c path="js.html.TextTrackList"/></textTracks>
		<videoDecodedByteCount public="1" set="null"><x path="Int"/></videoDecodedByteCount>
		<volume public="1">
			<x path="Float"/>
			<haxe_doc>The audio volume, from 0.0 (silent) to 1.0 (loudest). Setter throws DOMException.</haxe_doc>
		</volume>
		<addKey public="1" set="method"><f a="keySystem:key:?initData:sessionId">
	<c path="String"/>
	<c path="js.html.Uint8Array"/>
	<c path="js.html.Uint8Array"/>
	<c path="String"/>
	<x path="Void"/>
</f></addKey>
		<addTextTrack public="1" set="method"><f a="kind:?label:?language">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.TextTrack"/>
</f></addTextTrack>
		<canPlayType public="1" set="method"><f a="type:?keySystem">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></canPlayType>
		<cancelKeyRequest public="1" set="method"><f a="keySystem:sessionId">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></cancelKeyRequest>
		<generateKeyRequest public="1" set="method"><f a="keySystem:?initData">
	<c path="String"/>
	<c path="js.html.Uint8Array"/>
	<x path="Void"/>
</f></generateKeyRequest>
		<load public="1" set="method"><f a=""><x path="Void"/></f></load>
		<pause public="1" set="method"><f a=""><x path="Void"/></f></pause>
		<play public="1" set="method"><f a=""><x path="Void"/></f></play>
		<haxe_doc><![CDATA[HTML media elements (such as <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/audio">&lt;audio&gt;</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
) expose the <code>HTMLMediaElement</code> interface which provides special properties and methods (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of media elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLMediaElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMediaElement"</e></m></meta>
	</class>
	<class path="js.html.AudioElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/AudioElement.hx" extern="1">
		<extends path="js.html.MediaElement"/>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc><![CDATA[<p>The <code>HTMLAudioElement</code> interface provides access to the properties of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/audio">&lt;audio&gt;</a></code>
&nbsp;elements, as well as methods to manipulate them. It's derived from the <a title="en/DOM/HTMLMediaElement" rel="internal" href="/api/js/html/MediaElement" class=" new"><code>HTMLMediaElement</code></a> interface; it's implemented by <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIDOMHTMLMediaElement">nsIDOMHTMLMediaElement</a></code>
.</p>
<p>For details on how to use the audio streaming features exposed by this interface, please see <a title="en/Introducing the Audio API Extension" rel="internal" href="/api/js/html/audio/AudioBuffer">Introducing the Audio API Extension</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/HTMLAudioElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAudioElement"</e></m></meta>
	</class>
	<class path="js.html.BRElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/BRElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<clear public="1">
			<c path="String"/>
			<haxe_doc>Indicates flow of text around floating objects.</haxe_doc>
		</clear>
		<haxe_doc><![CDATA[DOM break elements expose the <a class="external" href="http://www.w3.org/TR/html5/text-level-semantics.html#the-br-element" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/html5/text-level-semantics.html#the-br-element">HTMLBRElement</a> (or <span><a href="https://developer.mozilla.org/en/HTML" rel="custom nofollow">HTML 4</a></span> <a class="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-56836063" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-56836063"><code>HTMLBRElement</code></a>) interface which inherits from HTMLElement, but defines no additional members in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>. The introduced additional property is also deprecated in 
<span>HTML 4.01</span>.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLBRElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBRElement"</e></m></meta>
	</class>
	<class path="js.html.BarInfo" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/BarInfo.hx" extern="1">
		<visible public="1" set="null"><x path="Bool"/></visible>
		<meta><m n=":native"><e>"BarInfo"</e></m></meta>
	</class>
	<class path="js.html.BaseElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/BaseElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<href public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/base#attr-href">href</a></code>
 HTML attribute, containing a base URL for relative URLs in the document.]]></haxe_doc>
		</href>
		<target public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/base#attr-target">target</a></code>
 HTML attribute, containing a default target browsing context or frame for elements that do not have a target reference specified.]]></haxe_doc>
		</target>
		<haxe_doc><![CDATA[The <code>base</code> object exposes the <a class=" external" title="http://www.w3.org/TR/html5/semantics.html#htmlbaseelement" rel="external" href="http://www.w3.org/TR/html5/semantics.html#htmlbaseelement" target="_blank">HTMLBaseElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class="external" target="_blank" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-73629039" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-73629039">HTMLBaseElement</a>) interface which contains the base URI&nbsp;for a document.&nbsp; This object inherits all of the properties and methods as described in the <a class="internal" title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> section.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLBaseElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBaseElement"</e></m></meta>
	</class>
	<class path="js.html.BaseFontElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/BaseFontElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<color public="1">
			<c path="String"/>
			<haxe_doc>This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.</haxe_doc>
		</color>
		<face public="1">
			<c path="String"/>
			<haxe_doc>This attribute contains a list of one or more font names. The document text in the default style is rendered in the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.</haxe_doc>
		</face>
		<size public="1">
			<x path="Int"/>
			<haxe_doc>This attribute specifies the font size as either a numeric or relative value. Numeric values range from 1 to 7 with 1 being the smallest and 3 the default.</haxe_doc>
		</size>
		<haxe_doc><![CDATA[Obsolete<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/basefont">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBaseFontElement"</e></m></meta>
	</class>
	<class path="js.html.BatteryManager" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/BatteryManager.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<charging public="1" set="null"><x path="Bool"/></charging>
		<chargingTime public="1" set="null"><x path="Float"/></chargingTime>
		<dischargingTime public="1" set="null"><x path="Float"/></dischargingTime>
		<level public="1" set="null"><x path="Float"/></level>
		<onchargingchange public="1"><t path="js.html.EventListener"/></onchargingchange>
		<onchargingtimechange public="1"><t path="js.html.EventListener"/></onchargingtimechange>
		<ondischargingtimechange public="1"><t path="js.html.EventListener"/></ondischargingtimechange>
		<onlevelchange public="1"><t path="js.html.EventListener"/></onlevelchange>
		<meta><m n=":native"><e>"BatteryManager"</e></m></meta>
	</class>
	<class path="js.html.Blob" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Blob.hx" extern="1">
		<size public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The size, in bytes, of the data contained in the <code>Blob</code> object. <strong>Read only.</strong>]]></haxe_doc>
		</size>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[An ASCII-encoded string, in all lower case, indicating the MIME&nbsp;type of the data contained in the <code>Blob</code>. If the type is unknown, this string is empty. <strong>Read only.</strong>]]></haxe_doc>
		</type>
		<slice public="1" set="method"><f a="?start:?end:?contentType">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<c path="js.html.Blob"/>
</f></slice>
		<new public="1" set="method"><f a="?arg0:?arg1">
	<d/>
	<d/>
	<x path="Void"/>
</f></new>
		<haxe_doc><![CDATA[<div><p><strong>This is an experimental feature</strong><br>Because this feature is still in development in some browsers, check the <a href="#AutoCompatibilityTable">compatibility table</a> for the proper prefixes to use in various browsers.</p></div>
<p></p>
<p>A <code>Blob</code> object represents a file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The <code><a rel="custom" href="/api/js/html/File">File</a></code>
 interface is based on <code>Blob</code>, inheriting blob functionality and expanding it to support files on the user's system.</p>
<p>An easy way to construct a <code>Blob</code> is by using the <code><a rel="custom" href="/api/js/html/BlobBuilder">BlobBuilder</a></code>
 interface, which lets you iteratively append data to a blob, then retrieve the completed blob when you're ready to use it for something. Another way is to use the <code>slice()</code> method to create a blob that contains a subset of another blob's data.</p>
<div class="note"><strong>Note:</strong> The <code>slice()</code> method has vendor prefixes: <code>blob.mozSlice()</code> for Firefox and <code>blob.webkitSlice()</code> for Chrome. An old version of the <code>slice()</code> method, without vendor prefixes, had different semantics, as described below.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Blob">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Blob"</e></m></meta>
	</class>
	<class path="js.html.BodyElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/BodyElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<aLink public="1">
			<c path="String"/>
			<haxe_doc>Color of active hyperlinks.</haxe_doc>
		</aLink>
		<background public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>URI for a background image resource.</p> <div class="note"><strong>Note:</strong> Starting in Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, this value is no longer resolved as a URI; instead, it's treated as a simple string.</div>]]></haxe_doc>
		</background>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>Background color for the document.</haxe_doc>
		</bgColor>
		<link public="1">
			<c path="String"/>
			<haxe_doc>Color of unvisited links.</haxe_doc>
		</link>
		<onbeforeunload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onbeforeunload">onbeforeunload</a></code>
 HTML&nbsp;attribute value for a function to call when the document is about to be unloaded.]]></haxe_doc>
		</onbeforeunload>
		<onhashchange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onhashchange">onhashchange</a></code>
 HTML&nbsp;attribute value for a function to call when the fragment identifier in the address of the document changes.]]></haxe_doc>
		</onhashchange>
		<onmessage public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onmessage">onmessage</a></code>
 HTML&nbsp;attribute value for a function to call when the document receives a message.]]></haxe_doc>
		</onmessage>
		<onoffline public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onoffline">onoffline</a></code>
 HTML&nbsp;attribute value for a function to call when network communication fails.]]></haxe_doc>
		</onoffline>
		<ononline public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-ononline">ononline</a></code>
 HTML&nbsp;attribute value for a function to call when network communication is restored.]]></haxe_doc>
		</ononline>
		<onpopstate public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onpopstate">onpopstate</a></code>
 HTML&nbsp;attribute value for a function to call when the user has navigated session history.]]></haxe_doc>
		</onpopstate>
		<onresize public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onresize">onresize</a></code>
 HTML&nbsp;attribute value for a function to call when the document has been resized.]]></haxe_doc>
		</onresize>
		<onstorage public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onpopstate">onpopstate</a></code>
 HTML&nbsp;attribute value for a function to call when the storage area has changed.]]></haxe_doc>
		</onstorage>
		<onunload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onunload">onunload</a></code>
 HTML&nbsp;attribute value for a function to call when when the document is going away.]]></haxe_doc>
		</onunload>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Foreground color of text.</haxe_doc>
		</text>
		<vLink public="1">
			<c path="String"/>
			<haxe_doc>Color of visited links.</haxe_doc>
		</vLink>
		<haxe_doc><![CDATA[DOM body elements expose the <a href="http://www.w3.org/TR/html5/sections.html#the-body-element" target="_blank" rel="external nofollow" class=" external" title="http://www.w3.org/TR/html5/sections.html#the-body-element">HTMLBodyElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-48250443" target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-48250443" rel="external nofollow" class=" external"><code>HTMLBodyElement</code></a>) interface, which provides special properties (beyond the regular <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 object interface they also have available to them by inheritance) for manipulating body elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLBodyElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBodyElement"</e></m></meta>
	</class>
	<class path="js.html.ButtonElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ButtonElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc>The control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified.</haxe_doc>
		</autofocus>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>The control is disabled, meaning that it does not accept any clicks.</haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[<p>The form that this button is associated with. If the button is a descendant of a form element, then this attribute is the ID of that form element.</p> <p>If the button is not a descendant of a form element, then:</p> <ul> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> The attribute can be the ID of any form element in the same document.</li> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> The attribute is null.</li> </ul>]]></haxe_doc>
		</form>
		<formAction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The URI&nbsp;of a program that processes information submitted by the button. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-action">action</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formAction>
		<formEnctype public="1"><c path="String"/></formEnctype>
		<formMethod public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The HTTP&nbsp;method that the browser uses to submit the form. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-method">method</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formMethod>
		<formNoValidate public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates that the form is not to be validated when it is submitted. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-enctype">enctype</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formNoValidate>
		<formTarget public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[A name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-target">target</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formTarget>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc><![CDATA[A list of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/label">&lt;label&gt;</a></code>
 elements that are labels for this button.]]></haxe_doc>
		</labels>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The name of the object when submitted with a form. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> If specified, it must not be the empty string.]]></haxe_doc>
		</name>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>Indicates the behavior of the button. This is an enumerated attribute with the following possible values:</p> <ul> <li><code>submit</code>:&nbsp;The button submits the form. This is the default value if the attribute is not specified, 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> or if it is dynamically changed to an empty or invalid value.</li> <li><code>reset</code>:&nbsp;The button resets the form.</li> <li><code>button</code>:&nbsp;The button does nothing.</li> </ul>]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this button is in.</haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The current form control value of the button.&nbsp;]]></haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.</haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[DOM&nbsp;<code>Button </code>objects expose the <a class=" external" title="http://www.w3.org/TR/html5/the-button-element.html#the-button-element" rel="external" href="http://www.w3.org/TR/html5/the-button-element.html#the-button-element" target="_blank">HTMLButtonElement</a> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>&nbsp;(or <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-34812697" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-34812697" target="_blank">HTMLButtonElement</a> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>) interface, which provides properties and methods (beyond the <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of button elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLButtonElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLButtonElement"</e></m></meta>
	</class>
	<class path="js.html.CharacterData" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CharacterData.hx" extern="1">
		<extends path="js.html.Node"/>
		<data public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</data>
		<length public="1" set="null"><x path="Int"/></length>
		<appendData public="1" set="method"><f a="data">
	<c path="String"/>
	<x path="Void"/>
</f></appendData>
		<deleteData public="1" set="method"><f a="offset:length">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></deleteData>
		<insertData public="1" set="method"><f a="offset:data">
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></insertData>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<replaceData public="1" set="method"><f a="offset:length:data">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></replaceData>
		<substringData public="1" set="method"><f a="offset:length">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></substringData>
		<haxe_doc><![CDATA[<code><a title="En/DOM/Text" rel="internal" href="https://developer.mozilla.org/En/DOM/Text">Text</a></code>, <code><a title="En/DOM/Comment" rel="internal" href="https://developer.mozilla.org/En/DOM/Comment">Comment</a></code>, and <code><a title="en/DOM/CDATASection" rel="internal" href="/api/js/html/CDATASection">CDATASection</a></code> all implement CharacterData, which in turn also implements <code><a class="internal" title="En/DOM/Node" rel="internal" href="/api/js/html/Node">Node</a></code>. See <code>Node</code> for the remaining methods, properties, and constants.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/En/DOM/CharacterData">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CharacterData"</e></m></meta>
	</class>
	<class path="js.html.Text" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Text.hx" extern="1">
		<extends path="js.html.CharacterData"/>
		<wholeText public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns all text of all Text nodes logically adjacent to this node, concatenated in document order.</haxe_doc>
		</wholeText>
		<replaceWholeText public="1" set="method"><f a="content">
	<c path="String"/>
	<c path="js.html.Text"/>
</f></replaceWholeText>
		<splitText public="1" set="method"><f a="offset">
	<x path="Int"/>
	<c path="js.html.Text"/>
</f></splitText>
		<haxe_doc><![CDATA[<p>In the <a title="en/DOM" rel="internal" href="https://developer.mozilla.org/en/DOM">DOM</a>, the Text interface represents the textual content of an <a class="internal" title="En/DOM/Element" rel="internal" href="/api/js/html/Element">Element</a> or <a class="internal" title="En/DOM/Attr" rel="internal" href="https://developer.mozilla.org/En/DOM/Attr">Attr</a>.&nbsp; If an element has no markup within its content, it has a single child implementing Text that contains the element's text.&nbsp; However, if the element contains markup, it is parsed into information items and Text nodes that form its children.</p>
<p>New documents have a single Text node for each block of text.&nbsp; Over time, more Text nodes may be created as the document's content changes.&nbsp; The <code>Node.normalize()</code>&nbsp;method merges adjacent Text objects back into a single node for each block of text.</p>
<p>Text also implements the <a title="En/DOM/CharacterData" rel="internal" href="/api/js/html/CharacterData">CharacterData</a> interface (which implements the Node interface).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Text">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Text"</e></m></meta>
	</class>
	<class path="js.html.CDATASection" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CDATASection.hx" extern="1">
		<extends path="js.html.Text"/>
		<haxe_doc><![CDATA[<p>A CDATA Section can be used within XML to include extended portions of unescaped text, such that the symbols &lt; and &amp; do not need escaping as they normally do within XML when used as text.</p>
<p>It takes the form:</p>
<pre class="eval">&lt;![CDATA[  ... ]]&gt;
</pre>
<p>For example:</p>
<pre class="eval">&lt;foo&gt;Here is a CDATA section: &lt;![CDATA[  &lt; &gt; &amp; ]]&gt; with all kinds of unescaped text. &lt;/foo&gt;
</pre>
<p>The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself:</p>
<pre class="eval">&lt;![CDATA[  ]]&gt; will cause an error   ]]&gt;
</pre>
<p>Note that CDATA sections should not be used (without hiding) within HTML.</p>
<p>As a CDATASection has no properties or methods unique to itself and only directly implements the Text interface, one can refer to <a title="En/DOM/Text" rel="internal" href="https://developer.mozilla.org/En/DOM/Text">Text</a> to find its properties and methods.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CDATASection">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CDATASection"</e></m></meta>
	</class>
	<class path="js.html.CSSRule" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CSSRule.hx" extern="1">
		<CHARSET_RULE public="1" get="inline" set="null" line="32" static="1"><x path="Int"/></CHARSET_RULE>
		<FONT_FACE_RULE public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></FONT_FACE_RULE>
		<IMPORT_RULE public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></IMPORT_RULE>
		<KEYFRAMES_RULE public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></KEYFRAMES_RULE>
		<KEYFRAME_RULE public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></KEYFRAME_RULE>
		<MEDIA_RULE public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></MEDIA_RULE>
		<PAGE_RULE public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></PAGE_RULE>
		<STYLE_RULE public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></STYLE_RULE>
		<UNKNOWN_RULE public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></UNKNOWN_RULE>
		<cssText public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Returns the textual representation of the rule, e.g. <code>"h1,h2 { font-size: 16pt }"</code> Setter throws DOMException.]]></haxe_doc>
		</cssText>
		<parentRule public="1" set="null">
			<c path="js.html.CSSRule"/>
			<haxe_doc><![CDATA[Returns the containing rule, otherwise <code>null</code>. E.g. if this rule is a style rule inside an <code><a title="en/CSS/@media" rel="internal" href="https://developer.mozilla.org/en/CSS/@media">@media</a></code> block, the parent rule would be that <code><a title="en/DOM/CSSMediaRule" rel="internal" href="https://developer.mozilla.org/en/DOM/CSSMediaRule">CSSMediaRule</a></code>.]]></haxe_doc>
		</parentRule>
		<parentStyleSheet public="1" set="null">
			<c path="js.html.CSSStyleSheet"/>
			<haxe_doc><![CDATA[Returns the <code><a title="en/DOM/CSSStyleSheet" rel="internal" href="https://developer.mozilla.org/en/DOM/CSSStyleSheet">CSSStyleSheet</a></code> object for the style sheet that contains this rule]]></haxe_doc>
		</parentStyleSheet>
		<type public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[One of the <a rel="custom" href="https://developer.mozilla.org/en/DOM/cssRule#Type_constants">Type constants</a>&nbsp;indicating the type of CSS&nbsp;rule.]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[<p>An object implementing the <code>CSSRule</code> DOM interface represents a single CSS rule. References to a <code>CSSRule</code>-implementing object may be obtained by looking at a <a title="en/DOM/stylesheet" rel="internal" href="/api/js/html/CSSStyleSheet">CSS style sheet's</a> <code><a title="en/DOM/CSSStyleSheet/cssRules" rel="internal" href="/api/js/html/CSSStyleSheet">cssRules</a></code> list.</p>
<p>There are several kinds of rules. The <code>CSSRule</code> interface specifies the properties common to all rules, while properties unique to specific rule types are specified in the more specialized interfaces for those rules' respective types.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/cssRule">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CSSRule"</e></m></meta>
	</class>
	<class path="js.html.CSSRuleList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CSSRuleList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.CSSRule"/>
</f></item>
		<haxe_doc><![CDATA[A <code>CSSRuleList</code> is an array-like object containing an ordered collection of <code><a title="en/DOM/cssRule" rel="internal" href="/api/js/html/CSSKeyframeRule">CSSRule</a></code> objects.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CSSRuleList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CSSRuleList"</e></m></meta>
	</class>
	<class path="js.html.CSSStyleDeclaration" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CSSStyleDeclaration.hx" extern="1">
		<cssText public="1">
			<c path="String"/>
			<haxe_doc>Textual representation of the declaration block. Setting this attribute changes the style. Setter throws DOMException.</haxe_doc>
		</cssText>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of properties. See the <strong>item</strong> method below.]]></haxe_doc>
		</length>
		<parentRule public="1" set="null">
			<c path="js.html.CSSRule"/>
			<haxe_doc><![CDATA[The containing <code><a href="https://developer.mozilla.org/en/DOM/cssRule" rel="internal" title="en/DOM/cssRule">cssRule</a>.</code>]]></haxe_doc>
		</parentRule>
		<animation public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property for <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-name">animation-name</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-duration">animation-duration</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-timing-function">animation-timing-function</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-delay">animation-delay</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-iteration-count">animation-iteration-count</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-direction">animation-direction</a></code>
.]]></haxe_doc>
		</animation>
		<animationDelay public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-delay</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies when the animation should start. This lets the animation sequence begin some time after it's applied to an element.]]></haxe_doc>
		</animationDelay>
		<animationDirection public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-direction</code> CSS property indicates whether the animation should play in reverse on alternate cycles.]]></haxe_doc>
		</animationDirection>
		<animationDuration public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-duration</code> CSS property specifies the length of time that an animation should take to complete one cycle.]]></haxe_doc>
		</animationDuration>
		<animationIterationCount public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-iteration-count</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property defines the number of times an animation cycle should be played before stopping.]]></haxe_doc>
		</animationIterationCount>
		<animationName public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-name</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies a list of animations that should be applied to the selected element. Each name indicates a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/@keyframes">@keyframes</a></code>
 at-rule that defines the property values for the animation sequence.]]></haxe_doc>
		</animationName>
		<animationPlayState public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-play-state</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines whether an animation is running or paused. You can query this property's value to determine whether or not the animation is currently running; in addition, you can set its value to pause and resume playback of an animation.]]></haxe_doc>
		</animationPlayState>
		<animationTimingFunction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-timing-function</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies how a CSS animation should progress over the duration of each cycle. The possible values are one or several <span class="lang lang-en"><code><a rel="custom" href="https://developer.mozilla.org/en/CSS/timing-function">&lt;timing-function&gt;</a></code>
 </span>.]]></haxe_doc>
		</animationTimingFunction>
		<azimuth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[In combination with<code> elevation</code>, <code>azimuth</code> enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.]]></haxe_doc>
		</azimuth>
		<backfaceVisibility public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>backface-visibility</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines whether or not the back face of the element is visible when facing the user. The back face of an element always is a transparent background, letting, when visible, a mirror image of the front face be displayed.]]></haxe_doc>
		</backfaceVisibility>
		<background public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background </code>CSS property is a shorthand for setting the individual background values in a single place in the style sheet.<code> background </code>can be used to set the values for one or more of: <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-color">background-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-image">background-image</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-position">background-position</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-repeat">background-repeat</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-size">background-size</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-attachment">background-attachment</a></code>
.]]></haxe_doc>
		</background>
		<backgroundAttachment public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[If a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-image">background-image</a></code>
 is specified, the <code>background-attachment</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines whether that image's position is fixed within the viewport, or scrolls along with its containing block.]]></haxe_doc>
		</backgroundAttachment>
		<backgroundClip public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-clip </code>CSS property specifies whether an element's background, either the color or image, extends underneath its border.]]></haxe_doc>
		</backgroundClip>
		<backgroundColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>background-color</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the background color of an element, either through a color value or the keyword <code>transparent</code>.]]></haxe_doc>
		</backgroundColor>
		<backgroundImage public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-image </code>CSS property sets the background images for an element. The images are drawn on successive stacking context layers, with the first specified being drawn as if it is the closest to the user. The <a title="border" rel="internal" href="https://developer.mozilla.org/cn/CSS/border">borders</a> of the element are then drawn on top of them, and the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-color">background-color</a></code>
 is drawn beneath them.]]></haxe_doc>
		</backgroundImage>
		<backgroundOrigin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-origin </code>CSS property determines the background positioning area, that is the position of the origin of an image specified using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-image">background-image</a></code>
 CSS property.]]></haxe_doc>
		</backgroundOrigin>
		<backgroundPosition public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-position </code>CSS property sets the initial position, relative to the background position layer defined by <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-origin">background-origin</a></code>
 for each defined background image.]]></haxe_doc>
		</backgroundPosition>
		<backgroundRepeat public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>background-repeat</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property defines how background images are repeated. A background image can be repeated along the horizontal axis, the vertical axis, both, or not repeated at all. When the repetition of the image tiles doesn't let them exactly cover the background, the way adjustments are done can be controlled by the author: by default, the last image is clipped, but the different tiles can instead be re-sized, or space can be inserted between the tiles.]]></haxe_doc>
		</backgroundRepeat>
		<backgroundSize public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-size </code>CSS property specifies the size of the background images.]]></haxe_doc>
		</backgroundSize>
		<bleed public="1">
			<c path="String"/>
			<haxe_doc>This property specifies the extent of the page bleed area outside the page box. This property only has effect if crop marks are enabled.</haxe_doc>
		</bleed>
		<border public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property for setting the individual border property values in a single place in the style sheet. <code>border</code> can be used to set the values for one or more of: <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-width">border-width</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-style">border-style</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
.]]></haxe_doc>
		</border>
		<borderBottom public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand that sets the values of <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom-color">border-bottom-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom-style">border-bottom-style</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom-width">border-bottom-width</a></code>
. These properties describe the bottom border of elements.]]></haxe_doc>
		</borderBottom>
		<borderBottomColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-bottom-color </code>CSS property sets the color of the bottom border of an element. Note that in many cases the shorthand CSS properties&nbsp; <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom">border-bottom</a></code>
 are more convenient and preferable.]]></haxe_doc>
		</borderBottomColor>
		<borderBottomLeftRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom-left-radius</code> CSS property sets the rounding of the bottom-left corner of the element. The rounding can be a circle or an ellipse, or if one of the value is <code>0</code> no rounding is done and the corner is square.]]></haxe_doc>
		</borderBottomLeftRadius>
		<borderBottomRightRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom-right-radius</code> CSS property sets the rounding of the bottom-right corner of the element. The rounding can be a circle or an ellipse, or if one of the value is <code>0</code> no rounding is done and the corner is square.]]></haxe_doc>
		</borderBottomRightRadius>
		<borderBottomStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the line style of the bottom border of a box.]]></haxe_doc>
		</borderBottomStyle>
		<borderBottomWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom-width</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the width of the bottom border of a box.]]></haxe_doc>
		</borderBottomWidth>
		<borderCollapse public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-collapse </code>CSS property selects a table's border model. This has a big influence on the look and style of the table cells.]]></haxe_doc>
		</borderCollapse>
		<borderColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-color </code>CSS property is a shorthand for setting the color of the four sides of an element's border: <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top-color">border-top-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right-color">border-right-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom-color">border-bottom-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left-color">border-left-color</a></code>]]></haxe_doc>
		</borderColor>
		<borderImage public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-image </code>CSS property allows drawing an image on the borders of elements. This makes drawing complex looking widgets much simpler than it has been and removes the need for nine boxes in some cases.]]></haxe_doc>
		</borderImage>
		<borderImageOutset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-image-outset </code>property describes, by which amount <dfn id="border-image-area">border image area</dfn> extends beyond the border box.]]></haxe_doc>
		</borderImageOutset>
		<borderImageRepeat public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-image-repeat</code> CSS property defines how the middle part of a border image is handled to match the size of the border. It has a one-value syntax which describes the behavior for all sides, and a two-value syntax that sets a different value for the horizontal and vertical behavior.]]></haxe_doc>
		</borderImageRepeat>
		<borderImageSource public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-image-source</code> CSS property defines the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/image">&lt;image&gt;</a></code>
 to use instead of the style of the border. If this property is set to <code>none</code>, the style defined by <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-style">border-style</a></code>
 is used instead.]]></haxe_doc>
		</borderImageSource>
		<borderImageWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-image-width</code> CSS property defines the offset to use for dividing the border image in nine parts, the top-left corner, central top edge, top-right-corner, central right edge, bottom-right corner, central bottom edge, bottom-left corner, and central right edge. They represent inward distance from the top, right, bottom and right edges.]]></haxe_doc>
		</borderImageWidth>
		<borderLeft public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-left</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand that sets the values of <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left-color">border-left-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left-style">border-left-style</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left-width">border-left-width</a></code>
. These properties describe the left border of elements.]]></haxe_doc>
		</borderLeft>
		<borderLeftColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-left-color </code>CSS property sets the color of the bottom border of an element. Note that in many cases the shorthand CSS properties&nbsp; <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left">border-left</a></code>
 are more convenient and preferable.]]></haxe_doc>
		</borderLeftColor>
		<borderLeftStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-left-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the line style of the left border of a box.]]></haxe_doc>
		</borderLeftStyle>
		<borderLeftWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-left-width</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the width of the left border of a box.]]></haxe_doc>
		</borderLeftWidth>
		<borderRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-radius</code> CSS property allows Web authors to define how rounded border corners are. The curve of each corner is defined using one or two radii, defining its shape: circle or ellipse.]]></haxe_doc>
		</borderRadius>
		<borderRight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-right</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand that sets the values of <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right-color">border-right-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right-style">border-right-style</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right-width">border-right-width</a></code>
. These properties describe the right border of elements.]]></haxe_doc>
		</borderRight>
		<borderRightColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-right-color </code>CSS property sets the color of the bottom border of an element. Note that in many cases the shorthand CSS properties&nbsp; <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right">border-right</a></code>
 are more convenient and preferable.]]></haxe_doc>
		</borderRightColor>
		<borderRightStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-right-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the line style of the right border of a box.]]></haxe_doc>
		</borderRightStyle>
		<borderRightWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-right-width</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the width of the right border of a box.]]></haxe_doc>
		</borderRightWidth>
		<borderSpacing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-spacing</code> CSS property specifies the distance between the borders of adjacent cells (only for the <a title="en/CSS/border-collapse" rel="internal" href="https://developer.mozilla.org/en/CSS/border-collapse">separated borders model</a>). This is equivalent to the <code>cellspacing</code> attribute in presentational HTML, but an optional second value can be used to set different horizontal and vertical spacing.]]></haxe_doc>
		</borderSpacing>
		<borderStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property for setting the line style for all four sides of the elements border.]]></haxe_doc>
		</borderStyle>
		<borderTop public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand that sets the values of <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top-color">border-top-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top-style">border-top-style</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top-width">border-top-width</a></code>
. These properties describe the top border of elements.]]></haxe_doc>
		</borderTop>
		<borderTopColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-top-color </code>CSS property sets the color of the top border of an element. Note that in many cases the shorthand CSS properties&nbsp; <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top">border-top</a></code>
 are more convenient and preferable.]]></haxe_doc>
		</borderTopColor>
		<borderTopLeftRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top-left-radius</code> CSS property sets the rounding of the top-left corner of the element. The rounding can be a circle or an ellipse, or if one of the value is <code>0</code> no rounding is done and the corner is square.]]></haxe_doc>
		</borderTopLeftRadius>
		<borderTopRightRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top-right-radius</code> CSS property sets the rounding of the top-right corner of the element. The rounding can be a circle or an ellipse, or if one of the value is <code>0</code> no rounding is done and the corner is square.]]></haxe_doc>
		</borderTopRightRadius>
		<borderTopStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the line style of the top border of a box.]]></haxe_doc>
		</borderTopStyle>
		<borderTopWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top-width</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the width of the top border of a box.]]></haxe_doc>
		</borderTopWidth>
		<borderWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-width </code>CSS property sets the width of the border of a box. Using the shorthand property <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border">border</a></code>
 is often more convenient.]]></haxe_doc>
		</borderWidth>
		<bottom public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>bottom</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property participates in specifying the position of <em>positioned elements</em>.]]></haxe_doc>
		</bottom>
		<boxShadow public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>box-shadow</code> CSS property accepts one or more shadow effects as a comma-separated list. It allows casting a drop shadow from the frame of almost any element. If a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-radius">border-radius</a></code>
 is specified on the element with a box shadow, the box shadow takes on the same rounded corners. The z-ordering of multiple box shadows is the same as multiple <a title="text-shadow" rel="internal" href="https://developer.mozilla.org/en/CSS/text-shadow">text shadows</a> (the first specified shadow is on top).]]></haxe_doc>
		</boxShadow>
		<boxSizing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> box-sizing </code>CSS property is used to alter the default CSS box model used to calculate widths and heights of elements. It is possible to use this property to emulate the behavior of browsers that do not correctly support the CSS box model specification.]]></haxe_doc>
		</boxSizing>
		<captionSide public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>caption-side</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property positions the content of a table's <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/caption">&lt;caption&gt;</a></code>
 on the specified side.]]></haxe_doc>
		</captionSide>
		<clear public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>clear</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies whether an element can be next to <a title="en/CSS/float" rel="internal" href="https://developer.mozilla.org/en/CSS/float">floating</a> elements that precede it or must be moved down (cleared) below them.]]></haxe_doc>
		</clear>
		<clip public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>clip</code> CSS property defines what portion of an element is visible. The <code>clip</code> property applies only to elements with <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/position">position:absolute</a></code>
.]]></haxe_doc>
		</clip>
		<color public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>color</code> CSS property sets the foreground color of an element's text content]]></haxe_doc>
		</color>
		<columnCount public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-count </code>CSS property describes the number of columns of the element.]]></haxe_doc>
		</columnCount>
		<columnFill public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-fill</code> CSS property controls how contents are partitioned into columns. Contents are either balanced, which means that contents in all columns will have the same height or, when using <code>auto</code>, just take up the room the content needs.]]></haxe_doc>
		</columnFill>
		<columnGap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-gap</code> CSS property sets the size of the gap between columns for elements which are specified to display as a multi-column element.]]></haxe_doc>
		</columnGap>
		<columnRule public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[In multi-column layouts, the <code>column-rule</code> CSS property specifies a straight line, or "rule", to be drawn between each column. It is a convenient shorthand to avoid setting each of the individual <code>column-rule-*</code> properties separately : <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-rule-width">column-rule-width</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-rule-style">column-rule-style</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-rule-color">column-rule-color</a></code>
.]]></haxe_doc>
		</columnRule>
		<columnRuleColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> column-rule-color </code>CSS property lets you set the color of the rule drawn between columns in multi-column layouts.]]></haxe_doc>
		</columnRuleColor>
		<columnRuleStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> column-rule-style </code>CSS property lets you set the style of the rule drawn between columns in multi-column layouts.]]></haxe_doc>
		</columnRuleStyle>
		<columnRuleWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> column-rule-width </code>CSS property lets you set the width of the rule drawn between columns in multi-column layouts.]]></haxe_doc>
		</columnRuleWidth>
		<columnSpan public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-span</code> CSS property makes it possible for an element to span across all columns when its value is set to <code>all</code>. An element that spans more than one column is called a <strong>spanning element</strong>.]]></haxe_doc>
		</columnSpan>
		<columnWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-width</code> CSS property suggests an optimal column width. This is not a absolute value but a mere hint. Browser will adjust the width of the column around that suggested value, allowing to achieve scalable designs that fit different screen size. Especially in presence of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-count">column-count</a></code>
 CSS property which has precedence, to set an exact column width, all length values must be specified. In horizontal text these are <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/width">width</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-width">column-width</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-gap">column-gap</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-rule-width">column-rule-width</a></code>
.]]></haxe_doc>
		</columnWidth>
		<columns public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>columns</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property allowing to set both the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-width">column-width</a></code>
 and the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-count">column-count</a></code>
 properties at the same time.]]></haxe_doc>
		</columns>
		<content public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> content </code>CSS property is used with the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/%3Abefore">:before</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/%3Aafter">:after</a></code>
 pseudo-elements to generate content in an element.]]></haxe_doc>
		</content>
		<counterIncrement public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>counter-increment</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is used to increase the value of <a title="en/CSS_Counters" rel="internal" href="https://developer.mozilla.org/en/CSS_Counters">CSS Counters</a> by a given value. The counter's value can be reset using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/counter-reset">counter-reset</a></code>
 CSS property.]]></haxe_doc>
		</counterIncrement>
		<counterReset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>counter-reset</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is used to reset <a title="en/CSS_Counters" rel="internal" href="https://developer.mozilla.org/en/CSS_Counters">CSS Counters</a> to a given value.]]></haxe_doc>
		</counterReset>
		<cursor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> cursor </code>CSS property specifies the mouse cursor displayed when the mouse pointer is over an element.]]></haxe_doc>
		</cursor>
		<direction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>direction</code> CSS property should be set to match the direction of the text: <code>rtl</code> for Hebrew or Arabic text and <code>ltr</code> for other scripts. This should normally be done as part of the document (e.g., using the <code>dir</code> attribute in HTML) rather than through direct use of CSS.]]></haxe_doc>
		</direction>
		<display public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>display</code> CSS property specifies the type of rendering box used for an element. In HTML, default <code>display</code> property values are taken from behaviors described in the HTML specifications or from the browser/user default stylesheet. The default value in XML is <code>inline</code>.]]></haxe_doc>
		</display>
		<emptyCells public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>empty-cells </code>CSS property specifies how user agent should render borders and backgrounds around cells that have no visible content.]]></haxe_doc>
		</emptyCells>
		<float public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>float</code> CSS property specifies that an element should be taken from the normal flow and placed along the left or right side of its container, where text and inline elements will wrap around it.]]></haxe_doc>
		</float>
		<font public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>font</code> CSS property is either a shorthand property for setting <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-style">font-style</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-variant">font-variant</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-weight">font-weight</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-size">font-size</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/line-height">line-height</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-family">font-family</a></code>
, or a way to set the element's font to a system font, using specific keywords.]]></haxe_doc>
		</font>
		<fontFamily public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-family </code>CSS property allows for a prioritized list of font family names and/or generic family names to be specified for the selected element. Unlike most other CSS properties, values are separated by a comma to indicate that they are alternatives. The browser will select the first font on the list that is installed on the computer, or that can be downloaded using the information provided by a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/@font-face">@font-face</a></code>
 at-rule.]]></haxe_doc>
		</fontFamily>
		<fontSize public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>font-size</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the size of the font. The font size may, in turn, change the size of other items, since it is used to compute the value of <code>em</code> and <code>ex</code> length units.]]></haxe_doc>
		</fontSize>
		<fontSizeAdjust public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-size-adjust </code>CSS property specifies that font size should be chosen based on the height of lowercase letters rather than the height of capital letters.]]></haxe_doc>
		</fontSizeAdjust>
		<fontStretch public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-stretch </code>CSS property selects a normal, condensed, or extended face from a font family.]]></haxe_doc>
		</fontStretch>
		<fontStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-style </code>CSS property allows<code> italic </code>or<code> oblique </code>faces to be selected within a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-family">font-family</a></code>
.<br>]]></haxe_doc>
		</fontStyle>
		<fontVariant public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-variant </code>CSS property selects a<code> normal</code>, or<code> small-caps </code>face from a font family. Setting<code> font-variant </code>is also possible by using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font">font</a></code>
 shorthand.]]></haxe_doc>
		</fontVariant>
		<fontWeight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-weight">font-weight</a></code>
 <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the weight or boldness of the font. However, some fonts are not available in all weights; some are available only on <code>normal</code> and <code>bold</code>.]]></haxe_doc>
		</fontWeight>
		<height public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> height </code>CSS property specifies the height of the content area of an element. The <a title="en/CSS/Box_model#content" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#content">content area</a> is <em>inside</em> the padding, border, and margin of the element.]]></haxe_doc>
		</height>
		<hyphens public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>hyphens</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property tells the browser how to go about splitting words to improve the layout of text when line-wrapping.]]></haxe_doc>
		</hyphens>
		<imageRendering public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>image-rendering</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property provides a hint to the user agent about how to handle its image rendering.<br> <code>image-rendering </code>applies to scaled images (and other elements, see below). For example, if the natural size of the image is<em> 100×100px </em>but the page author specifies the dimensions to <code>200×200px</code> (or<code>50×50px</code>), then the image will be upscaled (or downscaled) to the new dimensions using the specified algorithm. Scaling may also apply due to user interaction (zooming).]]></haxe_doc>
		</imageRendering>
		<left public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>left</code> CSS property specifies part of the position of positioned elements.]]></haxe_doc>
		</left>
		<letterSpacing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> letter-spacing </code>CSS property specifies spacing behavior between text characters.]]></haxe_doc>
		</letterSpacing>
		<lineHeight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[On inline elements, the<code> line-height </code>CSS property specifies the height that is used in the calculation of the line box height.<br>
On block level elements,<code> line-height </code>specifies the minimal height of line boxes within the element.]]></haxe_doc>
		</lineHeight>
		<listStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> list-style </code>CSS property is a shorthand property for setting <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-image">list-style-image</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-position">list-style-position</a></code>
.]]></haxe_doc>
		</listStyle>
		<listStyleImage public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> list-style-image </code>CSS property sets the image that will be used as the list item marker. It is often more convenient to use the shortcut <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style">list-style</a></code>
.]]></haxe_doc>
		</listStyleImage>
		<listStylePosition public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> list-style-position </code>CSS property specifies the position of the marker box in the principal block box. It is often more convenient to use the shortcut <span class="lang lang-en"><code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style">list-style</a></code>
</span>.]]></haxe_doc>
		</listStylePosition>
		<listStyleType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> list-style-type </code>CSS property specifies appearance of a list item element. As it is the only one who defaults to <code>display:list-item</code>, this is usually a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/li">&lt;li&gt;</a></code>
 element, but can be any element with this <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/display">display</a></code>
 value.]]></haxe_doc>
		</listStyleType>
		<margin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> margin </code>CSS property sets the margin for all four sides. It is a shorthand to avoid setting each side separately with the other margin properties:<br>
<code><a rel="custom" href="https://developer.mozilla.org/en/CSS/margin-top">margin-top</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/margin-right">margin-right</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/margin-bottom">margin-bottom</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/margin-left">margin-left</a></code>
.<br>
Negative value are also allowed.]]></haxe_doc>
		</margin>
		<marginBottom public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>margin-bottom</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the margin space required on the bottom of an element. A negative value is also allowed.]]></haxe_doc>
		</marginBottom>
		<marginLeft public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>margin-left</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the margin space required on the left side of an element. A negative value is also allowed.]]></haxe_doc>
		</marginLeft>
		<marginRight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>margin-right</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the margin space required on the right side of an element. A negative value is also allowed.]]></haxe_doc>
		</marginRight>
		<marginTop public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> margin-top </code>CSS property of an element sets the margin space required on the top of an element. A negative value is also allowed.]]></haxe_doc>
		</marginTop>
		<markerOffset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[&nbsp;]]></haxe_doc>
		</markerOffset>
		<marks public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>marks</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property adds crop and/or cross marks to the presentation of the document. <em>Crop marks</em> indicate where the page should be cut. <em>Cross marks</em> are used to align sheets.]]></haxe_doc>
		</marks>
		<maxHeight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> max-height </code>CSS property is used to set the maximum height of a given element. It prevents the used value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/height">height</a></code>
 property from becoming larger than the value specified for<code> max-height</code>.]]></haxe_doc>
		</maxHeight>
		<maxWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> max-width </code>CSS property is used to set the maximum width of a given element. It prevents the used value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/width">width</a></code>
 property from becoming larger than the value specified for<code> max-width</code>.]]></haxe_doc>
		</maxWidth>
		<minHeight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> min-height </code>CSS property is used to set the minimum height of a given element. It prevents the used value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/height">height</a></code>
 property from becoming smaller than the value specified for<code> min-height</code>.]]></haxe_doc>
		</minHeight>
		<minWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> min-width </code>CSS property is used to set the minimum width of a given element. It prevents the used value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/width">width</a></code>
 property from becoming smaller than the value specified for<code> min-width</code>.]]></haxe_doc>
		</minWidth>
		<opacity public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>opacity</code> CSS property specifies the transparency of an element, that is, the degree to which the background behind the element is overlaid.]]></haxe_doc>
		</opacity>
		<orphans public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>orphans</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property refers to the <em>minimum</em> number of lines in a block container that must be left at the bottom of the page.&nbsp; This property is normally used to control how page breaks occur.]]></haxe_doc>
		</orphans>
		<outline public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline </code>CSS property is a shorthand property for setting one or more of the individual outline properties <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/outline-style">outline-style</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/outline-width">outline-width</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/outline-color">outline-color</a></code>
 in a single rule. In most cases the use of this shortcut is preferable and more convenient.]]></haxe_doc>
		</outline>
		<outlineColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline-color </code>CSS property sets the color of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.]]></haxe_doc>
		</outlineColor>
		<outlineOffset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline-offset </code>CSS property is used to set space between an <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/outline">outline</a></code>
 and the edge or border of an element. An outline is a line that is drawn around elements, outside the border edge.]]></haxe_doc>
		</outlineOffset>
		<outlineStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline-style </code>CSS property is used to set the style of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.]]></haxe_doc>
		</outlineStyle>
		<outlineWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline-width </code>CSS property is used to set the width of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out:]]></haxe_doc>
		</outlineWidth>
		<overflow public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> overflow </code>CSS property specifies whether to clip content, render scroll bars or display overflow content of a block-level element.]]></haxe_doc>
		</overflow>
		<overflowX public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>overflow-x </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies whether to clip content, render a scroll bar, or display overflow content of a block-level element, when it overflows at the left and right edges.]]></haxe_doc>
		</overflowX>
		<overflowY public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>overflow-y </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies whether to clip content, render a scroll bar, or display overflow content of a block-level element, when it overflows at the top and bottom edges.]]></haxe_doc>
		</overflowY>
		<padding public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> padding </code>CSS property sets the required padding space on all sides of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/Box_model#padding">padding area</a> is the space between the content of the element and its border. Negative values are not allowed.]]></haxe_doc>
		</padding>
		<paddingBottom public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>padding-bottom</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the padding space required on the bottom of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#padding">padding area</a> is the space between the content of the element and it's border. A negative value is not allowed.]]></haxe_doc>
		</paddingBottom>
		<paddingLeft public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>padding-left</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the padding space required on the left side of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#padding">padding area</a> is the space between the content of the element and it's border. A negative value is not allowed.]]></haxe_doc>
		</paddingLeft>
		<paddingRight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>padding-right</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the padding space required on the right side of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#padding">padding area</a> is the space between the content of the element and its border. Negative values are not allowed.]]></haxe_doc>
		</paddingRight>
		<paddingTop public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>padding-top</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the padding space required on the top of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#padding">padding area</a> is the space between the content of the element and it's border. A negative values is not allowed.]]></haxe_doc>
		</paddingTop>
		<pageBreakAfter public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>page-break-after</code> CSS property adjusts page breaks <em>after</em> the current element.]]></haxe_doc>
		</pageBreakAfter>
		<pageBreakBefore public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>page-break-before</code> CSS property adjusts page breaks <em>before</em> the current element.]]></haxe_doc>
		</pageBreakBefore>
		<pageBreakInside public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>page-break-inside</code> CSS property adjusts page breaks <em>inside</em> the current element.]]></haxe_doc>
		</pageBreakInside>
		<perspective public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>perspective</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines the distance between the z=0 plane and the user in order to give to the 3D-positioned element some perspective. Each 3D element that is placed between the z=0 and the user is enlarged, each 3D-element with z&lt;0 is shrinked. How much deformation is defined by the value of this property.]]></haxe_doc>
		</perspective>
		<perspectiveOrigin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>perspective-origin</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines the position the viewer is looking at. It is used as the <em>vanishing point</em> by the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/perspective">perspective</a></code>
 property.]]></haxe_doc>
		</perspectiveOrigin>
		<position public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> position </code>CSS property chooses alternative rules for positioning elements, designed to be useful for scripted animation effects.]]></haxe_doc>
		</position>
		<quotes public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>quotes</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property indicates how user agents should render quotation marks.]]></haxe_doc>
		</quotes>
		<resize public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>resize</code> CSS property lets you control the resizability of an element.]]></haxe_doc>
		</resize>
		<right public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>right</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies part of the position of positioned elements.]]></haxe_doc>
		</right>
		<tabSize public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>tab-size</code> CSS property is used to customize the width of a tab (<code>U+0009</code>) character.]]></haxe_doc>
		</tabSize>
		<tableLayout public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>table-layout</code> CSS property defines the algorithm to be used to layout the table cells, rows, and columns.]]></haxe_doc>
		</tableLayout>
		<textAlign public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> text-align </code>CSS property describes how inline content like text is aligned in its parent block element.<code> text-align </code>does not control the alignment of block elements itself, only their inline content.]]></haxe_doc>
		</textAlign>
		<textAlignLast public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-align-last</code> CSS property describes how the last line of a block or a line right before a forced line break is aligned.]]></haxe_doc>
		</textAlignLast>
		<textDecoration public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> text-decoration </code>CSS property is used to set the text formattings <code>underline, overline, line-through</code> and <code>blink</code>.]]></haxe_doc>
		</textDecoration>
		<textDecorationColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-decoration-color</code> CSS property sets the color used when drawing underlines, overlines, or strike-throughs specified by <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-decoration-line">text-decoration-line</a></code>
. This is the preferred way to color these text decorations, rather than using combinations of other HTML&nbsp;elements.]]></haxe_doc>
		</textDecorationColor>
		<textDecorationLine public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-decoration-line</code> CSS property sets what kind of line decorations are added to an element.]]></haxe_doc>
		</textDecorationLine>
		<textDecorationStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-decoration-style</code> CSS property defines the style of the lines specified by <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-decoration-line">text-decoration-line</a></code>
. The style applies to all lines, there is no way to define different style for each of the line defined by <code>text-decoration-line</code>.]]></haxe_doc>
		</textDecorationStyle>
		<textIndent public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> text-indent </code>CSS property specifies how much horizontal space should be left before beginning of the first line of the text content of an element. Horizontal spacing is with respect to the left (or right, for right-to-left layout) edge of the containing block element's box.]]></haxe_doc>
		</textIndent>
		<textShadow public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> text-shadow </code>CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-decoration">text-decorations</a></code>
 of the element.]]></haxe_doc>
		</textShadow>
		<textTransform public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-transform</code> CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.]]></haxe_doc>
		</textTransform>
		<top public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>top</code> CSS property specifies part of the position of positioned elements. It has no effect on non-positioned elements.]]></haxe_doc>
		</top>
		<transform public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>transform</code> CSS property lets you modify the coordinate space of the CSS visual formatting model. Using it, elements can be translated, rotated, scaled, and skewed according to the values set.]]></haxe_doc>
		</transform>
		<transformOrigin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>transform-origin</code> CSS property lets you modify the origin for transformations of an element. For example, the transform-origin of the <code>rotate()</code> function is the centre of rotation. (This property is applied by first translating the element by the negated value of the property, then applying the element's transform, then translating by the property value.)]]></haxe_doc>
		</transformOrigin>
		<transformStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>transform-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines if the children of the element are positioned in the 3D-space or are flattened in the plane of the element.]]></haxe_doc>
		</transformStyle>
		<transition public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> transition </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property for <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/transition-property">transition-property</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/transition-duration">transition-duration</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/transition-timing-function">transition-timing-function</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/transition-delay">transition-delay</a></code>
.]]></haxe_doc>
		</transition>
		<transitionDelay public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> transition-delay </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the amount of time to wait between a change being requested to a property that is to be transitioned and the start of the <a title="en/CSS/CSS transitions" rel="internal" href="https://developer.mozilla.org/en/CSS/CSS_transitions">transition effect</a>.]]></haxe_doc>
		</transitionDelay>
		<transitionDuration public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> transition-duration </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the number of seconds or milliseconds a transition animation should take to complete. By default, the value is 0s, meaning that no animation will occur.]]></haxe_doc>
		</transitionDuration>
		<transitionProperty public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>transition-property</code> CSS property is used to specify the names of CSS properties to which a <a title="en/CSS/CSS transitions" rel="internal" href="https://developer.mozilla.org/en/CSS/CSS_transitions">transition effect</a> should be applied.]]></haxe_doc>
		</transitionProperty>
		<transitionTimingFunction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> transition-timing-function </code>CSS property is used to describe how the intermediate values of the CSS&nbsp;properties being affected by a <a title="en/CSS/CSS transitions" rel="internal" href="https://developer.mozilla.org/en/CSS/CSS_transitions">transition effect</a> are calculated. This in essence lets you establish an acceleration curve, so that the speed of the transition can vary over its duration.]]></haxe_doc>
		</transitionTimingFunction>
		<verticalAlign public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>vertical-align</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the vertical alignment of an inline or table-cell element.]]></haxe_doc>
		</verticalAlign>
		<visibility public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> visibility </code>CSS property is used for two things:]]></haxe_doc>
		</visibility>
		<whiteSpace public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> white-space </code>CSS property is used to to describe how whitespace inside the element is handled.]]></haxe_doc>
		</whiteSpace>
		<widows public="1">
			<c path="String"/>
			<haxe_doc>where:</haxe_doc>
		</widows>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> width </code>CSS property specifies the width of the content area of an element. The <a title="en/CSS/box_model#content" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#content">content area</a> is <em>inside</em> the padding, border, and margin of the element.]]></haxe_doc>
		</width>
		<wordSpacing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> word-spacing </code>CSS property specifies spacing behavior between tags and words.]]></haxe_doc>
		</wordSpacing>
		<wordWrap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>word-wrap</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is used to to specify whether or not the browser is allowed to break lines within words in order to prevent overflow when an otherwise unbreakable string is too long to fit.]]></haxe_doc>
		</wordWrap>
		<zIndex public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> z-index </code>CSS property specifies the z-order of an element and its descendants. When elements overlap, z-order determines which one covers the other. An element with a larger z-index generally covers an element with a lower one.]]></haxe_doc>
		</zIndex>
		<getPropertyCSSValue public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="js.html.CSSValue"/>
</f></getPropertyCSSValue>
		<getPropertyPriority public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="String"/>
</f></getPropertyPriority>
		<getPropertyShorthand public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="String"/>
</f></getPropertyShorthand>
		<getPropertyValue public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="String"/>
</f></getPropertyValue>
		<isPropertyImplicit public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<x path="Bool"/>
</f></isPropertyImplicit>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<removeProperty public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="String"/>
</f></removeProperty>
		<setProperty public="1" set="method"><f a="propertyName:?value:priority">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setProperty>
		<haxe_doc><![CDATA[<p>A CSSStyleDeclaration is an interface to the <a class="external" rel="external" href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#block" title="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#block" target="_blank">declaration block</a> returned by the <code><a href="https://developer.mozilla.org/en/DOM/cssRule.style" rel="internal" title="en/DOM/cssRule.style">style</a></code> property of a <code><a href="/api/js/html/CSSKeyframeRule" rel="internal" title="en/DOM/cssRule">cssRule</a></code> in a <a href="/api/js/html/StyleSheet" rel="internal" title="en/DOM/stylesheet">stylesheet</a>, when the&nbsp;rule is a <a title="en/DOM/cssRule#CSSStyleRule" rel="internal" href="https://developer.mozilla.org/en/DOM/cssRule#CSSStyleRule">CSSStyleRule</a>.</p>
<p>CSSStyleDeclaration is also a <strong>read-only </strong>interface to the result of <a title="en/DOM/window.getComputedStyle" rel="internal" href="https://developer.mozilla.org/en/DOM/window.getComputedStyle">getComputedStyle</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CSSStyleDeclaration">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CSSStyleDeclaration"</e></m></meta>
	</class>
	<class path="js.html.StyleSheet" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StyleSheet.hx" extern="1">
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>This property indicates whether the current stylesheet has been applied or not.</haxe_doc>
		</disabled>
		<href public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the location of the stylesheet.</haxe_doc>
		</href>
		<media public="1" set="null">
			<c path="js.html.MediaList"/>
			<haxe_doc>Specifies the intended destination medium for style information.</haxe_doc>
		</media>
		<ownerNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the node that associates this style sheet with the document.</haxe_doc>
		</ownerNode>
		<parentStyleSheet public="1" set="null">
			<c path="js.html.StyleSheet"/>
			<haxe_doc>Returns the stylesheet that is including this one, if any.</haxe_doc>
		</parentStyleSheet>
		<title public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the advisory title of the current style sheet.</haxe_doc>
		</title>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>Specifies the style sheet language for this style sheet.</haxe_doc>
		</type>
		<haxe_doc><![CDATA[An object implementing the <code>StyleSheet</code> interface represents a single style sheet.&nbsp; CSS style sheets will further implement the more specialized <code><a title="en/DOM/CSSStyleSheet" rel="internal" href="/api/js/html/CSSStyleSheet">CSSStyleSheet</a></code> interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/stylesheet">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"StyleSheet"</e></m></meta>
	</class>
	<class path="js.html.CSSStyleSheet" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CSSStyleSheet.hx" extern="1">
		<extends path="js.html.StyleSheet"/>
		<cssRules public="1" set="null">
			<c path="js.html.CSSRuleList"/>
			<haxe_doc><![CDATA[Returns a <code><a title="en/DOM/CSSRuleList" rel="internal" href="https://developer.mozilla.org/en/DOM/CSSRuleList">CSSRuleList</a></code> of the CSS rules in the style sheet.]]></haxe_doc>
		</cssRules>
		<ownerRule public="1" set="null">
			<c path="js.html.CSSRule"/>
			<haxe_doc><![CDATA[If this style sheet is imported into the document using an <code><a title="en/CSS/@import" rel="internal" href="https://developer.mozilla.org/en/CSS/@import">@import</a></code> rule, the <code>ownerRule</code> property will return that <code><a title="en/DOM/CSSImportRule" rel="internal" href="https://developer.mozilla.org/en/DOM/CSSImportRule" class="new ">CSSImportRule</a></code>, otherwise it returns <code>null</code>.]]></haxe_doc>
		</ownerRule>
		<rules public="1" set="null"><c path="js.html.CSSRuleList"/></rules>
		<addRule public="1" set="method"><f a="selector:style:?index">
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
</f></addRule>
		<deleteRule public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteRule>
		<insertRule public="1" set="method"><f a="rule:index">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
</f></insertRule>
		<removeRule public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></removeRule>
		<haxe_doc><![CDATA[<p>An object implementing the <code>CSSStyleSheet</code> interface represents a single <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> style sheet.</p>
<p>A CSS style sheet consists of CSS rules, each of which can be manipulated through an object that corresponds to that rule and that implements the <code><a title="en/DOM/cssRule" rel="internal" href="/api/js/html/CSSKeyframeRule">CSSRule</a></code> interface. The <code>CSSStyleSheet</code> itself lets you examine and modify its corresponding style sheet, including its list of rules.</p>
<p>In practice, every <code>CSSStyleSheet</code> also implements the more generic <code><a title="en/DOM/StyleSheet" rel="internal" href="/api/js/html/StyleSheet">StyleSheet</a></code> interface. A list of <code>CSSStyleSheet</code>-implementing objects corresponding to the style sheets for a given document can be reached by the <code><a title="en/DOM/document.styleSheets" rel="internal" href="/api/js/html/StyleSheetList">document.styleSheets</a></code> property, if the document is styled by an external CSS style sheet or an inline <code><a title="en/HTML/element/style" rel="internal" href="https://developer.mozilla.org/en/HTML/Element/style">style</a></code> element.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CSSStyleSheet">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CSSStyleSheet"</e></m></meta>
	</class>
	<class path="js.html.CSSValue" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CSSValue.hx" extern="1">
		<CSS_CUSTOM public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></CSS_CUSTOM>
		<CSS_INHERIT public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></CSS_INHERIT>
		<CSS_PRIMITIVE_VALUE public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></CSS_PRIMITIVE_VALUE>
		<CSS_VALUE_LIST public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></CSS_VALUE_LIST>
		<cssText public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</cssText>
		<cssValueType public="1" set="null"><x path="Int"/></cssValueType>
		<meta><m n=":native"><e>"CSSValue"</e></m></meta>
	</class>
	<class path="js.html.CanvasElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CanvasElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<height public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas#attr-height">height</a></code>
 HTML attribute, specifying the height of the coordinate space in CSS pixels.]]></haxe_doc>
		</height>
		<width public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas#attr-width">width</a></code>
 HTML attribute, specifying the width of the coordinate space in CSS pixels.]]></haxe_doc>
		</width>
		<getContext public="1" set="method"><f a="contextId">
	<c path="String"/>
	<d/>
</f></getContext>
		<toDataURL public="1" set="method"><f a="?type">
	<c path="String"/>
	<c path="String"/>
</f></toDataURL>
		<getContext2d public="1" get="inline" set="null" line="49">
			<f a=""><c path="js.html.CanvasRenderingContext2D"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>getContext("2d")</code>.]]></haxe_doc>
		</getContext2d>
		<getContextWebGL public="1" get="inline" set="null" line="51"><f a="?attribs" v="null">
	<t path="js.html.webgl.ContextAttributes"/>
	<c path="js.html.webgl.RenderingContext"/>
</f></getContextWebGL>
		<haxe_doc><![CDATA[DOM&nbsp;canvas elements expose the <code><a class="external" href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code> interface, which provides properties and methods for manipulating the layout and presentation of canvas elements. The <code>HTMLCanvasElement</code> interface inherits the properties and methods of the <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 object interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLCanvasElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLCanvasElement"</e></m></meta>
	</class>
	<class path="js.html.CanvasGradient" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CanvasGradient.hx" extern="1">
		<addColorStop public="1" set="method"><f a="offset:color">
	<x path="Float"/>
	<c path="String"/>
	<x path="Void"/>
</f></addColorStop>
		<haxe_doc><![CDATA[This is an opaque object representing a gradient and returned by <a title="en/DOM/CanvasRenderingContext2D" rel="internal" href="/api/js/html/CanvasRenderingContext2D">CanvasRenderingContext2D</a>'s <a title="en/DOM/CanvasRenderingContext2D.createLinearGradient" rel="internal" href="/api/js/html/CanvasRenderingContext2D">createLinearGradient</a> or <a title="en/DOM/CanvasRenderingContext2D.createRadialGradient" rel="internal" href="/api/js/html/CanvasRenderingContext2D">createRadialGradient</a> methods.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CanvasGradient">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasGradient"</e></m></meta>
	</class>
	<class path="js.html.CanvasPattern" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CanvasPattern.hx" extern="1">
		<haxe_doc><![CDATA[This is an opaque object created by <a title="en/DOM/CanvasRenderingContext2D" rel="internal" href="/api/js/html/CanvasRenderingContext2D">CanvasRenderingContext2D</a>'s <a title="en/DOM/CanvasRenderingContext2D.createPattern" rel="internal" href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D.createPattern" class="new ">createPattern</a> method (whether based on a image, canvas, or video).<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CanvasPattern">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasPattern"</e></m></meta>
	</class>
	<class path="js.html.CanvasRenderingContext" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CanvasRenderingContext.hx" extern="1">
		<canvas public="1" set="null"><c path="js.html.CanvasElement"/></canvas>
		<meta><m n=":native"><e>"CanvasRenderingContext"</e></m></meta>
	</class>
	<class path="js.html.CanvasRenderingContext2D" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/CanvasRenderingContext2D.hx" extern="1">
		<extends path="js.html.CanvasRenderingContext"/>
		<backingStorePixelRatio public="1" set="null"><x path="Float"/></backingStorePixelRatio>
		<fillStyle public="1">
			<d/>
			<haxe_doc><![CDATA[Color or style to use inside shapes. Default <code>#000</code> (black).]]></haxe_doc>
		</fillStyle>
		<font public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Default value <code>10px sans-serif</code>.]]></haxe_doc>
		</font>
		<globalAlpha public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[Alpha value that is applied to shapes and images before they are composited onto the canvas. Default <code>1.0</code> (opaque).]]></haxe_doc>
		</globalAlpha>
		<globalCompositeOperation public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[With <code>globalAplpha</code> applied this sets how shapes and images are drawn onto the existing bitmap. Possible values: <ul> <li><code>source-atop</code></li> <li><code>source-in</code></li> <li><code>source-out</code></li> <li><code>source-over</code> (default)</li> <li><code>destination-atop</code></li> <li><code>destination-in</code></li> <li><code>destination-out</code></li> <li><code>destination-over</code></li> <li><code>lighter</code></li> <li><code>xor</code></li> </ul>]]></haxe_doc>
		</globalCompositeOperation>
		<imageSmoothingEnabled public="1"><x path="Bool"/></imageSmoothingEnabled>
		<lineCap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Type of endings on the end of lines. Possible values: <code>butt</code> (default), <code>round</code>, <code>square</code>]]></haxe_doc>
		</lineCap>
		<lineDash public="1"><c path="Array"><d/></c></lineDash>
		<lineDashOffset public="1"><x path="Float"/></lineDashOffset>
		<lineJoin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Defines the type of corners where two lines meet. Possible values: <code>round</code>, <code>bevel</code>, <code>miter</code> (default)]]></haxe_doc>
		</lineJoin>
		<lineWidth public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[Width of lines. Default <code>1.0</code>]]></haxe_doc>
		</lineWidth>
		<miterLimit public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[Default <code>10</code>.]]></haxe_doc>
		</miterLimit>
		<shadowBlur public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[Specifies the blurring effect. Default <code>0</code>]]></haxe_doc>
		</shadowBlur>
		<shadowColor public="1">
			<c path="String"/>
			<haxe_doc>Color of the shadow. Default fully-transparent black.</haxe_doc>
		</shadowColor>
		<shadowOffsetX public="1">
			<x path="Float"/>
			<haxe_doc>Horizontal distance the shadow will be offset. Default 0.</haxe_doc>
		</shadowOffsetX>
		<shadowOffsetY public="1">
			<x path="Float"/>
			<haxe_doc>Vertical distance the shadow will be offset. Default 0.</haxe_doc>
		</shadowOffsetY>
		<strokeStyle public="1">
			<d/>
			<haxe_doc><![CDATA[Color or style to use for the lines around shapes. Default <code>#000</code> (black).]]></haxe_doc>
		</strokeStyle>
		<textAlign public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Possible values: <code>start</code> (default), <code>end</code>, <code>left</code>, <code>right</code> or <code>center</code>.]]></haxe_doc>
		</textAlign>
		<textBaseline public="1"><c path="String"/></textBaseline>
		<arc public="1" set="method"><f a="x:y:radius:startAngle:endAngle:anticlockwise">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></arc>
		<arcTo public="1" set="method"><f a="x1:y1:x2:y2:radius">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></arcTo>
		<beginPath public="1" set="method"><f a=""><x path="Void"/></f></beginPath>
		<bezierCurveTo public="1" set="method"><f a="cp1x:cp1y:cp2x:cp2y:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bezierCurveTo>
		<clearRect public="1" set="method"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearRect>
		<clearShadow public="1" set="method"><f a=""><x path="Void"/></f></clearShadow>
		<clip public="1" set="method"><f a=""><x path="Void"/></f></clip>
		<closePath public="1" set="method"><f a=""><x path="Void"/></f></closePath>
		<createImageData public="1" set="method">
			<f a="sw:sh">
				<x path="Float"/>
				<x path="Float"/>
				<c path="js.html.ImageData"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><createImageData public="1" set="method">
	<f a="imagedata">
		<c path="js.html.ImageData"/>
		<c path="js.html.ImageData"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</createImageData></overloads>
		</createImageData>
		<createLinearGradient public="1" set="method"><f a="x0:y0:x1:y1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.CanvasGradient"/>
</f></createLinearGradient>
		<createPattern public="1" set="method">
			<f a="image:repetitionType">
				<c path="js.html.ImageElement"/>
				<c path="String"/>
				<c path="js.html.CanvasPattern"/>
			</f>
			<haxe_doc><![CDATA[<div id="section_31"><span id="Parameters_10"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>A DOM <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/element">element</a></code>
 to use as the source image for the pattern. This can be any element, although typically you'll use an <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Image" class="new">Image</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
.</dd> <dt><code>repetition</code></dt> <dd>?</dd>
</dl>
</div><div id="section_32"><span id="Return_value_3"></span><h6 class="editable">Return value</h6>
<p>A new DOM canvas pattern object for use in pattern-based operations.</p>
</div><div id="section_33"><span id="Exceptions_thrown"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>NS_ERROR_DOM_INVALID_STATE_ERR</code> 
<span title="(Firefox 10.0 / Thunderbird 10.0)
">Requires Gecko 10.0</span>
</dt> <dd>The specified <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 element for the <code>image</code> parameter is zero-sized (that is, one or both of its dimensions are 0 pixels).</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
			<overloads><createPattern public="1" set="method">
	<f a="canvas:repetitionType">
		<c path="js.html.CanvasElement"/>
		<c path="String"/>
		<c path="js.html.CanvasPattern"/>
	</f>
	<haxe_doc><![CDATA[<div id="section_31"><span id="Parameters_10"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>A DOM <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/element">element</a></code>
 to use as the source image for the pattern. This can be any element, although typically you'll use an <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Image" class="new">Image</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
.</dd> <dt><code>repetition</code></dt> <dd>?</dd>
</dl>
</div><div id="section_32"><span id="Return_value_3"></span><h6 class="editable">Return value</h6>
<p>A new DOM canvas pattern object for use in pattern-based operations.</p>
</div><div id="section_33"><span id="Exceptions_thrown"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>NS_ERROR_DOM_INVALID_STATE_ERR</code> 
<span title="(Firefox 10.0 / Thunderbird 10.0)
">Requires Gecko 10.0</span>
</dt> <dd>The specified <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 element for the <code>image</code> parameter is zero-sized (that is, one or both of its dimensions are 0 pixels).</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
</createPattern></overloads>
		</createPattern>
		<createRadialGradient public="1" set="method"><f a="x0:y0:r0:x1:y1:r1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.CanvasGradient"/>
</f></createRadialGradient>
		<drawImage public="1" set="method">
			<f a="video:sx:sy:sw:sh:dx:dy:dw:dh">
				<c path="js.html.VideoElement"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
			<overloads>
				<drawImage public="1" set="method">
					<f a="image:x:y">
						<c path="js.html.ImageElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="image:x:y:width:height">
						<c path="js.html.ImageElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="image:sx:sy:sw:sh:dx:dy:dw:dh">
						<c path="js.html.ImageElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="canvas:x:y">
						<c path="js.html.CanvasElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="canvas:x:y:width:height">
						<c path="js.html.CanvasElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="canvas:sx:sy:sw:sh:dx:dy:dw:dh">
						<c path="js.html.CanvasElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="video:x:y">
						<c path="js.html.VideoElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="video:x:y:width:height">
						<c path="js.html.VideoElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
			</overloads>
		</drawImage>
		<drawImageFromRect public="1" set="method"><f a="image:?sx:?sy:?sw:?sh:?dx:?dy:?dw:?dh:?compositeOperation">
	<c path="js.html.ImageElement"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="String"/>
	<x path="Void"/>
</f></drawImageFromRect>
		<fill public="1" set="method"><f a=""><x path="Void"/></f></fill>
		<fillRect public="1" set="method"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillRect>
		<fillText public="1" set="method"><f a="text:x:y:?maxWidth">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillText>
		<getImageData public="1" set="method"><f a="sx:sy:sw:sh">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.ImageData"/>
</f></getImageData>
		<getImageDataHD public="1" set="method"><f a="sx:sy:sw:sh">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.ImageData"/>
</f></getImageDataHD>
		<getLineDash public="1" set="method"><f a=""><c path="Array"><x path="Float"/></c></f></getLineDash>
		<isPointInPath public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></isPointInPath>
		<lineTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></lineTo>
		<measureText public="1" set="method"><f a="text">
	<c path="String"/>
	<c path="js.html.TextMetrics"/>
</f></measureText>
		<moveTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<putImageData public="1" set="method">
			<f a="imagedata:dx:dy:dirtyX:dirtyY:dirtyWidth:dirtyHeight">
				<c path="js.html.ImageData"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<h6 class="editable">Compatibility notes</h6>
<ul> <li>Starting in Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0)
, non-finite values to any of these parameters causes the call to putImageData() to be silently ignored, rather than throwing an exception.</li>
</ul> Throws DOMException.]]></haxe_doc>
			<overloads><putImageData public="1" set="method">
	<f a="imagedata:dx:dy">
		<c path="js.html.ImageData"/>
		<x path="Float"/>
		<x path="Float"/>
		<x path="Void"/>
	</f>
	<haxe_doc><![CDATA[<h6 class="editable">Compatibility notes</h6>
<ul> <li>Starting in Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0)
, non-finite values to any of these parameters causes the call to putImageData() to be silently ignored, rather than throwing an exception.</li>
</ul> Throws DOMException.]]></haxe_doc>
</putImageData></overloads>
		</putImageData>
		<putImageDataHD public="1" set="method">
			<f a="imagedata:dx:dy:dirtyX:dirtyY:dirtyWidth:dirtyHeight">
				<c path="js.html.ImageData"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><putImageDataHD public="1" set="method">
	<f a="imagedata:dx:dy">
		<c path="js.html.ImageData"/>
		<x path="Float"/>
		<x path="Float"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</putImageDataHD></overloads>
		</putImageDataHD>
		<quadraticCurveTo public="1" set="method"><f a="cpx:cpy:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></quadraticCurveTo>
		<rect public="1" set="method"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></rect>
		<restore public="1" set="method"><f a=""><x path="Void"/></f></restore>
		<rotate public="1" set="method"><f a="angle">
	<x path="Float"/>
	<x path="Void"/>
</f></rotate>
		<save public="1" set="method"><f a=""><x path="Void"/></f></save>
		<scale public="1" set="method"><f a="sx:sy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scale>
		<setAlpha public="1" set="method"><f a="alpha">
	<x path="Float"/>
	<x path="Void"/>
</f></setAlpha>
		<setCompositeOperation public="1" set="method"><f a="compositeOperation">
	<c path="String"/>
	<x path="Void"/>
</f></setCompositeOperation>
		<setFillColor public="1" set="method">
			<f a="c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setFillColor public="1" set="method"><f a="color:?alpha">
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
				<setFillColor public="1" set="method"><f a="grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
				<setFillColor public="1" set="method"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
			</overloads>
		</setFillColor>
		<setLineCap public="1" set="method"><f a="cap">
	<c path="String"/>
	<x path="Void"/>
</f></setLineCap>
		<setLineDash public="1" set="method"><f a="dash">
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></setLineDash>
		<setLineJoin public="1" set="method"><f a="join">
	<c path="String"/>
	<x path="Void"/>
</f></setLineJoin>
		<setLineWidth public="1" set="method"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></setLineWidth>
		<setMiterLimit public="1" set="method"><f a="limit">
	<x path="Float"/>
	<x path="Void"/>
</f></setMiterLimit>
		<setShadow public="1" set="method">
			<f a="width:height:blur:c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setShadow public="1" set="method"><f a="width:height:blur:?color:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
				<setShadow public="1" set="method"><f a="width:height:blur:grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
				<setShadow public="1" set="method"><f a="width:height:blur:r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
			</overloads>
		</setShadow>
		<setStrokeColor public="1" set="method">
			<f a="c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setStrokeColor public="1" set="method"><f a="color:?alpha">
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
				<setStrokeColor public="1" set="method"><f a="grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
				<setStrokeColor public="1" set="method"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
			</overloads>
		</setStrokeColor>
		<setTransform public="1" set="method"><f a="m11:m12:m21:m22:dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTransform>
		<stroke public="1" set="method"><f a=""><x path="Void"/></f></stroke>
		<strokeRect public="1" set="method"><f a="x:y:width:height:?lineWidth">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeRect>
		<strokeText public="1" set="method"><f a="text:x:y:?maxWidth">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeText>
		<transform public="1" set="method"><f a="m11:m12:m21:m22:dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></transform>
		<translate public="1" set="method"><f a="tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translate>
		<haxe_doc><![CDATA[The bulk of the operations available at present with <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 are available through this interface, returned by a call to <code>getContext()</code> on the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 element, with "2d" as its argument.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasRenderingContext2D"</e></m></meta>
	</class>
	<class path="js.html.ClientRect" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ClientRect.hx" extern="1">
		<bottom public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[Y-coordinate, relative to the viewport origin, of the bottom of the rectangle box. <strong>Read only.</strong>]]></haxe_doc>
		</bottom>
		<height public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[Height of the rectangle box (This is identical to <code>bottom</code> minus <code>top</code>). <strong>Read only.</strong>]]></haxe_doc>
		</height>
		<left public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[X-coordinate, relative to the viewport origin, of the left of the rectangle box. <strong>Read only.</strong>]]></haxe_doc>
		</left>
		<right public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[X-coordinate, relative to the viewport origin, of the right of the rectangle box. <strong>Read only.</strong>]]></haxe_doc>
		</right>
		<top public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[Y-coordinate, relative to the viewport origin, of the top of the rectangle box. <strong>Read only.</strong>]]></haxe_doc>
		</top>
		<width public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[Width of the rectangle box (This is identical to <code>right</code> minus <code>left</code>). <strong>Read only.</strong> 
<span title="(Firefox 3.5 / Thunderbird 3.0 / SeaMonkey 2.0)
">Requires Gecko 1.9.1</span>]]></haxe_doc>
		</width>
		<haxe_doc><![CDATA[<div>

<a rel="custom" href="http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/base/nsIDOMClientRect.idl"><code>dom/interfaces/base/nsIDOMClientRect.idl</code></a><span><a rel="internal" href="https://developer.mozilla.org/en/Interfaces/About_Scriptable_Interfaces" title="en/Interfaces/About_Scriptable_Interfaces">Scriptable</a></span></div><span>Represents a rectangular box. The type of box is specified by the method that returns such an object. It is returned by functions like <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/element.getBoundingClientRect">element.getBoundingClientRect</a></code>
.</span><div><div>1.0</div><div>11.0</div><div></div><div>Introduced</div><div>Gecko 1.9</div><div title="Introduced in Gecko 1.9 (Firefox 3)
"></div><div title="Last changed in Gecko 1.9.1 (Firefox 3)
"></div></div>
<div>Inherits from: <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsISupports">nsISupports</a></code>
<span>Last changed in Gecko 1.9.1 (Firefox 3.5 / Thunderbird 3.0 / SeaMonkey 2.0)
</span></div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIDOMClientRect">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ClientRect"</e></m></meta>
	</class>
	<class path="js.html.ClientRectList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ClientRectList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.ClientRect"/>
</f></item>
		<meta><m n=":native"><e>"ClientRectList"</e></m></meta>
	</class>
	<class path="js.html.Clipboard" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Clipboard.hx" extern="1">
		<dropEffect public="1"><c path="String"/></dropEffect>
		<effectAllowed public="1"><c path="String"/></effectAllowed>
		<files public="1" set="null"><c path="js.html.FileList"/></files>
		<items public="1" set="null"><c path="js.html.DataTransferItemList"/></items>
		<types public="1" set="null"><c path="Array"><d/></c></types>
		<clearData public="1" set="method"><f a="?type">
	<c path="String"/>
	<x path="Void"/>
</f></clearData>
		<getData public="1" set="method"><f a="type">
	<c path="String"/>
	<c path="String"/>
</f></getData>
		<setData public="1" set="method"><f a="type:data">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></setData>
		<setDragImage public="1" set="method"><f a="image:x:y">
	<c path="js.html.ImageElement"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setDragImage>
		<haxe_doc><![CDATA[<div>

<a rel="custom" href="http://mxr.mozilla.org/mozilla-central/source/widget/public/nsIClipboard.idl"><code>widget/public/nsIClipboard.idl</code></a><span><a rel="internal" href="https://developer.mozilla.org/en/Interfaces/About_Scriptable_Interfaces" title="en/Interfaces/About_Scriptable_Interfaces">Scriptable</a></span></div><span>This interface supports basic clipboard operations such as: setting, retrieving, emptying, matching and supporting clipboard data.</span><div>Inherits from: <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsISupports">nsISupports</a></code>
<span>Last changed in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)
</span></div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIClipboard">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Clipboard"</e></m></meta>
	</class>
	<class path="js.html.Comment" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Comment.hx" extern="1">
		<extends path="js.html.CharacterData"/>
		<haxe_doc><![CDATA[<p>A comment is used to add notations within markup; although it is generally not displayed, it is still available to be read in the source view (in Firefox:&nbsp;View -&gt; Page Source).&nbsp; These are represented in HTML and XML as content between <code>&lt;!--</code> and&nbsp; <code>--&gt; . </code>In XML, the character sequence "--" cannot be used within a comment.</p>
<p>A comment has no special properties or methods of its own, but inherits those of <a title="En/DOM/CharacterData" rel="internal" href="/api/js/html/CharacterData">CharacterData</a> (which inherits from <a title="en/DOM/Node" rel="internal" href="/api/js/html/Node">Node</a>).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Comment">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Comment"</e></m></meta>
	</class>
	<class path="js.html.Console" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Console.hx" extern="1">
		<memory public="1" set="null"><c path="js.html.MemoryInfo"/></memory>
		<profiles public="1" set="null"><c path="Array"><c path="js.html.ScriptProfile"/></c></profiles>
		<assert public="1" set="method"><f a="condition:?p1:?p2:?p3:?p4:?p5">
	<x path="Bool"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></assert>
		<clear public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></clear>
		<count public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></count>
		<debug public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></debug>
		<dir public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></dir>
		<dirxml public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></dirxml>
		<error public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></error>
		<group public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></group>
		<groupCollapsed public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></groupCollapsed>
		<groupEnd public="1" set="method"><f a=""><x path="Void"/></f></groupEnd>
		<info public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></info>
		<log public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></log>
		<markTimeline public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></markTimeline>
		<profile public="1" set="method"><f a="title">
	<c path="String"/>
	<x path="Void"/>
</f></profile>
		<profileEnd public="1" set="method"><f a="title">
	<c path="String"/>
	<x path="Void"/>
</f></profileEnd>
		<time public="1" set="method"><f a="title">
	<c path="String"/>
	<x path="Void"/>
</f></time>
		<timeEnd public="1" set="method"><f a="title:?p1:?p2:?p3:?p4:?p5">
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></timeEnd>
		<timeStamp public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></timeStamp>
		<trace public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></trace>
		<warn public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></warn>
		<haxe_doc><![CDATA[<p>Beginning with Firefox 4, the old <a title="en/Error Console" rel="internal" href="https://developer.mozilla.org/en/Error_Console">Error Console</a> has been deprecated in favor of the new, improved Web&nbsp;Console. The Web Console is something of a heads-up display for the web, letting you view error messages and other logged information. In addition, there are methods you can call to output information to the console, making it a useful debugging aid, and you can evaluate JavaScript on the fly.</p>
<p><a title="webconsole.png" rel="internal" href="https://developer.mozilla.org/@api/deki/files/4748/=webconsole.png"><img alt="webconsole.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/4748/=webconsole.png"></a></p>
<p>The Web Console won't replace more advanced debugging tools like <a class="external" title="http://getfirebug.com/" rel="external" href="http://getfirebug.com/" target="_blank">Firebug</a>; what it does give you, however, is a way to let remote users of your site or web application gather and report console logs and other information to you. It also provides a lightweight way to debug content if you don't happen to have Firebug installed when something goes wrong.</p>
<div class="note"><strong>Note:</strong> The Error Console is still available; you can re-enable it by changing the <code>devtools.errorconsole.enabled</code> preference to <code>true</code> and restarting the browser.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Using_the_Web_Console">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Console"</e></m></meta>
	</class>
	<class path="js.html.ContentElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ContentElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<resetStyleInheritance public="1"><x path="Bool"/></resetStyleInheritance>
		<select public="1"><c path="String"/></select>
		<getDistributedNodes public="1" set="method"><f a=""><c path="js.html.NodeList"/></f></getDistributedNodes>
		<meta><m n=":native"><e>"HTMLContentElement"</e></m></meta>
	</class>
	<class path="js.html.Coordinates" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Coordinates.hx" extern="1">
		<accuracy public="1" set="null"><x path="Float"/></accuracy>
		<altitude public="1" set="null"><x path="Float"/></altitude>
		<altitudeAccuracy public="1" set="null"><x path="Float"/></altitudeAccuracy>
		<heading public="1" set="null"><x path="Float"/></heading>
		<latitude public="1" set="null"><x path="Float"/></latitude>
		<longitude public="1" set="null"><x path="Float"/></longitude>
		<speed public="1" set="null"><x path="Float"/></speed>
		<meta><m n=":native"><e>"Coordinates"</e></m></meta>
	</class>
	<class path="js.html.Crypto" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Crypto.hx" extern="1">
		<getRandomValues public="1" set="method"><f a="array">
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></getRandomValues>
		<haxe_doc><![CDATA[Non-standard<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_crypto">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Crypto"</e></m></meta>
	</class>
	<class path="js.html.DListElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc>Indicates that spacing between list items should be reduced.</haxe_doc>
		</compact>
		<haxe_doc><![CDATA[DOM&nbsp;definition list elements expose the <a title="http://www.w3.org/TR/html5/grouping-content.html#htmldlistelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/grouping-content.html#htmldlistelement" target="_blank">HTMLDListElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-52368974" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-52368974" target="_blank"><code>HTMLDListElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating definition list elements. In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLDListElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDListElement"</e></m></meta>
	</class>
	<class path="js.html.DOMApplicationCache" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMApplicationCache.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<CHECKING public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></CHECKING>
		<DOWNLOADING public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></DOWNLOADING>
		<IDLE public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></IDLE>
		<OBSOLETE public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></OBSOLETE>
		<UNCACHED public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></UNCACHED>
		<UPDATEREADY public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></UPDATEREADY>
		<oncached public="1"><t path="js.html.EventListener"/></oncached>
		<onchecking public="1"><t path="js.html.EventListener"/></onchecking>
		<ondownloading public="1"><t path="js.html.EventListener"/></ondownloading>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onnoupdate public="1"><t path="js.html.EventListener"/></onnoupdate>
		<onobsolete public="1"><t path="js.html.EventListener"/></onobsolete>
		<onprogress public="1"><t path="js.html.EventListener"/></onprogress>
		<onupdateready public="1"><t path="js.html.EventListener"/></onupdateready>
		<status public="1" set="null"><x path="Int"/></status>
		<abort public="1" set="method"><f a=""><x path="Void"/></f></abort>
		<swapCache public="1" set="method"><f a=""><x path="Void"/></f></swapCache>
		<update public="1" set="method"><f a=""><x path="Void"/></f></update>
		<meta><m n=":native"><e>"DOMApplicationCache"</e></m></meta>
	</class>
	<class path="js.html.DOMCoreException" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMCoreException.hx" extern="1">
		<ABORT_ERR public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ABORT_ERR>
		<DATA_CLONE_ERR public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></DATA_CLONE_ERR>
		<DOMSTRING_SIZE_ERR public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></DOMSTRING_SIZE_ERR>
		<HIERARCHY_REQUEST_ERR public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></HIERARCHY_REQUEST_ERR>
		<INDEX_SIZE_ERR public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></INDEX_SIZE_ERR>
		<INUSE_ATTRIBUTE_ERR public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></INUSE_ATTRIBUTE_ERR>
		<INVALID_ACCESS_ERR public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></INVALID_ACCESS_ERR>
		<INVALID_CHARACTER_ERR public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></INVALID_CHARACTER_ERR>
		<INVALID_MODIFICATION_ERR public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></INVALID_MODIFICATION_ERR>
		<INVALID_NODE_TYPE_ERR public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></INVALID_NODE_TYPE_ERR>
		<INVALID_STATE_ERR public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></INVALID_STATE_ERR>
		<NAMESPACE_ERR public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></NAMESPACE_ERR>
		<NETWORK_ERR public="1" get="inline" set="null" line="53" static="1"><x path="Int"/></NETWORK_ERR>
		<NOT_FOUND_ERR public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></NOT_FOUND_ERR>
		<NOT_SUPPORTED_ERR public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></NOT_SUPPORTED_ERR>
		<NO_DATA_ALLOWED_ERR public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></NO_DATA_ALLOWED_ERR>
		<NO_MODIFICATION_ALLOWED_ERR public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></NO_MODIFICATION_ALLOWED_ERR>
		<QUOTA_EXCEEDED_ERR public="1" get="inline" set="null" line="63" static="1"><x path="Int"/></QUOTA_EXCEEDED_ERR>
		<SECURITY_ERR public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></SECURITY_ERR>
		<SYNTAX_ERR public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></SYNTAX_ERR>
		<TIMEOUT_ERR public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></TIMEOUT_ERR>
		<TYPE_MISMATCH_ERR public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></TYPE_MISMATCH_ERR>
		<URL_MISMATCH_ERR public="1" get="inline" set="null" line="73" static="1"><x path="Int"/></URL_MISMATCH_ERR>
		<VALIDATION_ERR public="1" get="inline" set="null" line="75" static="1"><x path="Int"/></VALIDATION_ERR>
		<WRONG_DOCUMENT_ERR public="1" get="inline" set="null" line="77" static="1"><x path="Int"/></WRONG_DOCUMENT_ERR>
		<code public="1" set="null"><x path="Int"/></code>
		<message public="1" set="null"><c path="String"/></message>
		<name public="1" set="null"><c path="String"/></name>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<meta><m n=":native"><e>"DOMException"</e></m></meta>
	</class>
	<class path="js.html.DOMError" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMError.hx" extern="1">
		<name public="1" set="null"><c path="String"/></name>
		<meta><m n=":native"><e>"DOMError"</e></m></meta>
	</class>
	<class path="js.html.DOMFormData" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMFormData.hx" extern="1">
		<append public="1" set="method"><f a="name:value:filename">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></append>
		<new public="1" set="method"><f a="?arg0">
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"FormData"</e></m></meta>
	</class>
	<class path="js.html.DOMImplementation" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMImplementation.hx" extern="1">
		<createCSSStyleSheet public="1" set="method"><f a="title:media">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.CSSStyleSheet"/>
</f></createCSSStyleSheet>
		<createDocument public="1" set="method"><f a="?namespaceURI:?qualifiedName:?doctype">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.DocumentType"/>
	<c path="js.html.Document"/>
</f></createDocument>
		<createDocumentType public="1" set="method"><f a="?qualifiedName:?publicId:?systemId">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.DocumentType"/>
</f></createDocumentType>
		<createHTMLDocument public="1" set="method"><f a="title">
	<c path="String"/>
	<c path="js.html.Document"/>
</f></createHTMLDocument>
		<hasFeature public="1" set="method"><f a="feature:?version">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></hasFeature>
		<haxe_doc><![CDATA[Provides methods which are not dependent on any particular DOM instances. Returned by <code><a title="En/DOM/Document.implementation" class="internal" rel="internal" href="https://developer.mozilla.org/en/DOM/document.implementation">document.implementation</a></code>.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/DOMImplementation">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DOMImplementation"</e></m></meta>
	</class>
	<class path="js.html.DOMMimeType" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMMimeType.hx" extern="1">
		<description public="1" set="null"><c path="String"/></description>
		<enabledPlugin public="1" set="null"><c path="js.html.DOMPlugin"/></enabledPlugin>
		<suffixes public="1" set="null"><c path="String"/></suffixes>
		<type public="1" set="null"><c path="String"/></type>
		<meta><m n=":native"><e>"MimeType"</e></m></meta>
	</class>
	<class path="js.html.DOMMimeTypeArray" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMMimeTypeArray.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DOMMimeType"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.DOMMimeType"/>
</f></namedItem>
		<meta><m n=":native"><e>"MimeTypeArray"</e></m></meta>
	</class>
	<class path="js.html.DOMPlugin" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMPlugin.hx" extern="1">
		<description public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A human readable description of the plugin. <strong>Read only.</strong>]]></haxe_doc>
		</description>
		<filename public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The filename of the plugin file. <strong>Read only.</strong>]]></haxe_doc>
		</filename>
		<length public="1" set="null"><x path="Int"/></length>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The name of the plugin. <strong>Read only.</strong>]]></haxe_doc>
		</name>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DOMMimeType"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.DOMMimeType"/>
</f></namedItem>
		<haxe_doc><![CDATA[The <code>Plugin</code> interface provides information about a browser plugin.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Plugin">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Plugin"</e></m></meta>
	</class>
	<class path="js.html.DOMPluginArray" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMPluginArray.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DOMPlugin"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.DOMPlugin"/>
</f></namedItem>
		<refresh public="1" set="method"><f a="reload">
	<x path="Bool"/>
	<x path="Void"/>
</f></refresh>
		<meta><m n=":native"><e>"PluginArray"</e></m></meta>
	</class>
	<class path="js.html.DOMSelection" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMSelection.hx" extern="1">
		<anchorNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the node in which the selection begins.</haxe_doc>
		</anchorNode>
		<anchorOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of characters that the selection's anchor is offset within the anchorNode.</haxe_doc>
		</anchorOffset>
		<baseNode public="1" set="null"><c path="js.html.Node"/></baseNode>
		<baseOffset public="1" set="null"><x path="Int"/></baseOffset>
		<extentNode public="1" set="null"><c path="js.html.Node"/></extentNode>
		<extentOffset public="1" set="null"><x path="Int"/></extentOffset>
		<focusNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the node in which the selection ends.</haxe_doc>
		</focusNode>
		<focusOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of characters that the selection's focus is offset within the focusNode.</haxe_doc>
		</focusOffset>
		<isCollapsed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a Boolean indicating whether the selection's start and end points are at the same position.</haxe_doc>
		</isCollapsed>
		<rangeCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of ranges in the selection.</haxe_doc>
		</rangeCount>
		<type public="1" set="null"><c path="String"/></type>
		<addRange public="1" set="method"><f a="range">
	<c path="js.html.Range"/>
	<x path="Void"/>
</f></addRange>
		<collapse public="1" set="method"><f a="node:index">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></collapse>
		<collapseToEnd public="1" set="method"><f a=""><x path="Void"/></f></collapseToEnd>
		<collapseToStart public="1" set="method"><f a=""><x path="Void"/></f></collapseToStart>
		<containsNode public="1" set="method"><f a="node:allowPartial">
	<c path="js.html.Node"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></containsNode>
		<deleteFromDocument public="1" set="method"><f a=""><x path="Void"/></f></deleteFromDocument>
		<empty public="1" set="method"><f a=""><x path="Void"/></f></empty>
		<extend public="1" set="method"><f a="node:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></extend>
		<getRangeAt public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Range"/>
</f></getRangeAt>
		<modify public="1" set="method"><f a="alter:direction:granularity">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></modify>
		<removeAllRanges public="1" set="method"><f a=""><x path="Void"/></f></removeAllRanges>
		<selectAllChildren public="1" set="method"><f a="node">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></selectAllChildren>
		<setBaseAndExtent public="1" set="method"><f a="baseNode:baseOffset:extentNode:extentOffset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setBaseAndExtent>
		<setPosition public="1" set="method"><f a="node:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setPosition>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<haxe_doc><![CDATA[<p>Selection is the class of the object returned by <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.getSelection">window.getSelection()</a></code>
 and other methods. It represents the text selection in the greater page, possibly spanning multiple elements, when the user drags over static text and other parts of the page. For information about text selection in an individual text editing element, see <code><a rel="custom" href="/api/js/html/InputElement">Input</a></code>
, <code><a rel="custom" href="/api/js/html/TextAreaElement">TextArea</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/document.activeElement">document.activeElement</a></code>
 which typically return the parent object returned from <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.getSelection">window.getSelection()</a></code>
.</p>
<p>A selection object represents the <code><a rel="custom" href="/api/js/html/Range">ranges</a></code>
 that the user has selected. Typically, it holds only one range, accessed as follows:</p>

          <pre name="code" class="js">var selObj = window.getSelection();
var range  = selObj.getRangeAt(0);</pre>
        
<ul> <li><code>selObj</code> is a Selection object</li> <li><code>range</code> is a <a title="en/DOM/Range" rel="internal" href="/api/js/html/Range">Range</a> object</li>
</ul>
<p>Calling the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Selection/toString">Selection/toString()</a></code>
 method returns the text contained in the selection, e.g</p>

          <pre name="code" class="js">var selObj = window.getSelection();
window.alert(selObj);</pre>
        
<p>Note that using a selection object as the argument to <code>window.alert</code> will call the object's <code>toString</code> method.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Selection">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Selection"</e></m></meta>
	</class>
	<class path="js.html.DOMTokenList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMTokenList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<add public="1" set="method"><f a="tokens">
	<c path="String"/>
	<x path="Void"/>
</f></add>
		<contains public="1" set="method"><f a="token">
	<c path="String"/>
	<x path="Bool"/>
</f></contains>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<remove public="1" set="method"><f a="tokens">
	<c path="String"/>
	<x path="Void"/>
</f></remove>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<toggle public="1" set="method"><f a="token:?force">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></toggle>
		<haxe_doc><![CDATA[This type represents a set of space-separated tokens. Commonly returned by <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/element.classList">HTMLElement.classList</a></code>
, HTMLLinkElement.relList, HTMLAnchorElement.relList or HTMLAreaElement.relList. It is indexed beginning with 0 as with JavaScript arrays. DOMTokenList is always case-sensitive.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/DOMTokenList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DOMTokenList"</e></m></meta>
	</class>
	<class path="js.html.DOMSettableTokenList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMSettableTokenList.hx" extern="1">
		<extends path="js.html.DOMTokenList"/>
		<value public="1"><c path="String"/></value>
		<meta><m n=":native"><e>"DOMSettableTokenList"</e></m></meta>
	</class>
	<class path="js.html.DOMStringList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMStringList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<contains public="1" set="method"><f a="string">
	<c path="String"/>
	<x path="Bool"/>
</f></contains>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<meta><m n=":native"><e>"DOMStringList"</e></m></meta>
	</class>
	<class path="js.html.DOMWindow" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DOMWindow.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<PERSISTENT public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></PERSISTENT>
		<TEMPORARY public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></TEMPORARY>
		<applicationCache public="1" set="null">
			<c path="js.html.DOMApplicationCache"/>
			<haxe_doc><![CDATA[An <code><a rel="custom" href="https://developer.mozilla.org/en/nsIDOMOfflineResourceList">nsIDOMOfflineResourceList</a></code>
 object providing access to the offline resources for the window.]]></haxe_doc>
		</applicationCache>
		<clientInformation public="1" set="null"><c path="js.html.Navigator"/></clientInformation>
		<closed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<dd>This property indicates whether the current window is closed or not.</dd> <dt><a title="en/Components_object" rel="internal" href="https://developer.mozilla.org/en/Components_object">window.Components</a></dt> <dd>The entry point to many <a title="en/XPCOM" rel="internal" href="https://developer.mozilla.org/en/XPCOM">XPCOM</a> features. Some properties, e.g. <a title="en/Components.classes" rel="internal" href="https://developer.mozilla.org/en/Components.classes">classes</a>, are only available to sufficiently privileged code.</dd>]]></haxe_doc>
		</closed>
		<console public="1" set="null"><c path="js.html.Console"/></console>
		<crypto public="1" set="null">
			<c path="js.html.Crypto"/>
			<haxe_doc>Returns the browser crypto object.</haxe_doc>
		</crypto>
		<defaultStatus public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the status bar text for the given window.</haxe_doc>
		</defaultStatus>
		<defaultstatus public="1"><c path="String"/></defaultstatus>
		<devicePixelRatio public="1" set="null"><x path="Float"/></devicePixelRatio>
		<document public="1" set="null">
			<c path="js.html.Document"/>
			<haxe_doc>Returns a reference to the document that the window contains.</haxe_doc>
		</document>
		<event public="1" set="null"><c path="js.html.Event"/></event>
		<frameElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the element in which the window is embedded, or null if the window is not embedded.</haxe_doc>
		</frameElement>
		<frames public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns an array of the subframes in the current window.</haxe_doc>
		</frames>
		<history public="1" set="null">
			<c path="js.html.History"/>
			<haxe_doc>Returns a reference to the history object.</haxe_doc>
		</history>
		<indexedDB public="1" set="null"><c path="js.html.idb.Factory"/></indexedDB>
		<innerHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the height of the content area of the browser window including, if rendered, the horizontal scrollbar.</haxe_doc>
		</innerHeight>
		<innerWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the width of the content area of the browser window including, if rendered, the vertical scrollbar.</haxe_doc>
		</innerWidth>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Returns the number of frames in the window. See also <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.frames">window.frames</a></code>
.]]></haxe_doc>
		</length>
		<localStorage public="1" set="null">
			<c path="js.html.Storage"/>
			<haxe_doc>Returns a reference to the local storage object used to store data that may only be accessed by the origin that created it. Getter throws DOMException.</haxe_doc>
		</localStorage>
		<location public="1">
			<c path="js.html.Location"/>
			<haxe_doc>Gets/sets the location, or current URL, of the window object.</haxe_doc>
		</location>
		<locationbar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the locationbar object, whose visibility can be toggled in the window.</haxe_doc>
		</locationbar>
		<menubar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the menubar object, whose visibility can be toggled in the window.</haxe_doc>
		</menubar>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the name of the window.</haxe_doc>
		</name>
		<navigator public="1" set="null">
			<c path="js.html.Navigator"/>
			<haxe_doc>Returns a reference to the navigator object.</haxe_doc>
		</navigator>
		<notifications public="1" set="null"><c path="js.html.NotificationCenter"/></notifications>
		<offscreenBuffering public="1" set="null"><x path="Bool"/></offscreenBuffering>
		<onabort public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for abort events on the window.</haxe_doc>
		</onabort>
		<onanimationend public="1"><t path="js.html.EventListener"/></onanimationend>
		<onanimationiteration public="1"><t path="js.html.EventListener"/></onanimationiteration>
		<onanimationstart public="1"><t path="js.html.EventListener"/></onanimationstart>
		<onbeforeunload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for before-unload events on the window.</haxe_doc>
		</onbeforeunload>
		<onblur public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for blur events on the window.</haxe_doc>
		</onblur>
		<oncanplay public="1"><t path="js.html.EventListener"/></oncanplay>
		<oncanplaythrough public="1"><t path="js.html.EventListener"/></oncanplaythrough>
		<onchange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for change events on the window.</haxe_doc>
		</onchange>
		<onclick public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for click events on the window.</haxe_doc>
		</onclick>
		<oncontextmenu public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for right-click events on the window.</haxe_doc>
		</oncontextmenu>
		<ondblclick public="1"><t path="js.html.EventListener"/></ondblclick>
		<ondevicemotion public="1"><t path="js.html.EventListener"/></ondevicemotion>
		<ondeviceorientation public="1"><t path="js.html.EventListener"/></ondeviceorientation>
		<ondrag public="1"><t path="js.html.EventListener"/></ondrag>
		<ondragend public="1"><t path="js.html.EventListener"/></ondragend>
		<ondragenter public="1"><t path="js.html.EventListener"/></ondragenter>
		<ondragleave public="1"><t path="js.html.EventListener"/></ondragleave>
		<ondragover public="1"><t path="js.html.EventListener"/></ondragover>
		<ondragstart public="1"><t path="js.html.EventListener"/></ondragstart>
		<ondrop public="1"><t path="js.html.EventListener"/></ondrop>
		<ondurationchange public="1"><t path="js.html.EventListener"/></ondurationchange>
		<onemptied public="1"><t path="js.html.EventListener"/></onemptied>
		<onended public="1"><t path="js.html.EventListener"/></onended>
		<onerror public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for errors raised on the window.</haxe_doc>
		</onerror>
		<onfocus public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for focus events on the window.</haxe_doc>
		</onfocus>
		<onhashchange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for hash change events on the window; called when the part of the URL after the hash mark ("#") changes.</haxe_doc>
		</onhashchange>
		<oninput public="1"><t path="js.html.EventListener"/></oninput>
		<oninvalid public="1"><t path="js.html.EventListener"/></oninvalid>
		<onkeydown public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for keydown events on the window.</haxe_doc>
		</onkeydown>
		<onkeypress public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for keypress events on the window.</haxe_doc>
		</onkeypress>
		<onkeyup public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for keyup events on the window.</haxe_doc>
		</onkeyup>
		<onload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for window loading.</haxe_doc>
		</onload>
		<onloadeddata public="1"><t path="js.html.EventListener"/></onloadeddata>
		<onloadedmetadata public="1"><t path="js.html.EventListener"/></onloadedmetadata>
		<onloadstart public="1"><t path="js.html.EventListener"/></onloadstart>
		<onmessage public="1"><t path="js.html.EventListener"/></onmessage>
		<onmousedown public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mousedown events on the window.</haxe_doc>
		</onmousedown>
		<onmousemove public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mousemove events on the window.</haxe_doc>
		</onmousemove>
		<onmouseout public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mouseout events on the window.</haxe_doc>
		</onmouseout>
		<onmouseover public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mouseover events on the window.</haxe_doc>
		</onmouseover>
		<onmouseup public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mouseup events on the window.</haxe_doc>
		</onmouseup>
		<onmousewheel public="1"><t path="js.html.EventListener"/></onmousewheel>
		<onoffline public="1"><t path="js.html.EventListener"/></onoffline>
		<ononline public="1"><t path="js.html.EventListener"/></ononline>
		<onpagehide public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for pagehide events on the window.</haxe_doc>
		</onpagehide>
		<onpageshow public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for pageshow events on the window.</haxe_doc>
		</onpageshow>
		<onpause public="1"><t path="js.html.EventListener"/></onpause>
		<onplay public="1"><t path="js.html.EventListener"/></onplay>
		<onplaying public="1"><t path="js.html.EventListener"/></onplaying>
		<onpopstate public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for popstate events, which are fired when navigating to a session history entry representing a state object.</haxe_doc>
		</onpopstate>
		<onprogress public="1"><t path="js.html.EventListener"/></onprogress>
		<onratechange public="1"><t path="js.html.EventListener"/></onratechange>
		<onreset public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for reset events on the window.</haxe_doc>
		</onreset>
		<onresize public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for window resizing.</haxe_doc>
		</onresize>
		<onscroll public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for window scrolling.</haxe_doc>
		</onscroll>
		<onsearch public="1"><t path="js.html.EventListener"/></onsearch>
		<onseeked public="1"><t path="js.html.EventListener"/></onseeked>
		<onseeking public="1"><t path="js.html.EventListener"/></onseeking>
		<onselect public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for window selection.</haxe_doc>
		</onselect>
		<onstalled public="1"><t path="js.html.EventListener"/></onstalled>
		<onstorage public="1"><t path="js.html.EventListener"/></onstorage>
		<onsubmit public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for submits on window forms.</haxe_doc>
		</onsubmit>
		<onsuspend public="1"><t path="js.html.EventListener"/></onsuspend>
		<ontimeupdate public="1"><t path="js.html.EventListener"/></ontimeupdate>
		<ontouchcancel public="1"><t path="js.html.EventListener"/></ontouchcancel>
		<ontouchend public="1"><t path="js.html.EventListener"/></ontouchend>
		<ontouchmove public="1"><t path="js.html.EventListener"/></ontouchmove>
		<ontouchstart public="1"><t path="js.html.EventListener"/></ontouchstart>
		<ontransitionend public="1"><t path="js.html.EventListener"/></ontransitionend>
		<onunload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for unload events on the window.</haxe_doc>
		</onunload>
		<onvolumechange public="1"><t path="js.html.EventListener"/></onvolumechange>
		<onwaiting public="1"><t path="js.html.EventListener"/></onwaiting>
		<opener public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns a reference to the window that opened this current window.</haxe_doc>
		</opener>
		<outerHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the height of the outside of the browser window.</haxe_doc>
		</outerHeight>
		<outerWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the width of the outside of the browser window.</haxe_doc>
		</outerWidth>
		<pagePopupController public="1" set="null"><c path="js.html.PagePopupController"/></pagePopupController>
		<pageXOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[An alias for <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.scrollX">window.scrollX</a></code>
.]]></haxe_doc>
		</pageXOffset>
		<pageYOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[An alias for <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.scrollY">window.scrollY</a></code>]]></haxe_doc>
		</pageYOffset>
		<parent public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns a reference to the parent of the current window or subframe.</haxe_doc>
		</parent>
		<performance public="1" set="null"><c path="js.html.Performance"/></performance>
		<personalbar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the personalbar object, whose visibility can be toggled in the window.</haxe_doc>
		</personalbar>
		<screen public="1" set="null">
			<c path="js.html.Screen"/>
			<haxe_doc>Returns a reference to the screen object associated with the window.</haxe_doc>
		</screen>
		<screenLeft public="1" set="null"><x path="Int"/></screenLeft>
		<screenTop public="1" set="null"><x path="Int"/></screenTop>
		<screenX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the horizontal distance of the left border of the user's browser from the left side of the screen.</haxe_doc>
		</screenX>
		<screenY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the vertical distance of the top border of the user's browser from the top side of the screen.</haxe_doc>
		</screenY>
		<scrollX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of pixels that the document has already been scrolled horizontally.</haxe_doc>
		</scrollX>
		<scrollY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of pixels that the document has already been scrolled vertically.</haxe_doc>
		</scrollY>
		<scrollbars public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the scrollbars object, whose visibility can be toggled in the window.</haxe_doc>
		</scrollbars>
		<self public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns an object reference to the window object itself.</haxe_doc>
		</self>
		<sessionStorage public="1" set="null">
			<c path="js.html.Storage"/>
			<haxe_doc>A storage object for storing data within a single page session. Getter throws DOMException.</haxe_doc>
		</sessionStorage>
		<status public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the text in the statusbar at the bottom of the browser.</haxe_doc>
		</status>
		<statusbar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the statusbar object, whose visibility can be toggled in the window.</haxe_doc>
		</statusbar>
		<storageInfo public="1" set="null"><c path="js.html.StorageInfo"/></storageInfo>
		<styleMedia public="1" set="null"><c path="js.html.StyleMedia"/></styleMedia>
		<toolbar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the toolbar object, whose visibility can be toggled in the window.</haxe_doc>
		</toolbar>
		<top public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc><![CDATA[<dd>Returns a reference to the topmost window in the window hierarchy. This property is read only.</dd> <dt><code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.URL">window.URL</a></code>
 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>
</dt> <dd>A DOM&nbsp;URL&nbsp;object, which provides the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.URL.createObjectURL">window.URL.createObjectURL()</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.URL.revokeObjectURL">window.URL.revokeObjectURL()</a></code>
 methods.</dd>]]></haxe_doc>
		</top>
		<window public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc><![CDATA[<dd>Returns a reference to the current window.</dd> <dt>window[0], window[1], etc.</dt> <dd>Returns a reference to the <code>window</code> object in the frames. See <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.frames">window.frames</a></code>
 for more details.</dd>]]></haxe_doc>
		</window>
		<alert public="1" set="method"><f a="message">
	<c path="String"/>
	<x path="Void"/>
</f></alert>
		<atob public="1" set="method"><f a="?string">
	<c path="String"/>
	<c path="String"/>
</f></atob>
		<blur public="1" set="method"><f a=""><x path="Void"/></f></blur>
		<btoa public="1" set="method"><f a="?string">
	<c path="String"/>
	<c path="String"/>
</f></btoa>
		<cancelAnimationFrame public="1" set="method">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads><cancelAnimationFrame public="1" set="method"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></cancelAnimationFrame></overloads>
		</cancelAnimationFrame>
		<cancelRequestAnimationFrame public="1" set="method"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></cancelRequestAnimationFrame>
		<captureEvents public="1" set="method"><f a=""><x path="Void"/></f></captureEvents>
		<clearInterval public="1" set="method"><f a="handle">
	<x path="Int"/>
	<x path="Void"/>
</f></clearInterval>
		<clearTimeout public="1" set="method"><f a="handle">
	<x path="Int"/>
	<x path="Void"/>
</f></clearTimeout>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<confirm public="1" set="method"><f a="message">
	<c path="String"/>
	<x path="Bool"/>
</f></confirm>
		<convertPointFromNodeToPage public="1" set="method"><f a="node:p">
	<c path="js.html.Node"/>
	<c path="js.html.Point"/>
	<c path="js.html.Point"/>
</f></convertPointFromNodeToPage>
		<convertPointFromPageToNode public="1" set="method"><f a="node:p">
	<c path="js.html.Node"/>
	<c path="js.html.Point"/>
	<c path="js.html.Point"/>
</f></convertPointFromPageToNode>
		<find public="1" set="method"><f a="string:caseSensitive:backwards:wrap:wholeWord:searchInFrames:showDialog">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></find>
		<focus public="1" set="method"><f a=""><x path="Void"/></f></focus>
		<getComputedStyle public="1" set="method"><f a="element:?pseudoElement">
	<c path="js.html.Element"/>
	<c path="String"/>
	<c path="js.html.CSSStyleDeclaration"/>
</f></getComputedStyle>
		<getMatchedCSSRules public="1" set="method"><f a="element:?pseudoElement">
	<c path="js.html.Element"/>
	<c path="String"/>
	<c path="js.html.CSSRuleList"/>
</f></getMatchedCSSRules>
		<getSelection public="1" set="method"><f a=""><c path="js.html.DOMSelection"/></f></getSelection>
		<matchMedia public="1" set="method"><f a="query">
	<c path="String"/>
	<c path="js.html.MediaQueryList"/>
</f></matchMedia>
		<moveBy public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveBy>
		<moveTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<open public="1" set="method"><f a="url:name:?options">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.DOMWindow"/>
</f></open>
		<openDatabase public="1" set="method"><f a="name:version:displayName:estimatedSize:?creationCallback">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<t path="js.html.sql.DatabaseCallback"/>
	<c path="js.html.sql.Database"/>
</f></openDatabase>
		<postMessage public="1" set="method">
			<f a="message:targetOrigin:messagePorts">
				<d/>
				<c path="String"/>
				<c path="Array"><d/></c>
				<x path="Void"/>
			</f>
			<haxe_doc>Provides a secure means for one window to send a string of data to another window, which need not be within the same domain as the first, in a secure manner. Throws DOMException.</haxe_doc>
			<overloads><postMessage public="1" set="method">
	<f a="message:targetOrigin">
		<d/>
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Provides a secure means for one window to send a string of data to another window, which need not be within the same domain as the first, in a secure manner. Throws DOMException.</haxe_doc>
</postMessage></overloads>
		</postMessage>
		<print public="1" set="method"><f a=""><x path="Void"/></f></print>
		<prompt public="1" set="method"><f a="message:?defaultValue">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></prompt>
		<releaseEvents public="1" set="method"><f a=""><x path="Void"/></f></releaseEvents>
		<requestAnimationFrame public="1" set="method">
			<f a="callback_">
				<t path="js.html.RequestAnimationFrameCallback"/>
				<x path="Int"/>
			</f>
			<overloads><requestAnimationFrame public="1" set="method"><f a="callback_">
	<t path="js.html.RequestAnimationFrameCallback"/>
	<x path="Int"/>
</f></requestAnimationFrame></overloads>
		</requestAnimationFrame>
		<requestFileSystem public="1" set="method"><f a="type:size:successCallback:?errorCallback">
	<x path="Int"/>
	<x path="Int"/>
	<t path="js.html.fs.FileSystemCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></requestFileSystem>
		<resizeBy public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></resizeBy>
		<resizeTo public="1" set="method"><f a="width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></resizeTo>
		<resolveLocalFileSystemURL public="1" set="method"><f a="url:successCallback:?errorCallback">
	<c path="String"/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></resolveLocalFileSystemURL>
		<scroll public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scroll>
		<scrollBy public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scrollBy>
		<scrollTo public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scrollTo>
		<setInterval public="1" set="method"><f a="handler:timeout">
	<f a=""><x path="Void"/></f>
	<x path="Int"/>
	<x path="Int"/>
</f></setInterval>
		<setTimeout public="1" set="method"><f a="handler:timeout">
	<f a=""><x path="Void"/></f>
	<x path="Int"/>
	<x path="Int"/>
</f></setTimeout>
		<showModalDialog public="1" set="method"><f a="url:?dialogArgs:?featureArgs">
	<c path="String"/>
	<d/>
	<c path="String"/>
	<d/>
</f></showModalDialog>
		<stop public="1" set="method"><f a=""><x path="Void"/></f></stop>
		<haxe_doc><![CDATA[<p>This section provides a brief reference for all of the methods, properties, and events available through the DOM <code>window</code> object. The <code>window</code> object implements the <code>Window</code> interface, which in turn inherits from the <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-AbstractView" title="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-AbstractView" target="_blank">AbstractView</a></code> interface. Some additional global functions, namespaces objects, and constructors, not typically associated with the window, but available on it, are listed in the <a title="https://developer.mozilla.org/en/JavaScript/Reference" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference">JavaScript Reference</a>.</p>
<p>The <code>window</code> object represents the window itself. The <code>document</code> property of a <code>window</code> points to the <a title="en/DOM/document" rel="internal" href="/api/js/html/Document">DOM document</a> loaded in that window. A window for a given document can be obtained using the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/document.defaultView">document.defaultView</a></code>
 property.</p>
<p>In a tabbed browser, such as Firefox, each tab contains its own <code>window</code> object (and if you're writing an extension, the browser window itself is a separate window too - see <a title="en/Working_with_windows_in_chrome_code#Content_windows" rel="internal" href="https://developer.mozilla.org/en/Working_with_windows_in_chrome_code#Content_windows">Working with windows in chrome code</a> for more information). That is, the <code>window</code> object is not shared between tabs in the same window. Some methods, namely <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.resizeTo">window.resizeTo</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.resizeBy">window.resizeBy</a></code>
 apply to the whole window and not to the specific tab the <code>window</code> object belongs to. Generally, anything that can't reasonably pertain to a tab pertains to the window instead.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Window"</e></m></meta>
	</class>
	<class path="js.html.DataListElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DataListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<options public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>A collection of the contained option elements.</haxe_doc>
		</options>
		<haxe_doc><![CDATA[DOM Datalist objects expose the <a class=" external" title="http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-datalist-element" rel="external" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-datalist-element" target="_blank">HTMLDataListElement</a> interface, which provides special properties (beyond the <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) to manipulate <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/datalist">&lt;datalist&gt;</a></code>
 elements and their content.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLDataListElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDataListElement"</e></m></meta>
	</class>
	<class path="js.html.DataTransferItem" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DataTransferItem.hx" extern="1">
		<kind public="1" set="null"><c path="String"/></kind>
		<type public="1" set="null"><c path="String"/></type>
		<getAsEntry public="1" set="method"><f a=""><c path="js.html.fs.Entry"/></f></getAsEntry>
		<getAsFile public="1" set="method"><f a=""><c path="js.html.Blob"/></f></getAsFile>
		<getAsString public="1" set="method"><f a="callback_">
	<t path="js.html.StringCallback"/>
	<x path="Void"/>
</f></getAsString>
		<meta><m n=":native"><e>"DataTransferItem"</e></m></meta>
	</class>
	<class path="js.html.DataTransferItemList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DataTransferItemList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<add public="1" set="method">
			<f a="data:type">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<overloads><add public="1" set="method"><f a="file">
	<c path="js.html.File"/>
	<x path="Void"/>
</f></add></overloads>
		</add>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DataTransferItem"/>
</f></item>
		<meta><m n=":native"><e>"DataTransferItemList"</e></m></meta>
	</class>
	<class path="js.html.DetailsElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DetailsElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<open public="1">
			<x path="Bool"/>
			<haxe_doc>This Boolean attribute indicates whether the details will be shown to the user on page load. If omitted the details will be hidden.</haxe_doc>
		</open>
		<haxe_doc><![CDATA[The HTML <em>details</em> element (<code>&lt;details&gt;</code>) is used as a disclosure widget from which the user the retrieve additional information.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/details">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDetailsElement"</e></m></meta>
	</class>
	<class path="js.html.DirectoryElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DirectoryElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn't work in all browsers. <div class="note"><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/dir">&lt;dir&gt;</a></code>
 element should be styled using <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a>. To give a similar effect than the <span>compact</span> attribute, the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property <a title="en/CSS/line-height" rel="internal" href="https://developer.mozilla.org/en/CSS/line-height">line-height</a> can be used with a value of <span>80%</span>.</div>]]></haxe_doc>
		</compact>
		<haxe_doc><![CDATA[Obsolete<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/dir">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDirectoryElement"</e></m></meta>
	</class>
	<class path="js.html.DivElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DivElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Enumerated attribute indicating alignment of the element's contents with respect to the surrounding context.</haxe_doc>
		</align>
		<haxe_doc><![CDATA[DOM&nbsp;div (document division) objects expose the <a title="http://www.w3.org/TR/html5/grouping-content.html#htmldivelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/grouping-content.html#htmldivelement" target="_blank">HTMLDivElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-22445964" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-22445964" target="_blank"><code>HTMLDivElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating div elements. In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLDivElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDivElement"</e></m></meta>
	</class>
	<class path="js.html.Document" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Document.hx" extern="1">
		<extends path="js.html.Node"/>
		<URL public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a string containing the URL of the current document.</haxe_doc>
		</URL>
		<activeElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the currently focused element</haxe_doc>
		</activeElement>
		<alinkColor public="1">
			<c path="String"/>
			<haxe_doc>Returns or sets the color of active links in the document body.</haxe_doc>
		</alinkColor>
		<all public="1"><c path="js.html.HTMLAllCollection"/></all>
		<anchors public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of all of the anchors in the document.</haxe_doc>
		</anchors>
		<applets public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns an ordered list of the applets within a document.</haxe_doc>
		</applets>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the background color of the current document.</haxe_doc>
		</bgColor>
		<body public="1">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the BODY node of the current document. Setter throws DOMException.</haxe_doc>
		</body>
		<characterSet public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the character set being used by the document.</haxe_doc>
		</characterSet>
		<charset public="1"><c path="String"/></charset>
		<compatMode public="1" set="null">
			<c path="String"/>
			<haxe_doc>Indicates whether the document is rendered in Quirks or Strict mode.</haxe_doc>
		</compatMode>
		<cookie public="1">
			<c path="String"/>
			<haxe_doc>Returns a semicolon-separated list of the cookies for that document or sets a single cookie. Getter throws DOMException. Setter throws DOMException.</haxe_doc>
		</cookie>
		<currentFullScreenElement public="1" set="null"><c path="js.html.Element"/></currentFullScreenElement>
		<defaultCharset public="1" set="null"><c path="String"/></defaultCharset>
		<defaultView public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns a reference to the window object.</haxe_doc>
		</defaultView>
		<designMode public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Gets/sets WYSYWIG editing capability of <a title="en/Midas" rel="internal" href="https://developer.mozilla.org/en/Midas">Midas</a>. It can only be used for HTML documents.]]></haxe_doc>
		</designMode>
		<dir public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets directionality (rtl/ltr) of the document</haxe_doc>
		</dir>
		<doctype public="1" set="null">
			<c path="js.html.DocumentType"/>
			<haxe_doc>Returns the Document Type Definition (DTD) of the current document.</haxe_doc>
		</doctype>
		<documentElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the Element that is a direct child of document. For HTML documents, this is normally the HTML element.</haxe_doc>
		</documentElement>
		<documentURI public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the document location.</haxe_doc>
		</documentURI>
		<domain public="1">
			<c path="String"/>
			<haxe_doc>Returns the domain of the current document. Setter throws DOMException.</haxe_doc>
		</domain>
		<embeds public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of the embedded OBJECTS within the current document.</haxe_doc>
		</embeds>
		<fgColor public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the foreground color, or text color, of the current document.</haxe_doc>
		</fgColor>
		<forms public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of the FORM elements within the current document.</haxe_doc>
		</forms>
		<fullScreenKeyboardInputAllowed public="1" set="null"><x path="Bool"/></fullScreenKeyboardInputAllowed>
		<fullscreenElement public="1" set="null"><c path="js.html.Element"/></fullscreenElement>
		<fullscreenEnabled public="1" set="null"><x path="Bool"/></fullscreenEnabled>
		<head public="1" set="null">
			<c path="js.html.HeadElement"/>
			<haxe_doc>Returns the HEAD node of the current document.</haxe_doc>
		</head>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets/sets the height of the current document.</haxe_doc>
		</height>
		<hidden public="1" set="null"><x path="Bool"/></hidden>
		<images public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of the images in the current document.</haxe_doc>
		</images>
		<implementation public="1" set="null">
			<c path="js.html.DOMImplementation"/>
			<haxe_doc>Returns the DOM implementation associated with the current document.</haxe_doc>
		</implementation>
		<inputEncoding public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the encoding used when the document was parsed.</haxe_doc>
		</inputEncoding>
		<isFullScreen public="1" set="null"><x path="Bool"/></isFullScreen>
		<lastModified public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the date on which the document was last modified.</haxe_doc>
		</lastModified>
		<linkColor public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the color of hyperlinks in the document.</haxe_doc>
		</linkColor>
		<links public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of all the hyperlinks in the document.</haxe_doc>
		</links>
		<location public="1">
			<c path="js.html.Location"/>
			<haxe_doc>Returns the URI of the current document.</haxe_doc>
		</location>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onbeforecopy public="1"><t path="js.html.EventListener"/></onbeforecopy>
		<onbeforecut public="1"><t path="js.html.EventListener"/></onbeforecut>
		<onbeforepaste public="1"><t path="js.html.EventListener"/></onbeforepaste>
		<onblur public="1"><t path="js.html.EventListener"/></onblur>
		<onchange public="1"><t path="js.html.EventListener"/></onchange>
		<onclick public="1"><t path="js.html.EventListener"/></onclick>
		<oncontextmenu public="1"><t path="js.html.EventListener"/></oncontextmenu>
		<oncopy public="1"><t path="js.html.EventListener"/></oncopy>
		<oncut public="1"><t path="js.html.EventListener"/></oncut>
		<ondblclick public="1"><t path="js.html.EventListener"/></ondblclick>
		<ondrag public="1"><t path="js.html.EventListener"/></ondrag>
		<ondragend public="1"><t path="js.html.EventListener"/></ondragend>
		<ondragenter public="1"><t path="js.html.EventListener"/></ondragenter>
		<ondragleave public="1"><t path="js.html.EventListener"/></ondragleave>
		<ondragover public="1"><t path="js.html.EventListener"/></ondragover>
		<ondragstart public="1"><t path="js.html.EventListener"/></ondragstart>
		<ondrop public="1"><t path="js.html.EventListener"/></ondrop>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onfocus public="1"><t path="js.html.EventListener"/></onfocus>
		<onfullscreenchange public="1"><t path="js.html.EventListener"/></onfullscreenchange>
		<onfullscreenerror public="1"><t path="js.html.EventListener"/></onfullscreenerror>
		<oninput public="1"><t path="js.html.EventListener"/></oninput>
		<oninvalid public="1"><t path="js.html.EventListener"/></oninvalid>
		<onkeydown public="1"><t path="js.html.EventListener"/></onkeydown>
		<onkeypress public="1"><t path="js.html.EventListener"/></onkeypress>
		<onkeyup public="1"><t path="js.html.EventListener"/></onkeyup>
		<onload public="1"><t path="js.html.EventListener"/></onload>
		<onmousedown public="1"><t path="js.html.EventListener"/></onmousedown>
		<onmousemove public="1"><t path="js.html.EventListener"/></onmousemove>
		<onmouseout public="1"><t path="js.html.EventListener"/></onmouseout>
		<onmouseover public="1"><t path="js.html.EventListener"/></onmouseover>
		<onmouseup public="1"><t path="js.html.EventListener"/></onmouseup>
		<onmousewheel public="1"><t path="js.html.EventListener"/></onmousewheel>
		<onpaste public="1"><t path="js.html.EventListener"/></onpaste>
		<onpointerlockchange public="1"><t path="js.html.EventListener"/></onpointerlockchange>
		<onpointerlockerror public="1"><t path="js.html.EventListener"/></onpointerlockerror>
		<onreadystatechange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[<dl><dd>Returns the event handling code for the <code>readystatechange</code> event.</dd>
</dl>
<div class="geckoVersionNote"> <p>
</p><div class="geckoVersionHeading">Gecko 9.0 note<div>(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
</div></div>
<p></p> <p>Starting in Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
, you can now use the syntax <code>if ("onabort" in document)</code> to determine whether or not a given event handler property exists. This is because event handler interfaces have been updated to be proper web IDL interfaces. See <a title="en/DOM/DOM event handlers" rel="internal" href="https://developer.mozilla.org/en/DOM/DOM_event_handlers">DOM event handlers</a> for details.</p>
</div>]]></haxe_doc>
		</onreadystatechange>
		<onreset public="1"><t path="js.html.EventListener"/></onreset>
		<onscroll public="1"><t path="js.html.EventListener"/></onscroll>
		<onsearch public="1"><t path="js.html.EventListener"/></onsearch>
		<onselect public="1"><t path="js.html.EventListener"/></onselect>
		<onselectionchange public="1"><t path="js.html.EventListener"/></onselectionchange>
		<onselectstart public="1"><t path="js.html.EventListener"/></onselectstart>
		<onsubmit public="1"><t path="js.html.EventListener"/></onsubmit>
		<ontouchcancel public="1"><t path="js.html.EventListener"/></ontouchcancel>
		<ontouchend public="1"><t path="js.html.EventListener"/></ontouchend>
		<ontouchmove public="1"><t path="js.html.EventListener"/></ontouchmove>
		<ontouchstart public="1"><t path="js.html.EventListener"/></ontouchstart>
		<plugins public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of the available plugins.</haxe_doc>
		</plugins>
		<pointerLockElement public="1" set="null"><c path="js.html.Element"/></pointerLockElement>
		<preferredStylesheetSet public="1" set="null"><c path="String"/></preferredStylesheetSet>
		<readyState public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns loading status of the document</haxe_doc>
		</readyState>
		<referrer public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the URI of the page that linked to this page.</haxe_doc>
		</referrer>
		<scripts public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[Returns all the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/script">&lt;script&gt;</a></code>
 elements on the document.]]></haxe_doc>
		</scripts>
		<selectedStylesheetSet public="1"><c path="String"/></selectedStylesheetSet>
		<styleSheets public="1" set="null">
			<c path="js.html.StyleSheetList"/>
			<haxe_doc>Returns a list of the stylesheet objects on the current document.</haxe_doc>
		</styleSheets>
		<title public="1">
			<c path="String"/>
			<haxe_doc>Returns the title of the current document.</haxe_doc>
		</title>
		<visibilityState public="1" set="null"><c path="String"/></visibilityState>
		<vlinkColor public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the color of visited hyperlinks.</haxe_doc>
		</vlinkColor>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the width of the current document.</haxe_doc>
		</width>
		<xmlEncoding public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Returns the encoding as determined by the XML declaration.<br> <div class="note">Firefox 10 and later don't implement it anymore.</div>]]></haxe_doc>
		</xmlEncoding>
		<xmlStandalone public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Returns <code>true</code> if the XML declaration specifies the document is standalone (<em>e.g.,</em> An external part of the DTD affects the document's content), else <code>false</code>. Setter throws DOMException.]]></haxe_doc>
		</xmlStandalone>
		<xmlVersion public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Returns the version number as specified in the XML declaration or <code>"1.0"</code> if the declaration is absent. Setter throws DOMException.]]></haxe_doc>
		</xmlVersion>
		<adoptNode public="1" set="method"><f a="source">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></adoptNode>
		<cancelFullScreen public="1" set="method"><f a=""><x path="Void"/></f></cancelFullScreen>
		<captureEvents public="1" set="method"><f a=""><x path="Void"/></f></captureEvents>
		<caretRangeFromPoint public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Range"/>
</f></caretRangeFromPoint>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<createAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></createAttribute>
		<createAttributeNS public="1" set="method"><f a="?namespaceURI:?qualifiedName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></createAttributeNS>
		<createCDATASection public="1" set="method"><f a="data">
	<c path="String"/>
	<c path="js.html.CDATASection"/>
</f></createCDATASection>
		<createComment public="1" set="method"><f a="data">
	<c path="String"/>
	<c path="js.html.Comment"/>
</f></createComment>
		<createDocumentFragment public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></createDocumentFragment>
		<createElement public="1" set="method"><f a="?tagName">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></createElement>
		<createElementNS public="1" set="method"><f a="?namespaceURI:?qualifiedName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Element"/>
</f></createElementNS>
		<createEntityReference public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.EntityReference"/>
</f></createEntityReference>
		<createEvent public="1" set="method"><f a="eventType">
	<c path="String"/>
	<c path="js.html.Event"/>
</f></createEvent>
		<createExpression public="1" set="method"><f a="expression:resolver">
	<c path="String"/>
	<c path="js.html.XPathNSResolver"/>
	<c path="js.html.XPathExpression"/>
</f></createExpression>
		<createNSResolver public="1" set="method"><f a="nodeResolver">
	<c path="js.html.Node"/>
	<c path="js.html.XPathNSResolver"/>
</f></createNSResolver>
		<createNodeIterator public="1" set="method"><f a="root:whatToShow:filter:expandEntityReferences">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<c path="js.html.NodeFilter"/>
	<x path="Bool"/>
	<c path="js.html.NodeIterator"/>
</f></createNodeIterator>
		<createProcessingInstruction public="1" set="method"><f a="target:data">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.ProcessingInstruction"/>
</f></createProcessingInstruction>
		<createRange public="1" set="method"><f a=""><c path="js.html.Range"/></f></createRange>
		<createTextNode public="1" set="method"><f a="data">
	<c path="String"/>
	<c path="js.html.Text"/>
</f></createTextNode>
		<createTouch public="1" set="method"><f a="window:target:identifier:pageX:pageY:screenX:screenY:radiusX:radiusY:rotationAngle:force">
	<c path="js.html.DOMWindow"/>
	<c path="js.html.EventTarget"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.Touch"/>
</f></createTouch>
		<createTouchList public="1" set="method"><f a=""><c path="js.html.TouchList"/></f></createTouchList>
		<createTreeWalker public="1" set="method"><f a="root:whatToShow:filter:expandEntityReferences">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<c path="js.html.NodeFilter"/>
	<x path="Bool"/>
	<c path="js.html.TreeWalker"/>
</f></createTreeWalker>
		<elementFromPoint public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Element"/>
</f></elementFromPoint>
		<evaluate public="1" set="method"><f a="expression:contextNode:resolver:type:inResult">
	<c path="String"/>
	<c path="js.html.Node"/>
	<c path="js.html.XPathNSResolver"/>
	<x path="Int"/>
	<c path="js.html.XPathResult"/>
	<c path="js.html.XPathResult"/>
</f></evaluate>
		<execCommand public="1" set="method"><f a="command:userInterface:?value">
	<c path="String"/>
	<x path="Bool"/>
	<c path="String"/>
	<x path="Bool"/>
</f></execCommand>
		<exitFullscreen public="1" set="method"><f a=""><x path="Void"/></f></exitFullscreen>
		<exitPointerLock public="1" set="method"><f a=""><x path="Void"/></f></exitPointerLock>
		<getCSSCanvasContext public="1" set="method"><f a="contextId:name:width:height">
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.CanvasRenderingContext"/>
</f></getCSSCanvasContext>
		<getElementById public="1" set="method"><f a="elementId">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></getElementById>
		<getElementsByClassName public="1" set="method"><f a="tagname">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByClassName>
		<getElementsByName public="1" set="method"><f a="elementName">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByName>
		<getElementsByTagName public="1" set="method"><f a="tagname">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByTagName>
		<getElementsByTagNameNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByTagNameNS>
		<getOverrideStyle public="1" set="method"><f a="element:pseudoElement">
	<c path="js.html.Element"/>
	<c path="String"/>
	<c path="js.html.CSSStyleDeclaration"/>
</f></getOverrideStyle>
		<getSelection public="1" set="method"><f a=""><c path="js.html.DOMSelection"/></f></getSelection>
		<hasFocus public="1" set="method"><f a=""><x path="Bool"/></f></hasFocus>
		<importNode public="1" set="method"><f a="importedNode:?deep">
	<c path="js.html.Node"/>
	<x path="Bool"/>
	<c path="js.html.Node"/>
</f></importNode>
		<open public="1" set="method"><f a=""><x path="Void"/></f></open>
		<queryCommandEnabled public="1" set="method"><f a="command">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandEnabled>
		<queryCommandIndeterm public="1" set="method"><f a="command">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandIndeterm>
		<queryCommandState public="1" set="method"><f a="command">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandState>
		<queryCommandSupported public="1" set="method"><f a="command">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandSupported>
		<queryCommandValue public="1" set="method"><f a="command">
	<c path="String"/>
	<c path="String"/>
</f></queryCommandValue>
		<querySelector public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></querySelector>
		<querySelectorAll public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></querySelectorAll>
		<releaseEvents public="1" set="method"><f a=""><x path="Void"/></f></releaseEvents>
		<write public="1" set="method"><f a="text">
	<c path="String"/>
	<x path="Void"/>
</f></write>
		<writeln public="1" set="method"><f a="text">
	<c path="String"/>
	<x path="Void"/>
</f></writeln>
		<createTableCellElement public="1" get="inline" set="null" line="398">
			<f a=""><c path="js.html.TableCellElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("td")</code>.]]></haxe_doc>
		</createTableCellElement>
		<createHRElement public="1" get="inline" set="null" line="400">
			<f a=""><c path="js.html.HRElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("hr")</code>.]]></haxe_doc>
		</createHRElement>
		<createMarqueeElement public="1" get="inline" set="null" line="402">
			<f a=""><c path="js.html.MarqueeElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("marquee")</code>.]]></haxe_doc>
		</createMarqueeElement>
		<createBaseFontElement public="1" get="inline" set="null" line="404">
			<f a=""><c path="js.html.BaseFontElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("basefont")</code>.]]></haxe_doc>
		</createBaseFontElement>
		<createSelectElement public="1" get="inline" set="null" line="406">
			<f a=""><c path="js.html.SelectElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("select")</code>.]]></haxe_doc>
		</createSelectElement>
		<createMapElement public="1" get="inline" set="null" line="408">
			<f a=""><c path="js.html.MapElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("map")</code>.]]></haxe_doc>
		</createMapElement>
		<createFormElement public="1" get="inline" set="null" line="410">
			<f a=""><c path="js.html.FormElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("form")</code>.]]></haxe_doc>
		</createFormElement>
		<createOptionElement public="1" get="inline" set="null" line="412">
			<f a=""><c path="js.html.OptionElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("option")</code>.]]></haxe_doc>
		</createOptionElement>
		<createLabelElement public="1" get="inline" set="null" line="414">
			<f a=""><c path="js.html.LabelElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("label")</code>.]]></haxe_doc>
		</createLabelElement>
		<createMetaElement public="1" get="inline" set="null" line="416">
			<f a=""><c path="js.html.MetaElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("meta")</code>.]]></haxe_doc>
		</createMetaElement>
		<createImageElement public="1" get="inline" set="null" line="418">
			<f a=""><c path="js.html.ImageElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("img")</code>.]]></haxe_doc>
		</createImageElement>
		<createDListElement public="1" get="inline" set="null" line="420">
			<f a=""><c path="js.html.DListElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("dl")</code>.]]></haxe_doc>
		</createDListElement>
		<createFrameElement public="1" get="inline" set="null" line="422">
			<f a=""><c path="js.html.FrameElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("frame")</code>.]]></haxe_doc>
		</createFrameElement>
		<createModElement public="1" get="inline" set="null" line="424">
			<f a=""><c path="js.html.ModElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("mod")</code>.]]></haxe_doc>
		</createModElement>
		<createUListElement public="1" get="inline" set="null" line="426">
			<f a=""><c path="js.html.UListElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("ul")</code>.]]></haxe_doc>
		</createUListElement>
		<createOutputElement public="1" get="inline" set="null" line="428">
			<f a=""><c path="js.html.OutputElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("output")</code>.]]></haxe_doc>
		</createOutputElement>
		<createOListElement public="1" get="inline" set="null" line="430">
			<f a=""><c path="js.html.OListElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("ol")</code>.]]></haxe_doc>
		</createOListElement>
		<createShadowElement public="1" get="inline" set="null" line="432">
			<f a=""><c path="js.html.ShadowElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("shadow")</code>.]]></haxe_doc>
		</createShadowElement>
		<createLIElement public="1" get="inline" set="null" line="434">
			<f a=""><c path="js.html.LIElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("li")</code>.]]></haxe_doc>
		</createLIElement>
		<createDataListElement public="1" get="inline" set="null" line="436">
			<f a=""><c path="js.html.DataListElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("datalist")</code>.]]></haxe_doc>
		</createDataListElement>
		<createParamElement public="1" get="inline" set="null" line="438">
			<f a=""><c path="js.html.ParamElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("param")</code>.]]></haxe_doc>
		</createParamElement>
		<createFontElement public="1" get="inline" set="null" line="440">
			<f a=""><c path="js.html.FontElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("font")</code>.]]></haxe_doc>
		</createFontElement>
		<createTrackElement public="1" get="inline" set="null" line="442">
			<f a=""><c path="js.html.TrackElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("track")</code>.]]></haxe_doc>
		</createTrackElement>
		<createAppletElement public="1" get="inline" set="null" line="444">
			<f a=""><c path="js.html.AppletElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("applet")</code>.]]></haxe_doc>
		</createAppletElement>
		<createAreaElement public="1" get="inline" set="null" line="446">
			<f a=""><c path="js.html.AreaElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("area")</code>.]]></haxe_doc>
		</createAreaElement>
		<createLinkElement public="1" get="inline" set="null" line="448">
			<f a=""><c path="js.html.LinkElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("link")</code>.]]></haxe_doc>
		</createLinkElement>
		<createDivElement public="1" get="inline" set="null" line="450">
			<f a=""><c path="js.html.DivElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("div")</code>.]]></haxe_doc>
		</createDivElement>
		<createTitleElement public="1" get="inline" set="null" line="452">
			<f a=""><c path="js.html.TitleElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("title")</code>.]]></haxe_doc>
		</createTitleElement>
		<createStyleElement public="1" get="inline" set="null" line="454">
			<f a=""><c path="js.html.StyleElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("style")</code>.]]></haxe_doc>
		</createStyleElement>
		<createProgressElement public="1" get="inline" set="null" line="456">
			<f a=""><c path="js.html.ProgressElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("progress")</code>.]]></haxe_doc>
		</createProgressElement>
		<createButtonElement public="1" get="inline" set="null" line="458">
			<f a=""><c path="js.html.ButtonElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("button")</code>.]]></haxe_doc>
		</createButtonElement>
		<createFieldSetElement public="1" get="inline" set="null" line="460">
			<f a=""><c path="js.html.FieldSetElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("fieldset")</code>.]]></haxe_doc>
		</createFieldSetElement>
		<createAnchorElement public="1" get="inline" set="null" line="462">
			<f a=""><c path="js.html.AnchorElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("a")</code>.]]></haxe_doc>
		</createAnchorElement>
		<createIFrameElement public="1" get="inline" set="null" line="464">
			<f a=""><c path="js.html.IFrameElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("iframe")</code>.]]></haxe_doc>
		</createIFrameElement>
		<createSpanElement public="1" get="inline" set="null" line="466">
			<f a=""><c path="js.html.SpanElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("span")</code>.]]></haxe_doc>
		</createSpanElement>
		<createDetailsElement public="1" get="inline" set="null" line="468">
			<f a=""><c path="js.html.DetailsElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("details")</code>.]]></haxe_doc>
		</createDetailsElement>
		<createBodyElement public="1" get="inline" set="null" line="470">
			<f a=""><c path="js.html.BodyElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("body")</code>.]]></haxe_doc>
		</createBodyElement>
		<createInputElement public="1" get="inline" set="null" line="472">
			<f a=""><c path="js.html.InputElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("input")</code>.]]></haxe_doc>
		</createInputElement>
		<createEmbedElement public="1" get="inline" set="null" line="474">
			<f a=""><c path="js.html.EmbedElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("embed")</code>.]]></haxe_doc>
		</createEmbedElement>
		<createMeterElement public="1" get="inline" set="null" line="476">
			<f a=""><c path="js.html.MeterElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("meter")</code>.]]></haxe_doc>
		</createMeterElement>
		<createPreElement public="1" get="inline" set="null" line="478">
			<f a=""><c path="js.html.PreElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("pre")</code>.]]></haxe_doc>
		</createPreElement>
		<createTableSectionElement public="1" get="inline" set="null" line="480">
			<f a=""><c path="js.html.TableSectionElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("thead")</code>.]]></haxe_doc>
		</createTableSectionElement>
		<createHeadElement public="1" get="inline" set="null" line="482">
			<f a=""><c path="js.html.HeadElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("head")</code>.]]></haxe_doc>
		</createHeadElement>
		<createBaseElement public="1" get="inline" set="null" line="484">
			<f a=""><c path="js.html.BaseElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("base")</code>.]]></haxe_doc>
		</createBaseElement>
		<createOptGroupElement public="1" get="inline" set="null" line="486">
			<f a=""><c path="js.html.OptGroupElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("optgroup")</code>.]]></haxe_doc>
		</createOptGroupElement>
		<createQuoteElement public="1" get="inline" set="null" line="488">
			<f a=""><c path="js.html.QuoteElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("quote")</code>.]]></haxe_doc>
		</createQuoteElement>
		<createAudioElement public="1" get="inline" set="null" line="490">
			<f a=""><c path="js.html.AudioElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("audio")</code>.]]></haxe_doc>
		</createAudioElement>
		<createVideoElement public="1" get="inline" set="null" line="492">
			<f a=""><c path="js.html.VideoElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("video")</code>.]]></haxe_doc>
		</createVideoElement>
		<createLegendElement public="1" get="inline" set="null" line="494">
			<f a=""><c path="js.html.LegendElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("legend")</code>.]]></haxe_doc>
		</createLegendElement>
		<createMenuElement public="1" get="inline" set="null" line="496">
			<f a=""><c path="js.html.MenuElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("menu")</code>.]]></haxe_doc>
		</createMenuElement>
		<createFrameSetElement public="1" get="inline" set="null" line="498">
			<f a=""><c path="js.html.FrameSetElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("frameset")</code>.]]></haxe_doc>
		</createFrameSetElement>
		<createCanvasElement public="1" get="inline" set="null" line="500">
			<f a=""><c path="js.html.CanvasElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("canvas")</code>.]]></haxe_doc>
		</createCanvasElement>
		<createKeygenElement public="1" get="inline" set="null" line="502">
			<f a=""><c path="js.html.KeygenElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("keygen")</code>.]]></haxe_doc>
		</createKeygenElement>
		<createTableColElement public="1" get="inline" set="null" line="504">
			<f a=""><c path="js.html.TableColElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("col")</code>.]]></haxe_doc>
		</createTableColElement>
		<createDirectoryElement public="1" get="inline" set="null" line="506">
			<f a=""><c path="js.html.DirectoryElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("dir")</code>.]]></haxe_doc>
		</createDirectoryElement>
		<createTableElement public="1" get="inline" set="null" line="508">
			<f a=""><c path="js.html.TableElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("table")</code>.]]></haxe_doc>
		</createTableElement>
		<createTableRowElement public="1" get="inline" set="null" line="510">
			<f a=""><c path="js.html.TableRowElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("tr")</code>.]]></haxe_doc>
		</createTableRowElement>
		<createScriptElement public="1" get="inline" set="null" line="512">
			<f a=""><c path="js.html.ScriptElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("script")</code>.]]></haxe_doc>
		</createScriptElement>
		<createSourceElement public="1" get="inline" set="null" line="514">
			<f a=""><c path="js.html.SourceElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("source")</code>.]]></haxe_doc>
		</createSourceElement>
		<createParagraphElement public="1" get="inline" set="null" line="516">
			<f a=""><c path="js.html.ParagraphElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("p")</code>.]]></haxe_doc>
		</createParagraphElement>
		<createContentElement public="1" get="inline" set="null" line="518">
			<f a=""><c path="js.html.ContentElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("content")</code>.]]></haxe_doc>
		</createContentElement>
		<createBRElement public="1" get="inline" set="null" line="520">
			<f a=""><c path="js.html.BRElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("br")</code>.]]></haxe_doc>
		</createBRElement>
		<createHtmlElement public="1" get="inline" set="null" line="522">
			<f a=""><c path="js.html.HtmlElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("html")</code>.]]></haxe_doc>
		</createHtmlElement>
		<createTextAreaElement public="1" get="inline" set="null" line="524">
			<f a=""><c path="js.html.TextAreaElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("textarea")</code>.]]></haxe_doc>
		</createTextAreaElement>
		<createMediaElement public="1" get="inline" set="null" line="526">
			<f a=""><c path="js.html.MediaElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("media")</code>.]]></haxe_doc>
		</createMediaElement>
		<createObjectElement public="1" get="inline" set="null" line="528">
			<f a=""><c path="js.html.ObjectElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("object")</code>.]]></haxe_doc>
		</createObjectElement>
		<createTableCaptionElement public="1" get="inline" set="null" line="530">
			<f a=""><c path="js.html.TableCaptionElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("caption")</code>.]]></haxe_doc>
		</createTableCaptionElement>
		<haxe_doc><![CDATA[<p>Each web page loaded in the browser has its own <strong>document</strong> object. This object serves as an entry point to the web page's content (the <a title="en/Using_the_W3C_DOM_Level_1_Core" rel="internal" href="https://developer.mozilla.org/en/Using_the_W3C_DOM_Level_1_Core">DOM tree</a>, including elements such as <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body">&lt;body&gt;</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/table">&lt;table&gt;</a></code>
) and provides functionality global to the document (such as obtaining the page's URL and creating new elements in the document).</p>
<p>A document object can be obtained from various APIs:</p>
<ul> <li>Most commonly, you work with the document the script is running in by using <code>document</code> in document's <a title="en/HTML/Element/Script" rel="internal" href="/api/js/html/ScriptElement">scripts</a>. (The same document can also be referred to as <a title="window.document" rel="internal" href="https://developer.mozilla.org/en/DOM/window.document"><code>window.document</code></a>.)</li> <li>The document of an iframe via the iframe's <code><a title="en/DOM/HTMLIFrameElement#Properties" rel="internal" href="https://developer.mozilla.org/en/DOM/HTMLIFrameElement#Properties">contentDocument</a></code> property.</li> <li>The <a title="en/XMLHttpRequest#Attributes" rel="internal" href="https://developer.mozilla.org/en/nsIXMLHttpRequest#Attributes"><code>responseXML</code> of an <code>XMLHttpRequest</code> object</a>.</li> <li>The document, that given node or element belongs to, can be retrieved using the node's <code><a title="en/DOM/Node.ownerDocument" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.ownerDocument">ownerDocument</a></code> property.</li> <li>...and more.</li>
</ul>
<p>Depending on the kind of the document (e.g. <a title="en/HTML" rel="internal" href="https://developer.mozilla.org/en/HTML">HTML</a> or <a title="en/XML" rel="internal" href="https://developer.mozilla.org/en/XML">XML</a>) different APIs may be available on the document object. This theoretical availability of APIs is usually described in terms of <em>implementing interfaces</em> defined in the relevant W3C DOM specifications:</p>
<ul> <li>All document objects implement the DOM Core <a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#i-Document" title="http://www.w3.org/TR/DOM-Level-2-Core/core.html#i-Document" target="_blank"><code>Document</code></a> and <code><a title="en/DOM/Node" rel="internal" href="/api/js/html/Node">Node</a></code> interfaces, meaning that the "core" properties and methods are available for all kinds of documents.</li> <li>In addition to the generalized DOM Core document interface, HTML documents also implement the <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268" target="_blank">HTMLDocument</a></code> interface, which is a more specialized interface for dealing with HTML documents (e.g., <a title="en/DOM/document.cookie" rel="internal" href="https://developer.mozilla.org/en/DOM/document.cookie">document.cookie</a>, <a title="en/DOM/document.alinkColor" rel="internal" href="https://developer.mozilla.org/en/DOM/document.alinkColor">document.alinkColor</a>).</li> <li><a title="en/XUL" rel="internal" href="https://developer.mozilla.org/en/XUL">XUL</a> documents (available to Mozilla add-on and application developers) implement their own additions to the core Document functionality.</li>
</ul>
<p>Methods or properties listed here that are part of a more specialized interface have an asterisk (*) next to them and have additional information in the&nbsp; Availability column.</p>
<p>Note that some APIs listed below are not available in all browsers for various reasons:</p>
<ul> <li><strong>Obsolete</strong>: on its way of being removed from supporting browsers.</li> <li><strong>Non-standard</strong>: either an experimental feature not (yet?) agreed upon by all vendors, or a feature targeted specifically at the code running in a specific browser (e.g. Mozilla has a few DOM APIs created for its add-ons and application development).</li> <li>Part of a completed or an emerging standard, but not (yet?) implemented in all browsers or implemented in the newest versions of the browsers.</li>
</ul>
<p>Detailed browser compatibility tables are located at the pages describing each property or method.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/document">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Document"</e></m></meta>
	</class>
	<class path="js.html.DocumentFragment" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DocumentFragment.hx" extern="1">
		<extends path="js.html.Node"/>
		<querySelector public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></querySelector>
		<querySelectorAll public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></querySelectorAll>
		<haxe_doc><![CDATA[<p>DocumentFragment has no properties or methods of its own, but inherits from <a title="En/DOM/Node" class="internal" rel="internal" href="https://developer.mozilla.org/En/DOM/Node"><code>Node</code></a>. </p>
<p>A <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-B63ED1A3" title="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-B63ED1A3" target="_blank">DocumentFragment</a></code> is a minimal document object that has no parent. It is used as a light-weight version of document to store well-formed or potentially non-well-formed fragments of XML.</p>
<p>See <a title="En/DOM/Node" class="internal" rel="internal" href="https://developer.mozilla.org/En/DOM/Node"><code>Node</code></a> for a listing of its properties, constants and methods.</p>
<p>Various other methods can take a document fragment as an argument (e.g., any <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1950641247" title="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1950641247" target="_blank">Node</a></code> interface methods such as <code><a title="En/DOM/Node.appendChild" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.appendChild">appendChild</a></code> and <code><a title="En/DOM/Node.insertBefore" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.insertBefore">insertBefore</a></code>), in which case the children of the fragment are appended or inserted, not the fragment itself.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/DocumentFragment">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DocumentFragment"</e></m></meta>
	</class>
	<class path="js.html.DocumentType" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/DocumentType.hx" extern="1">
		<extends path="js.html.Node"/>
		<entities public="1" set="null"><c path="js.html.NamedNodeMap"/></entities>
		<internalSubset public="1" set="null"><c path="String"/></internalSubset>
		<name public="1" set="null"><c path="String"/></name>
		<notations public="1" set="null"><c path="js.html.NamedNodeMap"/></notations>
		<publicId public="1" set="null"><c path="String"/></publicId>
		<systemId public="1" set="null"><c path="String"/></systemId>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<haxe_doc><![CDATA[<p><span>NOTE:&nbsp;This interface is not fully supported in Mozilla at present, including for indicating internalSubset information which Gecko generally does otherwise support.</span></p>
<p><code>DocumentType</code> inherits <a title="en/DOM/Node" rel="internal" href="/api/js/html/Node">Node</a>'s properties, methods, and constants as well as the following properties of its own:</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/DocumentType">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DocumentType"</e></m></meta>
	</class>
	<class path="js.html.EmbedElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/EmbedElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1"><c path="String"/></align>
		<height public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/embed#attr-height">height</a></code>
 HTML&nbsp;attribute, containing the displayed height of the resource.]]></haxe_doc>
		</height>
		<name public="1"><c path="String"/></name>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/embed#attr-src">src</a></code>
 HTML&nbsp;attribute, containing the address of the resource.]]></haxe_doc>
		</src>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/embed#attr-type">type</a></code>
 HTML&nbsp;attribute, containing the type of the resource.]]></haxe_doc>
		</type>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/embed#attr-width">width</a></code>
 HTML&nbsp;attribute, containing the displayed width of the resource.]]></haxe_doc>
		</width>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.svg.Document"/></f></getSVGDocument>
		<haxe_doc><![CDATA[<strong>Note:</strong>&nbsp;This topic describes the HTMLEmbedElement interface as defined in the HTML5 standard. It does not address earlier, non-standardized version of the interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLEmbedElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLEmbedElement"</e></m></meta>
	</class>
	<class path="js.html.EntityReference" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/EntityReference.hx" extern="1">
		<extends path="js.html.Node"/>
		<haxe_doc><![CDATA[<p><span>NOTE:&nbsp;This is not implemented in Mozilla</span></p>
<p>Read-only reference to an entity reference in the DOM tree. Has no properties or methods of its own but inherits from <a class="internal" title="En/DOM/Node" rel="internal" href="/api/js/html/Node"><code>Node</code></a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/EntityReference">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"EntityReference"</e></m></meta>
	</class>
	<class path="js.html.Event" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Event.hx" extern="1">
		<AT_TARGET public="1" get="inline" set="null" line="32" static="1"><x path="Int"/></AT_TARGET>
		<BLUR public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></BLUR>
		<BUBBLING_PHASE public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></BUBBLING_PHASE>
		<CAPTURING_PHASE public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></CAPTURING_PHASE>
		<CHANGE public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></CHANGE>
		<CLICK public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></CLICK>
		<DBLCLICK public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></DBLCLICK>
		<DRAGDROP public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></DRAGDROP>
		<FOCUS public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></FOCUS>
		<KEYDOWN public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></KEYDOWN>
		<KEYPRESS public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></KEYPRESS>
		<KEYUP public="1" get="inline" set="null" line="54" static="1"><x path="Int"/></KEYUP>
		<MOUSEDOWN public="1" get="inline" set="null" line="56" static="1"><x path="Int"/></MOUSEDOWN>
		<MOUSEDRAG public="1" get="inline" set="null" line="58" static="1"><x path="Int"/></MOUSEDRAG>
		<MOUSEMOVE public="1" get="inline" set="null" line="60" static="1"><x path="Int"/></MOUSEMOVE>
		<MOUSEOUT public="1" get="inline" set="null" line="62" static="1"><x path="Int"/></MOUSEOUT>
		<MOUSEOVER public="1" get="inline" set="null" line="64" static="1"><x path="Int"/></MOUSEOVER>
		<MOUSEUP public="1" get="inline" set="null" line="66" static="1"><x path="Int"/></MOUSEUP>
		<NONE public="1" get="inline" set="null" line="68" static="1"><x path="Int"/></NONE>
		<SELECT public="1" get="inline" set="null" line="70" static="1"><x path="Int"/></SELECT>
		<bubbles public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A boolean indicating whether the event bubbles up through the DOM or not.</haxe_doc>
		</bubbles>
		<cancelBubble public="1">
			<x path="Bool"/>
			<haxe_doc>A boolean indicating whether the bubbling of the event has been canceled or not.</haxe_doc>
		</cancelBubble>
		<cancelable public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A boolean indicating whether the event is cancelable.</haxe_doc>
		</cancelable>
		<clipboardData public="1" set="null"><c path="js.html.Clipboard"/></clipboardData>
		<currentTarget public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>A reference to the currently registered target for the event.</haxe_doc>
		</currentTarget>
		<defaultPrevented public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates whether or not <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/event.preventDefault">event.preventDefault()</a></code>
 has been called on the event.]]></haxe_doc>
		</defaultPrevented>
		<eventPhase public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Indicates which phase of the event flow is being processed.</haxe_doc>
		</eventPhase>
		<returnValue public="1"><x path="Bool"/></returnValue>
		<srcElement public="1" set="null"><c path="js.html.EventTarget"/></srcElement>
		<target public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>A reference to the target to which the event was originally dispatched.</haxe_doc>
		</target>
		<timeStamp public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The time that the event was created.</haxe_doc>
		</timeStamp>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of the event (case-insensitive).</haxe_doc>
		</type>
		<initEvent public="1" set="method"><f a="eventTypeArg:canBubbleArg:cancelableArg">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></initEvent>
		<preventDefault public="1" set="method"><f a=""><x path="Void"/></f></preventDefault>
		<stopImmediatePropagation public="1" set="method"><f a=""><x path="Void"/></f></stopImmediatePropagation>
		<stopPropagation public="1" set="method"><f a=""><x path="Void"/></f></stopPropagation>
		<new public="1" set="method"><f a="type:?canBubble:?cancelable">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc><![CDATA[<p>This chapter describes the DOM Event Model. The <a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event" title="http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event" target="_blank">Event</a> interface itself is described, as well as the interfaces for event registration on nodes in the DOM, and <a title="en/DOM/element.addEventListener" rel="internal" href="https://developer.mozilla.org/en/DOM/element.addEventListener">event listeners</a>, and several longer examples that show how the various event interfaces relate to one another.</p>
<p>There is an excellent diagram that clearly explains the three phases of event flow through the DOM in the <a class="external" title="http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture" rel="external" href="http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture" target="_blank">DOM Level 3 Events draft</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/event">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Event"</e></m></meta>
	</class>
	<typedef path="js.html.EventListener" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/EventListener.hx"><f a="">
	<d/>
	<x path="Void"/>
</f></typedef>
	<class path="js.html.FieldSetElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/FieldSetElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/fieldset#attr-disabled">disabled</a></code>
 HTML&nbsp;attribute, indicating whether the user can interact with the control.]]></haxe_doc>
		</disabled>
		<elements public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>The elements belonging to this field set.</haxe_doc>
		</elements>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[The containing form element, if this element is in a form. Otherwise, the element the <a title="en/HTML/Element/fieldset#attr-name" rel="internal" href="https://developer.mozilla.org/en/HTML/Element/fieldset#attr-name">name content attribute</a> points to 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>. (<code>null</code> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>.)]]></haxe_doc>
		</form>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/fieldset#attr-name">name</a></code>
 HTML&nbsp;attribute, containing the name of the field set, used for submitting the form.]]></haxe_doc>
		</name>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Must be the string <code>fieldset</code>.]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the element does not satisfy (if any). This is the empty string if the element&nbsp; is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Always false because <code>fieldset</code> objects are never candidates for constraint validation.]]></haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[DOM&nbsp;<code>fieldset</code> elements expose the <a class=" external" title="http://dev.w3.org/html5/spec/forms.html#htmlfieldsetelement" rel="external" href="http://dev.w3.org/html5/spec/forms.html#htmlfieldsetelement" target="_blank">HTMLFieldSetElement</a>&nbsp; (
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7365882" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7365882" target="_blank">HTMLFieldSetElement</a>) interface, which provides special properties and methods (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of field-set elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLFieldSetElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFieldSetElement"</e></m></meta>
	</class>
	<class path="js.html.File" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/File.hx" extern="1">
		<extends path="js.html.Blob"/>
		<lastModifiedDate public="1" set="null"><c path="Date"/></lastModifiedDate>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The name of the file referenced by the <code>File</code> object. <strong>Read only.</strong> 
<span title="(Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)
">Requires Gecko 1.9.2</span>]]></haxe_doc>
		</name>
		<relativePath public="1" set="null"><c path="String"/></relativePath>
		<haxe_doc><![CDATA[<p>The <code>File</code> object provides information about -- and access to the contents of -- files. These are generally retrieved from a <code><a rel="custom" href="/api/js/html/FileList">FileList</a></code>
 object returned as a result of a user selecting files using the <code>input</code> element, or from a drag and drop operation's <a title="En/DragDrop/DataTransfer" rel="internal" href="https://developer.mozilla.org/En/DragDrop/DataTransfer"><code>DataTransfer</code></a> object.</p>
<div class="geckoVersionNote">
<p>
</p><div class="geckoVersionHeading">Gecko 2.0 note<div>(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
</div></div>
<p></p>
<p>Starting in Gecko 2.0&nbsp;(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
, the File object inherits from the <code><a rel="custom" href="/api/js/html/Blob">Blob</a></code>
&nbsp;interface, which provides methods and properties providing further information about the file.</p>
</div>
<p>The file reference can be saved when the form is submitted while the user is offline, so that the data can be retrieved and uploaded when the Internet connection is restored.</p>
<div class="note"><strong>Note:</strong> The <code>File</code> object as implemented by Gecko offers several non-standard methods for reading the contents of the file. These should <em>not</em> be used, as they will prevent your web application from being used in other browsers, as well as in future versions of Gecko, which will likely remove these methods.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/File">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"File"</e></m></meta>
	</class>
	<class path="js.html.FileList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/FileList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>A read-only value indicating the number of files in the list.</haxe_doc>
		</length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.File"/>
</f></item>
		<haxe_doc><![CDATA[<p>An object of this type is returned by the <code>files</code> property of the HTML&nbsp;input element; this lets you access the list of files selected with the <code>&lt;input type="file"&gt;</code> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the <a title="En/DragDrop/DataTransfer" rel="internal" href="https://developer.mozilla.org/En/DragDrop/DataTransfer"><code>DataTransfer</code></a> object for details on this usage.</p>
<p>

</p><div><p>Gecko 1.9.2 note</p><p>Prior to Gecko 1.9.2, the input element only supported a single file being selected at a time, meaning that the FileList would contain only one file. Starting with Gecko 1.9.2, if the input element's multiple attribute is true, the FileList may contain multiple files.</p></div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/FileList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"FileList"</e></m></meta>
	</class>
	<class path="js.html.Float32Array" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Float32Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of each array element.</haxe_doc>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of entries in the array. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
			<overloads>
				<set public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
				<set public="1" set="method">
					<f a="array:?offset">
						<c path="js.html.Float32Array"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
			</overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Float32Array <a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array()">Float32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Float32Array</code> object.</p>
<pre>Float32Array Float32Array(
&nbsp; unsigned long length
);

Float32Array Float32Array(
&nbsp; <em>TypedArray</em> array
);

Float32Array Float32Array(
&nbsp; sequence&lt;type&gt; array
);

Float32Array Float32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <span>Uint8</span><code>Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit floating point number before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Float32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Float32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Float32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Float32Array <a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array()">Float32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Float32Array</code> object.</p>
<pre>Float32Array Float32Array(
&nbsp; unsigned long length
);

Float32Array Float32Array(
&nbsp; <em>TypedArray</em> array
);

Float32Array Float32Array(
&nbsp; sequence&lt;type&gt; array
);

Float32Array Float32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <span>Uint8</span><code>Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit floating point number before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Float32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Float32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Float32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Float"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Float32Array <a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array()">Float32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Float32Array</code> object.</p>
<pre>Float32Array Float32Array(
&nbsp; unsigned long length
);

Float32Array Float32Array(
&nbsp; <em>TypedArray</em> array
);

Float32Array Float32Array(
&nbsp; sequence&lt;type&gt; array
);

Float32Array Float32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <span>Uint8</span><code>Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit floating point number before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Float32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Float32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Float32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Float32Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Float32Array <a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array()">Float32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Float32Array</code> object.</p>
<pre>Float32Array Float32Array(
&nbsp; unsigned long length
);

Float32Array Float32Array(
&nbsp; <em>TypedArray</em> array
);

Float32Array Float32Array(
&nbsp; sequence&lt;type&gt; array
);

Float32Array Float32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <span>Uint8</span><code>Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit floating point number before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Float32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Float32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Float32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[<p>The <code>Float32Array</code> type represents an array of 32-bit floating point numbers (corresponding to the C <code>float</code> data type).</p>
<p>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Float32Array"</e></m></meta>
	</class>
	<class path="js.html.FontElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/FontElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<color public="1">
			<c path="String"/>
			<haxe_doc>This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.</haxe_doc>
		</color>
		<face public="1">
			<c path="String"/>
			<haxe_doc>This attribute contains a comma-sperated list of one or more font names. The document text in the default style is rendered in the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.</haxe_doc>
		</face>
		<size public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the font size as either a numeric or relative value. Numeric values range from <span>1</span> to <span>7</span> with <span>1</span> being the smallest and <span>3</span> the default. It can be defined using a relative value, like <span>+2</span> or <span>-3</span>, which set it relative to the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/basefont#attr-size">size</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/basefont">&lt;basefont&gt;</a></code>
 element, or relative to <span>3</span>, the default value, if none does exist.]]></haxe_doc>
		</size>
		<haxe_doc><![CDATA[Obsolete<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/font">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFontElement"</e></m></meta>
	</class>
	<class path="js.html.FormElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/FormElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<acceptCharset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-accept-charset">accept-charset</a></code>
&nbsp;HTML&nbsp;attribute, containing a list of character encodings that the server accepts.]]></haxe_doc>
		</acceptCharset>
		<action public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-action">action</a></code>
&nbsp;HTML&nbsp;attribute, containing the URI&nbsp;of a program that processes the information submitted by the form.]]></haxe_doc>
		</action>
		<autocomplete public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-autocomplete">autocomplete</a></code>
 HTML&nbsp;attribute, containing a string that indicates whether the controls in this form can have their values automatically populated by the browser.]]></haxe_doc>
		</autocomplete>
		<elements public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>All the form controls belonging to this form element.</haxe_doc>
		</elements>
		<encoding public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Synonym for <strong>enctype</strong>.]]></haxe_doc>
		</encoding>
		<enctype public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-enctype">enctype</a></code>
&nbsp;HTML&nbsp;attribute, indicating the type of content that is used to transmit the form to the server. Only specified values can be set.]]></haxe_doc>
		</enctype>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of controls in the form.</haxe_doc>
		</length>
		<method public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-method">method</a></code>
&nbsp;HTML&nbsp;attribute, indicating the HTTP&nbsp;method used to submit the form. Only specified values can be set.]]></haxe_doc>
		</method>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-name">name</a></code>
&nbsp;HTML&nbsp;attribute, containing the name of the form.]]></haxe_doc>
		</name>
		<noValidate public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-novalidate">novalidate</a></code>
 HTML attribute, indicating that the form should not be validated.]]></haxe_doc>
		</noValidate>
		<target public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-target">target</a></code>
 HTML attribute, indicating where to display the results received from submitting the form.]]></haxe_doc>
		</target>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<reset public="1" set="method"><f a=""><x path="Void"/></f></reset>
		<submit public="1" set="method"><f a=""><x path="Void"/></f></submit>
		<haxe_doc><![CDATA[<p><code>FORM</code> elements share all of the properties and methods of other HTML elements described in the <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> section.</p>
<p>This interface provides methods to create and modify <code>FORM</code> elements using the DOM.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLFormElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFormElement"</e></m></meta>
	</class>
	<class path="js.html.FrameElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/FrameElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<contentDocument public="1" set="null"><c path="js.html.Document"/></contentDocument>
		<contentWindow public="1" set="null"><c path="js.html.DOMWindow"/></contentWindow>
		<frameBorder public="1"><c path="String"/></frameBorder>
		<height public="1" set="null"><x path="Int"/></height>
		<location public="1"><c path="String"/></location>
		<longDesc public="1"><c path="String"/></longDesc>
		<marginHeight public="1"><c path="String"/></marginHeight>
		<marginWidth public="1"><c path="String"/></marginWidth>
		<name public="1">
			<c path="String"/>
			<haxe_doc>This attribute is used to labeling frames. Without labeling all links will open in the frame that they are in.</haxe_doc>
		</name>
		<noResize public="1"><x path="Bool"/></noResize>
		<scrolling public="1">
			<c path="String"/>
			<haxe_doc>This attribute defines existence of scrollbar. If this attribute is not used, browser put a scrollbar when necessary. There are two choices; "yes" for showing a scrollbar even when it is not necessary and "no" for do not showing a scrollbar even when it is necessary.</haxe_doc>
		</scrolling>
		<src public="1">
			<c path="String"/>
			<haxe_doc>This attribute is specify document which will be displayed by frame.</haxe_doc>
		</src>
		<width public="1" set="null"><x path="Int"/></width>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.svg.Document"/></f></getSVGDocument>
		<haxe_doc><![CDATA[<p><code>&lt;frame&gt;</code> is an HTML element which defines a particular area in which another HTML document can be displayed. A frame should be used within a <code><a rel="custom" href="/api/js/html/FrameSetElement">&lt;frameset&gt;</a></code>
.</p>
<p>Using the <code>&lt;frame&gt;</code> element is not encouraged because of certain disadvantages such as performance problems and lack of accessibility for users with screen readers. Instead of the <code>&lt;frame&gt;</code> element, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe">&lt;iframe&gt;</a></code>
&nbsp;may be preferred.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/frame">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFrameElement"</e></m></meta>
	</class>
	<class path="js.html.FrameSetElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/FrameSetElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cols public="1"><c path="String"/></cols>
		<onbeforeunload public="1"><t path="js.html.EventListener"/></onbeforeunload>
		<onhashchange public="1"><t path="js.html.EventListener"/></onhashchange>
		<onmessage public="1"><t path="js.html.EventListener"/></onmessage>
		<onoffline public="1"><t path="js.html.EventListener"/></onoffline>
		<ononline public="1"><t path="js.html.EventListener"/></ononline>
		<onpopstate public="1"><t path="js.html.EventListener"/></onpopstate>
		<onresize public="1"><t path="js.html.EventListener"/></onresize>
		<onstorage public="1"><t path="js.html.EventListener"/></onstorage>
		<onunload public="1"><t path="js.html.EventListener"/></onunload>
		<rows public="1"><c path="String"/></rows>
		<haxe_doc><![CDATA[<code>&lt;frameset&gt;</code> is an HTML element which is used to contain <code><a rel="custom" href="/api/js/html/FrameElement">&lt;frame&gt;</a></code>
 elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/frameset">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFrameSetElement"</e></m></meta>
	</class>
	<class path="js.html.Gamepad" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Gamepad.hx" extern="1">
		<axes public="1" set="null"><c path="Array"><x path="Float"/></c></axes>
		<buttons public="1" set="null"><c path="Array"><x path="Float"/></c></buttons>
		<id public="1" set="null"><c path="String"/></id>
		<index public="1" set="null"><x path="Int"/></index>
		<timestamp public="1" set="null"><x path="Int"/></timestamp>
		<meta><m n=":native"><e>"Gamepad"</e></m></meta>
	</class>
	<class path="js.html.GamepadList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/GamepadList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Gamepad"/>
</f></item>
		<meta><m n=":native"><e>"GamepadList"</e></m></meta>
	</class>
	<class path="js.html.Geolocation" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Geolocation.hx" extern="1">
		<clearWatch public="1" set="method"><f a="watchId">
	<x path="Int"/>
	<x path="Void"/>
</f></clearWatch>
		<getCurrentPosition public="1" set="method"><f a="successCallback:?errorCallback:?options">
	<t path="js.html.PositionCallback"/>
	<t path="js.html.PositionErrorCallback"/>
	<d/>
	<x path="Void"/>
</f></getCurrentPosition>
		<watchPosition public="1" set="method"><f a="successCallback:?errorCallback:?options">
	<t path="js.html.PositionCallback"/>
	<t path="js.html.PositionErrorCallback"/>
	<d/>
	<x path="Int"/>
</f></watchPosition>
		<meta><m n=":native"><e>"Geolocation"</e></m></meta>
	</class>
	<class path="js.html.Geoposition" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Geoposition.hx" extern="1">
		<coords public="1" set="null"><c path="js.html.Coordinates"/></coords>
		<timestamp public="1" set="null"><x path="Int"/></timestamp>
		<meta><m n=":native"><e>"Geoposition"</e></m></meta>
	</class>
	<class path="js.html.HRElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/HRElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Enumerated attribute indicating alignment of the rule with respect to the surrounding context.</haxe_doc>
		</align>
		<noShade public="1"><x path="Bool"/></noShade>
		<size public="1">
			<c path="String"/>
			<haxe_doc>The height of the rule.</haxe_doc>
		</size>
		<width public="1">
			<c path="String"/>
			<haxe_doc>The width of the rule on the page.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[DOM <code>hr</code> elements expose the <a target="_blank" rel="external nofollow" class=" external" title="http://www.w3.org/TR/html5/grouping-content.html#htmlhrelement" href="http://www.w3.org/TR/html5/grouping-content.html#htmlhrelement">HTMLHRElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-68228811" rel="external nofollow" class=" external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-68228811"><code>HTMLHRElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating <code>hr</code> elements. In <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML/HTML5">HTML 5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLHRElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHRElement"</e></m></meta>
	</class>
	<class path="js.html.HTMLAllCollection" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/HTMLAllCollection.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></namedItem>
		<tags public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></tags>
		<meta><m n=":native"><e>"HTMLAllCollection"</e></m></meta>
	</class>
	<class path="js.html.HTMLCollection" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/HTMLCollection.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of items in the collection. <strong>Read only</strong>.]]></haxe_doc>
		</length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></namedItem>
		<haxe_doc><![CDATA[<p><code>HTMLCollection</code> is an interface representing a generic collection of elements (in document order) and offers methods and properties for traversing the list.</p>
<div class="note"><strong>Note:</strong> This interface is called <code>HTMLCollection</code> for historical reasons (before DOM4, collections implementing this interface could only have HTML elements as their items).</div>
<p><code>HTMLCollection</code>s in the HTML DOM are live; they are automatically updated when the underlying document is changed.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLCollection">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLCollection"</e></m></meta>
	</class>
	<class path="js.html.HTMLOptionsCollection" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/HTMLOptionsCollection.hx" extern="1">
		<extends path="js.html.HTMLCollection"/>
		<selectedIndex public="1"><x path="Int"/></selectedIndex>
		<add public="1" set="method"><f a="option:?index">
	<c path="js.html.OptionElement"/>
	<x path="Int"/>
	<x path="Void"/>
</f></add>
		<remove public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></remove>
		<haxe_doc><![CDATA[HTMLOptionsCollection is an interface representing a collection of HTML option elements (in document order)&nbsp;and offers methods and properties for traversing the list as well as optionally altering its items. This type is returned solely by the "options" property of <a title="En/DOM/select" rel="internal" href="/api/js/html/SelectElement">select</a>.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLOptionsCollection">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptionsCollection"</e></m></meta>
	</class>
	<class path="js.html.HeadElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/HeadElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<profile public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The URIs of one or more metadata profiles (white space separated). 

<span class="deprecatedInlineTemplate" title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Deprecated since Gecko 2.0</span>

 

<span title="(Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
">Obsolete since Gecko 7.0</span>]]></haxe_doc>
		</profile>
		<haxe_doc><![CDATA[The DOM <code>head</code> element exposes the <a title="http://www.w3.org/TR/html5/semantics.html#htmlheadelement" class=" external" rel="external" href="http://www.w3.org/TR/html5/semantics.html#htmlheadelement" target="_blank">HTMLHeadElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>&nbsp; <a class=" external" target="_blank" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-77253168" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-77253168">HTMLHeadElement</a>) interface, which contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 section. In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLHeadElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHeadElement"</e></m></meta>
	</class>
	<class path="js.html.History" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/History.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Read-only. Returns the number of elements in the session history, including the currently loaded page. For example, for a page loaded in a new tab this property returns <code>1</code>.]]></haxe_doc>
		</length>
		<state public="1" set="null">
			<d/>
			<haxe_doc><![CDATA[Returns the state at the top of the history stack. This is a way to look at the state without having to wait for a <code>popstate</code> event. <strong>Read only.</strong>]]></haxe_doc>
		</state>
		<back public="1" set="method"><f a=""><x path="Void"/></f></back>
		<forward public="1" set="method"><f a=""><x path="Void"/></f></forward>
		<go public="1" set="method"><f a="distance">
	<x path="Int"/>
	<x path="Void"/>
</f></go>
		<pushState public="1" set="method"><f a="data:title:?url">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></pushState>
		<replaceState public="1" set="method"><f a="data:title:?url">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></replaceState>
		<haxe_doc><![CDATA[Returns a reference to the <code>History</code> object, which provides an interface for manipulating the browser <em>session history</em> (pages visited in the tab or frame that the current page is loaded in).<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window.history">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"History"</e></m></meta>
	</class>
	<class path="js.html.HtmlElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/HtmlElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<manifest public="1"><c path="String"/></manifest>
		<version public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Version of the HTML&nbsp;Document Type Definition that governs this document.]]></haxe_doc>
		</version>
		<haxe_doc><![CDATA[<p>The <code>html</code> object exposes the <a class=" external" title="http://www.w3.org/TR/html5/semantics.html#htmlhtmlelement" rel="external" href="http://www.w3.org/TR/html5/semantics.html#htmlhtmlelement" target="_blank">HTMLHtmlElement</a> (
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a target="_blank" class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-33759296" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-33759296">HTMLHtmlElement</a>) interface and serves as the root node for a given HTML&nbsp;document.&nbsp; This object inherits the properties and methods described in the <a title="en/DOM/element" class="internal" rel="internal" href="/api/js/html/Element">element</a> section.&nbsp; In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but provides no other members.</p>
<p>You can retrieve the <code>html</code> object for a document by obtaining the value of the <a class="internal" title="en/DOM/document.documentElement" rel="internal" href="https://developer.mozilla.org/en/DOM/document.documentElement"><code>document.documentElement</code></a> property.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/En/DOM/Html">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHtmlElement"</e></m></meta>
	</class>
	<class path="js.html.IFrameElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/IFrameElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Specifies the alignment of the frame with respect to the surrounding context.</haxe_doc>
		</align>
		<contentDocument public="1" set="null">
			<c path="js.html.Document"/>
			<haxe_doc>The active document in the inline frame's nested browsing context.</haxe_doc>
		</contentDocument>
		<contentWindow public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>The window proxy for the nested browsing context.</haxe_doc>
		</contentWindow>
		<frameBorder public="1"><c path="String"/></frameBorder>
		<height public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-height">height</a></code>
 HTML&nbsp;attribute, indicating the height of the frame.]]></haxe_doc>
		</height>
		<longDesc public="1">
			<c path="String"/>
			<haxe_doc>URI of a long description of the frame.</haxe_doc>
		</longDesc>
		<marginHeight public="1">
			<c path="String"/>
			<haxe_doc>Height of the frame margin.</haxe_doc>
		</marginHeight>
		<marginWidth public="1">
			<c path="String"/>
			<haxe_doc>Width of the frame margin.</haxe_doc>
		</marginWidth>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-name">name</a></code>
 HTML&nbsp;attribute, containing a name by which to refer to the frame.]]></haxe_doc>
		</name>
		<sandbox public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-sandbox">sandbox</a></code>
 HTML&nbsp;attribute, indicating extra restrictions on the behavior of the nested content.]]></haxe_doc>
		</sandbox>
		<scrolling public="1">
			<c path="String"/>
			<haxe_doc>Indicates whether the browser should provide scrollbars for the frame.</haxe_doc>
		</scrolling>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-src">src</a></code>
 HTML&nbsp;attribute, containing the address of the content to be embedded.]]></haxe_doc>
		</src>
		<srcdoc public="1">
			<c path="String"/>
			<haxe_doc>The content to display in the frame.</haxe_doc>
		</srcdoc>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-width">width</a></code>
&nbsp;HTML&nbsp;attribute, indicating the width of the frame.]]></haxe_doc>
		</width>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.svg.Document"/></f></getSVGDocument>
		<haxe_doc><![CDATA[DOM iframe objects expose the <a class="external" href="http://www.w3.org/TR/html5/the-iframe-element.html#htmliframeelement" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/html5/the-iframe-element.html#htmliframeelement">HTMLIFrameElement</a> (or <span><a href="https://developer.mozilla.org/en/HTML" rel="custom nofollow">HTML 4</a></span> <a class="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-50708718" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-50708718"><code>HTMLIFrameElement</code></a>) interface, which provides special properties and methods (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of inline frame elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLIFrameElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLIFrameElement"</e></m></meta>
	</class>
	<class path="js.html.ImageData" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ImageData.hx" extern="1">
		<data public="1" set="null"><c path="js.html.Uint8ClampedArray"/></data>
		<height public="1" set="null"><x path="Int"/></height>
		<width public="1" set="null"><x path="Int"/></width>
		<haxe_doc><![CDATA[Used with the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 element. Returned by <a title="en/DOM/CanvasRenderingContext2D" rel="internal" href="/api/js/html/CanvasRenderingContext2D">CanvasRenderingContext2D</a>'s <a title="en/DOM/CanvasRenderingContext2D.createImageData" rel="internal" href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D.createImageData" class="new ">createImageData</a> and <a title="en/DOM/CanvasRenderingContext2D.getImageData" rel="internal" href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D.getImageData" class="new ">getImageData</a> (and accepted as first argument in <a title="en/DOM/CanvasRenderingContext2D.putImageData" rel="internal" href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D.putImageData" class="new ">putImageData</a>)<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/ImageData">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ImageData"</e></m></meta>
	</class>
	<class path="js.html.ImageElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ImageElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Indicates the alignment of the image with respect to the surrounding context.</haxe_doc>
		</align>
		<alt public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-alt">alt</a></code>
 HTML attribute, indicating fallback context for the image.]]></haxe_doc>
		</alt>
		<border public="1">
			<c path="String"/>
			<haxe_doc>Width of the border around the image.</haxe_doc>
		</border>
		<complete public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[True if the browser has fetched the image, and it is in a <a title="en/HTML/Element/Img#Image Format" rel="internal" href="https://developer.mozilla.org/En/HTML/Element/Img#Image_Format">supported image type</a> that was decoded without errors.]]></haxe_doc>
		</complete>
		<crossOrigin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The CORS setting for this image element. See <a title="en/HTML/CORS settings attributes" rel="internal" href="https://developer.mozilla.org/en/HTML/CORS_settings_attributes">CORS&nbsp;settings attributes</a> for details.]]></haxe_doc>
		</crossOrigin>
		<height public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-height">height</a></code>
 HTML attribute, indicating the rendered height of the image in CSS&nbsp;pixels.]]></haxe_doc>
		</height>
		<hspace public="1">
			<x path="Int"/>
			<haxe_doc>Space to the left and right of the image.</haxe_doc>
		</hspace>
		<isMap public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-ismap">ismap</a></code>
 HTML attribute, indicating that the image is part of a server-side image map.]]></haxe_doc>
		</isMap>
		<longDesc public="1">
			<c path="String"/>
			<haxe_doc>URI of a long description of the image.</haxe_doc>
		</longDesc>
		<lowsrc public="1">
			<c path="String"/>
			<haxe_doc>A reference to a low-quality (but faster to load) copy of the image.</haxe_doc>
		</lowsrc>
		<name public="1"><c path="String"/></name>
		<naturalHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Intrinsic height of the image in CSS&nbsp;pixels, if it is available; otherwise, 0.]]></haxe_doc>
		</naturalHeight>
		<naturalWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Intrinsic width of the image in CSS&nbsp;pixels, if it is available; otherwise, 0.]]></haxe_doc>
		</naturalWidth>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element#attr-src">src</a></code>
 HTML attribute, containing the URL of the image.]]></haxe_doc>
		</src>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-usemap">usemap</a></code>
 HTML attribute, containing a partial URL of a map element.]]></haxe_doc>
		</useMap>
		<vspace public="1">
			<x path="Int"/>
			<haxe_doc>Space above and below the image.</haxe_doc>
		</vspace>
		<width public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-width">width</a></code>
 HTML attribute, indicating the rendered width of the image in CSS&nbsp;pixels.]]></haxe_doc>
		</width>
		<x public="1" set="null"><x path="Int"/></x>
		<y public="1" set="null"><x path="Int"/></y>
		<haxe_doc><![CDATA[DOM image objects expose the <a title="http://www.w3.org/TR/html5/embedded-content-1.html#htmlimageelement" class=" external" rel="external" href="http://www.w3.org/TR/html5/embedded-content-1.html#htmlimageelement" target="_blank">HTMLImageElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-17701901" class=" external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-17701901" target="_blank"><code>HTMLImageElement</code></a>) interface, which provides special properties and methods (beyond the regular <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 object interface they also have available to them by inheritance) for manipulating the layout and presentation of input elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLImageElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLImageElement"</e></m></meta>
	</class>
	<class path="js.html.InputElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/InputElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<accept public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-accept">accept</a></code>
 HTML&nbsp;attribute, containing comma-separated list of file types accepted by the server when <strong>type</strong> is <code>file</code>.]]></haxe_doc>
		</accept>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Alignment of the element.

<span title="">Obsolete</span>&nbsp;in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</align>
		<alt public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-alt">alt</a></code>
&nbsp;HTML attribute, containing alternative text to use when <strong>type</strong> is <code>image.</code>]]></haxe_doc>
		</alt>
		<autocomplete public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the {{htmlattrxref("autocomplete", "input)}} HTML attribute, indicating whether the value of the control can be automatically completed by the browser. Ignored if the value of the <strong>type</strong> attribute is <span>hidden</span>, <span>checkbox</span>, <span>radio</span>, <span>file</span>, or a button type (<span>button</span>, <span>submit</span>, <span>reset</span>, <span>image</span>). Possible values are: <ul> <li><span>off</span>: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.</li> <li><span>on</span>: The browser can automatically complete the value based on values that the user has entered during previous uses.</li> </ul>]]></haxe_doc>
		</autocomplete>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-autofocus">autofocus</a></code>
 HTML&nbsp;attribute, which specifies that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the <strong>autofocus</strong> attribute. It cannot be applied if the <strong>type</strong> attribute is set to <code>hidden</code> (that is, you cannot automatically set focus to a hidden control).]]></haxe_doc>
		</autofocus>
		<checked public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The current state of the element when <strong>type</strong> is <code>checkbox</code> or <code>radio</code>.]]></haxe_doc>
		</checked>
		<defaultChecked public="1">
			<x path="Bool"/>
			<haxe_doc>The default state of a radio button or checkbox as originally specified in HTML that created this object.</haxe_doc>
		</defaultChecked>
		<defaultValue public="1">
			<c path="String"/>
			<haxe_doc>The default value as originally specified in HTML that created this object.</haxe_doc>
		</defaultValue>
		<dirName public="1"><c path="String"/></dirName>
		<directory public="1"><x path="Bool"/></directory>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-disabled">disabled</a></code>
 HTML attribute, indicating that the control is not available for interaction.]]></haxe_doc>
		</disabled>
		<entries public="1" set="null"><c path="js.html.fs.EntryArray"/></entries>
		<files public="1">
			<c path="js.html.FileList"/>
			<haxe_doc>A list of selected files.</haxe_doc>
		</files>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[<p>The containing form element, if this element is in a form. If this element is not contained in a form element:</p> <ul> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> this can be the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-id">id</a></code>
 attribute of any <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element in the same document. Even if the attribute is set on <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input">&lt;input&gt;</a></code>
, this property will be <code>null</code>, if it isn't the id of a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element.</li> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> this must be <code>null</code>.</li> </ul>]]></haxe_doc>
		</form>
		<formAction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-formaction">formaction</a></code>
 HTML attribute, containing the URI&nbsp;of a program that processes information submitted by the element. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-action">action</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formAction>
		<formEnctype public="1"><c path="String"/></formEnctype>
		<formMethod public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-formmethod">formmethod</a></code>
&nbsp;HTML&nbsp;attribute, containing the HTTP&nbsp;method that the browser uses to submit the form. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-method">method</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formMethod>
		<formNoValidate public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-formnovalidate">formnovalidate</a></code>
&nbsp;HTML&nbsp;attribute, indicating that the form is not to be validated when it is submitted. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-novalidate">novalidate</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formNoValidate>
		<formTarget public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-formtarget">formtarget</a></code>
 HTML&nbsp;attribute, containing a name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-target">target</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formTarget>
		<grammar public="1"><x path="Bool"/></grammar>
		<height public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-height">height</a></code>
 HTML attribute, which defines the height of the image displayed for the button, if the value of <strong>type</strong> is <span>image</span>.]]></haxe_doc>
		</height>
		<incremental public="1"><x path="Bool"/></incremental>
		<indeterminate public="1">
			<x path="Bool"/>
			<haxe_doc>Indicates that a checkbox is neither on nor off.</haxe_doc>
		</indeterminate>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc><![CDATA[A list of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/label">&lt;label&gt;</a></code>
 elements that are labels for this element.]]></haxe_doc>
		</labels>
		<list public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[Identifies a list of pre-defined options to suggest to the user. The value must be the <strong>id</strong> of a <code><a class="new" href="https://developer.mozilla.org/en/HTML/Element/datalist" rel="internal">&lt;datalist&gt;</a></code> element in the same document. The browser displays only options that are valid values for this input element. This attribute is ignored when the <strong>type</strong> attribute's value is <span>hidden</span>, <span>checkbox</span>, <span>radio</span>, <span>file</span>, or a button type.]]></haxe_doc>
		</list>
		<max public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-max">max</a></code>
 HTML&nbsp;attribute, containing the maximum (numeric or date-time) value for this item, which must not be less than its minimum (<strong>min</strong> attribute) value.]]></haxe_doc>
		</max>
		<maxLength public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[<p>Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-maxlength">maxlength</a></code>
&nbsp;HTML attribute, containing the maximum length of text (in Unicode code points) that the value can be changed to. The constraint is evaluated only when the value is changed</p> <div class="note"><strong>Note:</strong> If you set <code>maxlength</code> to a negative value programmatically, an exception will be thrown.</div> Setter throws DOMException.]]></haxe_doc>
		</maxLength>
		<min public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-min">min</a></code>
 HTML&nbsp;attribute, containing the minimum (numeric or date-time) value for this item, which must not be greater than its maximum (<strong>max</strong> attribute) value.]]></haxe_doc>
		</min>
		<multiple public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-multiple">multiple</a></code>
 HTML&nbsp;attribute, indicating whether more than one value is possible (e.g., multiple files).]]></haxe_doc>
		</multiple>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-name">name</a></code>
 HTML&nbsp;attribute, containing a name that identifies the element when submitting the form.]]></haxe_doc>
		</name>
		<onspeechchange public="1"><t path="js.html.EventListener"/></onspeechchange>
		<pattern public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-pattern">pattern</a></code>
 HTML&nbsp;attribute, containing a regular expression that the control's value is checked against. The pattern must match the entire value, not just some subset. Use the <strong>title</strong> attribute to describe the pattern to help the user. This attribute applies when the value of the <strong>type</strong> attribute is <span>text</span>, <span>search</span>, <span>tel</span>, <span>url</span> or <span>email</span>; otherwise it is ignored.]]></haxe_doc>
		</pattern>
		<placeholder public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-placeholder">placeholder</a></code>
 HTML&nbsp;attribute, containing a hint to the user of what can be entered in the control. The placeholder text must not contain carriage returns or line-feeds. This attribute applies when the value of the <strong>type</strong> attribute is <span>text</span>, <span>search</span>, <span>tel</span>, <span>url</span> or <span>email</span>; otherwise it is ignored.]]></haxe_doc>
		</placeholder>
		<readOnly public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<p>Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-readonly">readonly</a></code>
 HTML&nbsp;attribute, indicating that the user cannot modify the value of the control.</p> <p><span><a href="https://developer.mozilla.org/en/HTML/HTML5" rel="custom nofollow">HTML 5</a></span> This is ignored if the value of the <strong>type</strong> attribute is <span>hidden</span>, <span>range</span>, <span>color</span>, <span>checkbox</span>, <span>radio</span>, <span>file</span>, or a button type.</p>]]></haxe_doc>
		</readOnly>
		<required public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-required">required</a></code>
 HTML&nbsp;attribute, indicating that the user must fill in a value before submitting a form.]]></haxe_doc>
		</required>
		<selectionDirection public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The direction in which selection occurred. This is "forward" if selection was performed in the start-to-end direction of the current locale, or "backward" for the opposite direction. This can also be "none"&nbsp;if the direction is unknown."]]></haxe_doc>
		</selectionDirection>
		<selectionEnd public="1">
			<x path="Int"/>
			<haxe_doc>The index of the end of selected text.</haxe_doc>
		</selectionEnd>
		<selectionStart public="1">
			<x path="Int"/>
			<haxe_doc>The index of the beginning of selected text.</haxe_doc>
		</selectionStart>
		<size public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-size">size</a></code>
 HTML&nbsp;attribute, containing size of the control. This value is in pixels unless the value of <strong>type</strong> is <span>text</span> or <span>password</span>, in which case, it is an integer number of characters. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> Applies only when <strong>type</strong> is set to <span>text</span>, <span>search</span>, <span>tel</span>, <span>url</span>, <span>email</span>, or <span>password</span>; otherwise it is ignored. Setter throws DOMException.]]></haxe_doc>
		</size>
		<speech public="1"><x path="Bool"/></speech>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-src">src</a></code>
 HTML&nbsp;attribute, which specifies a URI for the location of an image to display on the graphical submit button, if the value of <strong>type</strong> is <span>image</span>; otherwise it is ignored.]]></haxe_doc>
		</src>
		<step public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-step">step</a></code>
 HTML&nbsp;attribute, which works with<strong> min</strong> and <strong>max</strong> to limit the increments at which a numeric or date-time value can be set. It can be the string <span>any</span> or a positive floating point number. If this is not set to <span>any</span>, the control accepts only values at multiples of the step value greater than the minimum.]]></haxe_doc>
		</step>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-type">type</a></code>
 HTML&nbsp;attribute, indicating the type of control to display. See 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-type">type</a></code>
 attribute of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input">&lt;input&gt;</a></code>
 for possible values.]]></haxe_doc>
		</type>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[A client-side image map. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</useMap>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc><![CDATA[The validity states that this element is in.&nbsp;]]></haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc>Current value in the control. Setter throws DOMException.</haxe_doc>
		</value>
		<valueAsDate public="1">
			<c path="Date"/>
			<haxe_doc><![CDATA[The value of the element, interpreted as a date, or <code>null</code> if conversion is not possible. Setter throws DOMException.]]></haxe_doc>
		</valueAsDate>
		<valueAsNumber public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value of the element, interpreted as one of the following in order:</p> <ol> <li>a time value</li> <li>a number</li> <li><code>null</code> if conversion is not possible</li> </ol> Setter throws DOMException.]]></haxe_doc>
		</valueAsNumber>
		<width public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-width">width</a></code>
 HTML&nbsp;attribute, which defines the width of the image displayed for the button, if the value of <strong>type</strong> is <span>image</span>.]]></haxe_doc>
		</width>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.</haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<select public="1" set="method"><f a=""><x path="Void"/></f></select>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<setRangeText public="1" set="method">
			<f a="replacement:start:end:selectionMode">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><setRangeText public="1" set="method">
	<f a="replacement">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</setRangeText></overloads>
		</setRangeText>
		<setSelectionRange public="1" set="method"><f a="start:end:?direction">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></setSelectionRange>
		<stepDown public="1" set="method"><f a="?n">
	<x path="Int"/>
	<x path="Void"/>
</f></stepDown>
		<stepUp public="1" set="method"><f a="?n">
	<x path="Int"/>
	<x path="Void"/>
</f></stepUp>
		<haxe_doc><![CDATA[DOM <code>Input</code> objects expose the <a title="http://dev.w3.org/html5/spec/the-input-element.html#htmlinputelement" class=" external" rel="external" href="http://dev.w3.org/html5/spec/the-input-element.html#htmlinputelement" target="_blank">HTMLInputElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6043025" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6043025" target="_blank"><code>HTMLInputElement</code></a>) interface, which provides special properties and methods (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of input elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLInputElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLInputElement"</e></m></meta>
	</class>
	<class path="js.html.Int32Array" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Int32Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of each array element.</haxe_doc>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of entries in the array. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="js.html.Int32Array"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
			<overloads>
				<set public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
				<set public="1" set="method">
					<f a="array:?offset">
						<c path="Array"><x path="Int"/></c>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
			</overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Int32Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int32Array <a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array()">Int32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int32Array</code> object.</p>
<pre>Int32Array Int32Array(
&nbsp; unsigned long length
);

Int32Array Int32Array(
&nbsp; <em>TypedArray</em> array
);

Int32Array Int32Array(
&nbsp; sequence&lt;type&gt; array
);

Int32Array Int32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int16Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int32Array <a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array()">Int32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int32Array</code> object.</p>
<pre>Int32Array Int32Array(
&nbsp; unsigned long length
);

Int32Array Int32Array(
&nbsp; <em>TypedArray</em> array
);

Int32Array Int32Array(
&nbsp; sequence&lt;type&gt; array
);

Int32Array Int32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int16Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int32Array <a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array()">Int32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int32Array</code> object.</p>
<pre>Int32Array Int32Array(
&nbsp; unsigned long length
);

Int32Array Int32Array(
&nbsp; <em>TypedArray</em> array
);

Int32Array Int32Array(
&nbsp; sequence&lt;type&gt; array
);

Int32Array Int32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int16Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Int32Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int32Array <a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array()">Int32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int32Array</code> object.</p>
<pre>Int32Array Int32Array(
&nbsp; unsigned long length
);

Int32Array Int32Array(
&nbsp; <em>TypedArray</em> array
);

Int32Array Int32Array(
&nbsp; sequence&lt;type&gt; array
);

Int32Array Int32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int16Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[<p>The <code>Int32Array</code> type represents an array of twos-complement 32-bit signed integers.</p>
<p>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Int32Array"</e></m></meta>
	</class>
	<class path="js.html.KeygenElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/KeygenElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-autofocus">autofocus</a></code>
&nbsp;HTML attribute, indicating that the form control should have input focus when the page loads.]]></haxe_doc>
		</autofocus>
		<challenge public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-challenge">challenge</a></code>
 HTML&nbsp;attribute, containing a challenge string that is packaged with the submitted key.]]></haxe_doc>
		</challenge>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-disabled">disabled</a></code>
&nbsp;HTML attribute, indicating that the control is not available for interaction.]]></haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[Indicates the control's form owner, reflecting the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-form">form</a></code>
&nbsp;HTML&nbsp;attribute if it is defined.]]></haxe_doc>
		</form>
		<keytype public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-keytype">keytype</a></code>
 HTML&nbsp;attribute, containing the type of key used.]]></haxe_doc>
		</keytype>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc>A list of label elements associated with this keygen element.</haxe_doc>
		</labels>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-name">name</a></code>
 HTML attribute, containing the name for the control that is submitted with form data.]]></haxe_doc>
		</name>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Must be the value <code>keygen</code>.]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Always false because <code>keygen</code> objects are never candidates for constraint validation.]]></haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[<strong>Note:</strong>&nbsp;This page describes the Keygen Element interface as specified, not as currently implemented by Gecko. See <a rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=101019" class="external" title="">
bug 101019</a>
 for details and status.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLKeygenElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLKeygenElement"</e></m></meta>
	</class>
	<class path="js.html.LIElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/LIElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This character attributes indicates the numbering type: <ul> <li><code>a</code>: lowercase letters</li> <li><code>A</code>: uppercase letters</li> <li><code>i</code>: lowercase Roman numerals</li> <li><code>I</code>: uppercase Roman numerals</li> <li><code>1</code>: numbers</li> </ul> This type overrides the one used by its parent <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ol">&lt;ol&gt;</a></code>
 element, if any.<br> <div class="note"><strong>Usage note:</strong> This attribute has been deprecated: use the CSS <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property instead.</div>]]></haxe_doc>
		</type>
		<value public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[This integer attributes indicates the current ordinal value of the item in the list as defined by the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ol">&lt;ol&gt;</a></code>
 element. The only allowed value for this attribute is a number, even if the list is displayed with Roman numerals or letters. List items that follow this one continue numbering from the value set. The <strong>value</strong> attribute has no meaning for unordered lists (<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ul">&lt;ul&gt;</a></code>
) or for menus (<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/menu">&lt;menu&gt;</a></code>
). <div class="note"><strong>Note</strong>: This attribute was deprecated in HTML4, but reintroduced in HTML5.</div> <div class="geckoVersionNote"> <p>
</p><div class="geckoVersionHeading">Gecko 9.0 note<div>(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
</div></div>
<p></p> <p>Prior to <span title="(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
">Gecko&nbsp;9.0</span>, negative values were incorrectly converted to 0. Starting in <span title="(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
">Gecko&nbsp;9.0</span> all integer values are correctly parsed.</p> </div>]]></haxe_doc>
		</value>
		<haxe_doc><![CDATA[The <em>HTML List item element</em> (<code>&lt;li&gt;</code>) is used to represent a list item. It should be contained in an ordered list (<code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
), an unordered list (<code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
) or a menu (<code><a rel="custom" href="/api/js/html/MenuElement">&lt;menu&gt;</a></code>
), where it represents a single entity in that list. In menus and unordered lists, list items are ordinarily displayed using bullet points. In order lists, they are usually displayed with some ascending counter on the left such as a number or letter<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/li">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLIElement"</e></m></meta>
	</class>
	<class path="js.html.LabelElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/LabelElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<control public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>The labeled control.</haxe_doc>
		</control>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc>The form owner of this label.</haxe_doc>
		</form>
		<htmlFor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The ID of the labeled control. Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/label#attr-for">for</a></code>
 attribute.]]></haxe_doc>
		</htmlFor>
		<haxe_doc><![CDATA[DOM Label objects inherit all of the properties and methods of DOM <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a>, and also expose the <a title="http://dev.w3.org/html5/spec/forms.html#htmllabelelement" class=" external" rel="external" href="http://dev.w3.org/html5/spec/forms.html#htmllabelelement" target="_blank">HTMLLabelElement</a>(or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-13691394" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-13691394" target="_blank">HTMLLabelElement</a>) interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLLabelElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLabelElement"</e></m></meta>
	</class>
	<class path="js.html.LegendElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/LegendElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Alignment relative to the form set. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, 

<span class="deprecatedInlineTemplate" title="">Deprecated</span>

 in 
<span>HTML 4.01</span>]]></haxe_doc>
		</align>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[The form that this legend belongs to. If the legend has a fieldset element as its parent, then this attribute returns the same value as the <strong>form</strong> attribute on the parent fieldset element. Otherwise, it returns null.]]></haxe_doc>
		</form>
		<haxe_doc><![CDATA[DOM&nbsp;Legend objects inherit all of the properties and methods of DOM <a href="https://developer.mozilla.org/en/DOM/HTMLElement" title="en/DOM/HTMLElement" rel="internal">HTMLElement</a>, and also expose the <a title="http://www.w3.org/TR/html5/forms.html#htmllegendelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/forms.html#htmllegendelement" target="_blank">HTMLLegendElement</a> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> (or <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-21482039" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-21482039" target="_blank">HTMLLegendElement</a> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>) interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLLegendElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLegendElement"</e></m></meta>
	</class>
	<class path="js.html.LinkElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/LinkElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<charset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute defines the character encoding of the linked resource. The value is a space- and/or comma-delimited list of character sets as defined in <a class="external" title="http://tools.ietf.org/html/rfc2045" rel="external" href="http://tools.ietf.org/html/rfc2045" target="_blank">RFC 2045</a>. The default value is ISO-8859-1. <div class="note"><strong>Usage note: </strong>This attribute is obsolete in HTML5 and <span>must</span><strong> not be used by authors</strong>. To achieve its effect, use the <span>Content-Type:</span> HTTP header on the linked resource.</div>]]></haxe_doc>
		</charset>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This attribute is used to disable a link relationship. In conjunction with scripting, this attribute could be used to turn on and off various style sheet relationships. <div class="note"> <p><strong>Note: </strong>While there is no <code>disabled</code> attribute in the HTML standard, there <strong>is</strong> a <code>disabled</code> attribute on the <code>HTMLLinkElement</code> DOM object.</p> <p>The use of&nbsp;<code>disabled</code> as an HTML attribute is non-standard and only used by some Microsoft browsers. <span>Do not use it</span>. To achieve a similar effect, use one of the following techniques:</p> <ul> <li>If the <code>disabled</code> attribute has been added directly to the element on the page, do not include the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link">&lt;link&gt;</a></code>
 element instead;</li> <li>Set the <code>disabled</code> <strong>property</strong> of the DOM object via scripting.</li> </ul> </div>]]></haxe_doc>
		</disabled>
		<href public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the <a title="https://developer.mozilla.org/en/URIs_and_URLs" rel="internal" href="https://developer.mozilla.org/en/URIs_and_URLs">URL</a> of the linked resource. A URL might be absolute or relative.]]></haxe_doc>
		</href>
		<hreflang public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute indicates the language of the linked resource. It is purely advisory. Allowed values are determined by <a class="external" title="http://www.ietf.org/rfc/bcp/bcp47.txt" rel="external" href="http://www.ietf.org/rfc/bcp/bcp47.txt" target="_blank">BCP47</a> for HTML5 and by <a class="external" title="http://www.ietf.org/rfc/rfc1766.txt" rel="external" href="http://www.ietf.org/rfc/rfc1766.txt" target="_blank">RFC1766</a> for HTML 4. Use this attribute only if the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-href">href</a></code>
 attribute is present.]]></haxe_doc>
		</hreflang>
		<media public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the media which the linked resource applies to. Its value must be a <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/en/CSS/Media_queries">media query</a>. This attribute is mainly useful when linking to external stylesheets by allowing the user agent to pick the best adapted one for the device it runs on.<br> <div class="note"><strong>Usage note:&nbsp;</strong> <p>&nbsp;</p> <ul> <li>In HTML 4, this can only be a simple white-space-separated list of media description literals, i.e., <a title="https://developer.mozilla.org/en/CSS/@media" rel="internal" href="https://developer.mozilla.org/en/CSS/@media">media types and groups</a>, where defined and allowed as values for this attribute, such as <span>print</span>, <span>screen</span>, <span>aural</span>, <span>braille.</span> HTML5 extended this to any kind of <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/en/CSS/Media_queries">media queries</a>, which are a superset of the allowed values of HTML 4.</li> <li>Browsers not supporting the <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/en/CSS/Media_queries">CSS3 Media Queries</a> won't necessary recognized the adequate link; do not forget to set fallback links,&nbsp; the restricted set of media queries defined in HTML 4.</li> </ul> </div>]]></haxe_doc>
		</media>
		<rel public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute names a relationship of the linked document to the current document. The attribute must be a space-separated list of the <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">link types values</a>. The most common use of this attribute is to specify a link to an external style sheet:&nbsp;the <strong>rel</strong> attribute is set to <code>stylesheet</code>, and the <strong>href</strong> attribute is set to the URL of an external style sheet to format the page. WebTV also supports the use of the value <code>next</code> for <strong>rel</strong> to preload the next page in a document series.]]></haxe_doc>
		</rel>
		<rev public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The value of this attribute shows the relationship of the current document to the linked document, as defined by the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link#attr-href">href</a></code>
 attribute. The attribute thus defines the reverse relationship compared to the value of the <strong>rel</strong> attribute. <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">Link types values</a> for the attribute are similar to the possible values for 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link#attr-rel">rel</a></code>
.<br> <div class="note"><strong>Usage note: </strong>This attribute is obsolete in HTML5. <strong>Do not use it</strong>. To achieve its effect, use the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link#attr-rel">rel</a></code>
 attribute with the opposite <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">link types values</a>, e.g. <span>made</span> should be replaced by <span>author</span>. Also this attribute doesn't mean <em>revision</em> and must not be used with a version number, which is unfortunately the case on numerous sites.</div>]]></haxe_doc>
		</rev>
		<sheet public="1" set="null"><c path="js.html.StyleSheet"/></sheet>
		<sizes public="1">
			<c path="js.html.DOMSettableTokenList"/>
			<haxe_doc><![CDATA[This attribute defines the sizes of the icons for visual media contained in the resource. It must be present only if the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link#attr-rel">rel</a></code>
 contains the <span>icon</span> <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">link types value</a>. It may have the following values: <ul> <li><span>any</span>, meaning that the icon can be scaled to any size as it is in a vectorial format, like <span>image/svg</span>.</li> <li>a white-space separated list of sizes, each in the format <span><em>&lt;width in pixels&gt;</em>x<em>&lt;height in pixels&gt;</em></span> or <span><em>&lt;width in pixels&gt;</em>X<em>&lt;height in pixels&gt;</em></span>. Each of these sizes must be contained in the resource.</li> </ul> <div class="note"><strong>Usage note:&nbsp;</strong> <p>&nbsp;</p> <ul> <li>Most icon format are only able to store one single icon; therefore most of the time the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element#attr-sizes">sizes</a></code>
 contains only one entry. Among the major browsers, only the Apple's ICNS format allows the storage of multiple icons, and this format is only supported in WebKit.</li> <li>Apple's iOS does not support this attribute, hence Apple's iPhone and iPad use special, non-standard <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">link types values</a> to define icon to be used as Web Clip or start-up placeholder: <span>apple-touch-icon</span> and <span>apple-touch-startup-icon</span>.</li> </ul> </div>]]></haxe_doc>
		</sizes>
		<target public="1">
			<c path="String"/>
			<haxe_doc>Defines the frame or window name that has the defined linking relationship or that will show the rendering of any linked resource.</haxe_doc>
		</target>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute is used to define the type of the content linked to. The value of the attribute should be a MIME type such as <strong>text/html</strong>, <strong>text/css</strong>, and so on. The common use of this attribute is to define the type of style sheet linked and the most common current value is <strong>text/css</strong>, which indicates a Cascading Style Sheet format.]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[The <em>HTML Link Element</em> (&lt;link&gt;) specifies relationships between the current document and other documents. Possible uses for this element include defining a relational framework for navigation and linking the document to a style sheet.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/link">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLinkElement"</e></m></meta>
	</class>
	<class path="js.html.Location" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Location.hx" extern="1">
		<ancestorOrigins public="1" set="null"><c path="js.html.DOMStringList"/></ancestorOrigins>
		<hash public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[the part of the URL that follows the # symbol, including the # symbol.<br> You can listen for the <a title="en/DOM/window.onhashchange" rel="internal" href="https://developer.mozilla.org/en/DOM/window.onhashchange">hashchange event</a> to get notified of changes to the hash in supporting browsers.]]></haxe_doc>
		</hash>
		<host public="1">
			<c path="String"/>
			<haxe_doc>the host name and port number.</haxe_doc>
		</host>
		<hostname public="1">
			<c path="String"/>
			<haxe_doc>the host name (without the port number or square brackets).</haxe_doc>
		</hostname>
		<href public="1">
			<c path="String"/>
			<haxe_doc>the entire URL.</haxe_doc>
		</href>
		<origin public="1" set="null"><c path="String"/></origin>
		<pathname public="1">
			<c path="String"/>
			<haxe_doc>the path (relative to the host).</haxe_doc>
		</pathname>
		<port public="1">
			<c path="String"/>
			<haxe_doc>the port number of the URL.</haxe_doc>
		</port>
		<protocol public="1">
			<c path="String"/>
			<haxe_doc>the protocol of the URL.</haxe_doc>
		</protocol>
		<search public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[the part of the URL that follows the&nbsp;? symbol, including the&nbsp;? symbol.]]></haxe_doc>
		</search>
		<assign public="1" set="method"><f a="url">
	<c path="String"/>
	<x path="Void"/>
</f></assign>
		<reload public="1" set="method"><f a=""><x path="Void"/></f></reload>
		<replace public="1" set="method"><f a="url">
	<c path="String"/>
	<x path="Void"/>
</f></replace>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<haxe_doc><![CDATA[Returns a <a href="#Location_object"> <code>Location</code> object</a>, which contains information about the URL of the document and provides methods for changing that URL. You can also assign to this property to load another URL.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window.location">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Location"</e></m></meta>
	</class>
	<class path="js.html.MapElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MapElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<areas public="1" set="null"><c path="js.html.HTMLCollection"/></areas>
		<name public="1"><c path="String"/></name>
		<haxe_doc><![CDATA[The HTML <em>Map</em> element (<code>&lt;map&gt;</code>) is used with <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area">&lt;area&gt;</a></code>
 elements to define a image map.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/map">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMapElement"</e></m></meta>
	</class>
	<class path="js.html.MarqueeElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MarqueeElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<behavior public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Sets how the text is scrolled within the marquee. Possible values are <code>scroll</code>, <code>slide</code> and <code>alternate</code>. If no value is specified, the default value is <code>scroll</code>.]]></haxe_doc>
		</behavior>
		<bgColor public="1"><c path="String"/></bgColor>
		<direction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Sets the direction of the scrolling within the marquee. Possible values are <code>left</code>, <code>right</code>, <code>up</code> and <code>down</code>. If no value is specified, the default value is <code>left</code>.]]></haxe_doc>
		</direction>
		<height public="1">
			<c path="String"/>
			<haxe_doc>Sets the height in pixels or percentage value.</haxe_doc>
		</height>
		<hspace public="1">
			<x path="Int"/>
			<haxe_doc>Sets the horizontal margin</haxe_doc>
		</hspace>
		<loop public="1">
			<x path="Int"/>
			<haxe_doc>Sets the number of times the marquee will scroll. If no value is specified, the default value is −1, which means the marquee will scroll continuously. Setter throws DOMException.</haxe_doc>
		</loop>
		<scrollAmount public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</scrollAmount>
		<scrollDelay public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</scrollDelay>
		<trueSpeed public="1"><x path="Bool"/></trueSpeed>
		<vspace public="1">
			<x path="Int"/>
			<haxe_doc>Sets the vertical margin in pixels or percentage value.</haxe_doc>
		</vspace>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Sets the width in pixels or percentage value.</haxe_doc>
		</width>
		<start public="1" set="method"><f a=""><x path="Void"/></f></start>
		<stop public="1" set="method"><f a=""><x path="Void"/></f></stop>
		<haxe_doc><![CDATA[Non-standard<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/marquee">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMarqueeElement"</e></m></meta>
	</class>
	<class path="js.html.MediaController" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MediaController.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<buffered public="1" set="null"><c path="js.html.TimeRanges"/></buffered>
		<currentTime public="1">
			<x path="Float"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</currentTime>
		<defaultPlaybackRate public="1"><x path="Float"/></defaultPlaybackRate>
		<duration public="1" set="null"><x path="Float"/></duration>
		<muted public="1"><x path="Bool"/></muted>
		<paused public="1" set="null"><x path="Bool"/></paused>
		<playbackRate public="1"><x path="Float"/></playbackRate>
		<played public="1" set="null"><c path="js.html.TimeRanges"/></played>
		<seekable public="1" set="null"><c path="js.html.TimeRanges"/></seekable>
		<volume public="1">
			<x path="Float"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</volume>
		<pause public="1" set="method"><f a=""><x path="Void"/></f></pause>
		<play public="1" set="method"><f a=""><x path="Void"/></f></play>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":native"><e>"MediaController"</e></m></meta>
	</class>
	<class path="js.html.MediaError" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MediaError.hx" extern="1">
		<MEDIA_ERR_ABORTED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></MEDIA_ERR_ABORTED>
		<MEDIA_ERR_DECODE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></MEDIA_ERR_DECODE>
		<MEDIA_ERR_ENCRYPTED public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></MEDIA_ERR_ENCRYPTED>
		<MEDIA_ERR_NETWORK public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></MEDIA_ERR_NETWORK>
		<MEDIA_ERR_SRC_NOT_SUPPORTED public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></MEDIA_ERR_SRC_NOT_SUPPORTED>
		<code public="1" set="null"><x path="Int"/></code>
		<meta><m n=":native"><e>"MediaError"</e></m></meta>
	</class>
	<class path="js.html.MediaList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MediaList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<mediaText public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</mediaText>
		<appendMedium public="1" set="method"><f a="newMedium">
	<c path="String"/>
	<x path="Void"/>
</f></appendMedium>
		<deleteMedium public="1" set="method"><f a="oldMedium">
	<c path="String"/>
	<x path="Void"/>
</f></deleteMedium>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<meta><m n=":native"><e>"MediaList"</e></m></meta>
	</class>
	<class path="js.html.MediaQueryList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MediaQueryList.hx" extern="1">
		<matches public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/document">document</a></code>
 currently matches the media query list; otherwise <code>false</code>. <strong>Read only.</strong>]]></haxe_doc>
		</matches>
		<media public="1" set="null">
			<c path="String"/>
			<haxe_doc>The serialized media query list.</haxe_doc>
		</media>
		<addListener public="1" set="method"><f a="listener">
	<t path="js.html.MediaQueryListListener"/>
	<x path="Void"/>
</f></addListener>
		<removeListener public="1" set="method"><f a="listener">
	<t path="js.html.MediaQueryListListener"/>
	<x path="Void"/>
</f></removeListener>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong>
<div>This page is not complete.</div>
</div>

<p></p>
<p>A <code>MediaQueryList</code> object maintains a list of <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/En/CSS/Media_queries">media queries</a> on a <code><a rel="custom" href="/api/js/html/Document">document</a></code>
, and handles sending notifications to listeners when the media queries on the document change.</p>
<p>This makes it possible to observe a document to detect when its media queries change, instead of polling the values periodically, if you need to programmatically detect changes to the values of media queries on a document.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/MediaQueryList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"MediaQueryList"</e></m></meta>
	</class>
	<typedef path="js.html.MediaQueryListListener" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MediaQueryListListener.hx">
		<f a="">
			<c path="js.html.MediaQueryList"/>
			<x path="Void"/>
		</f>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong>
<div>This page is not complete.</div>
</div>

<p></p>
<p>A <code>MediaQueryList</code> object maintains a list of <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/En/CSS/Media_queries">media queries</a> on a <code><a rel="custom" href="/api/js/html/Document">document</a></code>
, and handles sending notifications to listeners when the media queries on the document change.</p>
<p>This makes it possible to observe a document to detect when its media queries change, instead of polling the values periodically, if you need to programmatically detect changes to the values of media queries on a document.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/MediaQueryListListener">MDN</a>.]]></haxe_doc>
	</typedef>
	<class path="js.html.MemoryInfo" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MemoryInfo.hx" extern="1">
		<jsHeapSizeLimit public="1" set="null"><x path="Int"/></jsHeapSizeLimit>
		<totalJSHeapSize public="1" set="null"><x path="Int"/></totalJSHeapSize>
		<usedJSHeapSize public="1" set="null"><x path="Int"/></usedJSHeapSize>
		<meta><m n=":native"><e>"MemoryInfo"</e></m></meta>
	</class>
	<class path="js.html.MenuElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MenuElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1"><x path="Bool"/></compact>
		<haxe_doc><![CDATA[<p>The HTML <em>menu</em> element (<code>&lt;menu&gt;</code>) represents an unordered list of menu choices, or commands.</p>
<p>There is no limitation to the depth and nesting of lists defined with the <code><a rel="custom" href="/api/js/html/MenuElement">&lt;menu&gt;</a></code>
, <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 elements.</p>
<div class="note"><strong>Usage note: </strong> The <code><a rel="custom" href="/api/js/html/MenuElement">&lt;menu&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 both represent an unordered list of items. They differ in the way that the <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 element only contains items to display while the <code><a rel="custom" href="/api/js/html/MenuElement">&lt;menu&gt;</a></code>
 element contains interactive items, to act on.</div>
<div class="note"><strong>Note</strong>: This element was deprecated in HTML4, but reintroduced in HTML5.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/menu">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMenuElement"</e></m></meta>
	</class>
	<class path="js.html.MetaElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MetaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<content public="1">
			<c path="String"/>
			<haxe_doc>Gets or sets the value of meta-data property.</haxe_doc>
		</content>
		<httpEquiv public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Gets or sets the name of an HTTP&nbsp;response header to define for a document.]]></haxe_doc>
		</httpEquiv>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Gets or sets the name of a meta-data property to define for a document.</haxe_doc>
		</name>
		<scheme public="1">
			<c path="String"/>
			<haxe_doc>Gets or sets the name of a scheme used to interpret the value of a meta-data property.</haxe_doc>
		</scheme>
		<haxe_doc><![CDATA[The meta objects expose the <a class=" external" target="_blank" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-37041454" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-37041454">HTMLMetaElement</a> interface which contains descriptive metadata about a document.&nbsp; This object inherits all of the properties and methods described in the <a class="internal" rel="internal" href="/api/js/html/Element">element</a> section.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLMetaElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMetaElement"</e></m></meta>
	</class>
	<class path="js.html.MeterElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/MeterElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<high public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The lower numeric bound of the high end of the measured range. This must be less than the maximum value (<strong>max</strong> attribute), and it also must be greater than the low value and minimum value (<strong>low</strong> attribute and <strong>min</strong> attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the <strong>high</strong> value is equal to the maximum value. Setter throws DOMException.]]></haxe_doc>
		</high>
		<labels public="1" set="null"><c path="js.html.NodeList"/></labels>
		<low public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The upper numeric bound of the low end of the measured range. This must be greater than the minimum value (<strong>min</strong> attribute), and it also must be less than the high value and maximum value (<strong>high</strong> attribute and <strong>max</strong> attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the <strong>low</strong> value is equal to the minimum value. Setter throws DOMException.]]></haxe_doc>
		</low>
		<max public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The upper numeric bound of the measured range. This must be greater than the minimum value (<strong>min</strong> attribute), if specified. If unspecified, the maximum value is 1. Setter throws DOMException.]]></haxe_doc>
		</max>
		<min public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The lower numeric bound of the measured range. This must be less than the maximum value (<strong>max</strong> attribute), if specified. If unspecified, the minimum value is 0. Setter throws DOMException.]]></haxe_doc>
		</min>
		<optimum public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[This attribute indicates the optimal numeric value. It must be within the range (as defined by the <strong>min</strong> attribute and <strong>max</strong> attribute). When used with the <strong>low</strong> attribute and <strong>high</strong> attribute, it gives an indication where along the range is considered preferable. For example, if it is between the <strong>min</strong> attribute and the <strong>low</strong> attribute, then the lower range is considered preferred. Setter throws DOMException.]]></haxe_doc>
		</optimum>
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The current numeric value. This must be between the minimum and maximum values (<strong>min</strong> attribute and <strong>max</strong> attribute) if they are specified. If unspecified or malformed, the value is 0. If specified, but not within the range given by the <strong>min</strong> attribute and <strong>max</strong> attribute, the value is equal to the nearest end of the range. Setter throws DOMException.]]></haxe_doc>
		</value>
		<haxe_doc><![CDATA[<p>The HTML <em>meter</em> element (<code>&lt;meter&gt;</code>) represents either a scalar value within a known range or a fractional value.</p>
<div class="note"><strong>Usage note: </strong>Unless the <strong>value</strong> attribute is between 0 and 1 (inclusive), the <strong>min</strong> attribute and <strong>max</strong> attribute should define the range so that the <strong>value</strong> attribute's value is within it.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/meter">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMeterElement"</e></m></meta>
	</class>
	<class path="js.html.ModElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ModElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cite public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/del#attr-cite">cite</a></code>
 HTML attribute, containing a URI of a resource explaining the change.]]></haxe_doc>
		</cite>
		<dateTime public="1"><c path="String"/></dateTime>
		<haxe_doc><![CDATA[DOM mod (modification)&nbsp;objects expose the <a title="http://www.w3.org/TR/html5/edits.html#htmlmodelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/edits.html#htmlmodelement" target="_blank">HTMLModElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-79359609" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-79359609" target="_blank"><code>HTMLModElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating modification elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLModElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLModElement"</e></m></meta>
	</class>
	<class path="js.html.NamedNodeMap" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/NamedNodeMap.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<getNamedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></getNamedItem>
		<getNamedItemNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Node"/>
</f></getNamedItemNS>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<removeNamedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></removeNamedItem>
		<removeNamedItemNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Node"/>
</f></removeNamedItemNS>
		<setNamedItem public="1" set="method"><f a="node">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></setNamedItem>
		<setNamedItemNS public="1" set="method"><f a="node">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></setNamedItemNS>
		<haxe_doc><![CDATA[A collection of nodes returned by <a title="En/DOM/Element.attributes" class="internal" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.attributes"><code>Element.attributes</code></a> (also potentially for <code><a title="En/DOM/DocumentType.entities" rel="internal" href="https://developer.mozilla.org/En/DOM/DocumentType.entities" class="new internal">DocumentType.entities</a></code>, <code><a title="En/DOM/DocumentType.notations" rel="internal" href="https://developer.mozilla.org/En/DOM/DocumentType.notations" class="new internal">DocumentType.notations</a></code>). <code>NamedNodeMap</code>s are not in any particular order (unlike <code><a title="En/DOM/NodeList" class="internal" rel="internal" href="/api/js/html/NodeList">NodeList</a></code>), although they may be accessed by an index as in an array (they may also be accessed with the <code>item</code>() method). A NamedNodeMap object are live and will thus be auto-updated if changes are made to their contents internally or elsewhere.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/NamedNodeMap">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"NamedNodeMap"</e></m></meta>
	</class>
	<class path="js.html.Navigator" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Navigator.hx" extern="1">
		<appCodeName public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the internal "code" name of the current browser. Do not rely on this property to return the correct value.</haxe_doc>
		</appCodeName>
		<appName public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the official name of the browser. Do not rely on this property to return the correct value.</haxe_doc>
		</appName>
		<appVersion public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the version of the browser as a string. Do not rely on this property to return the correct value.</haxe_doc>
		</appVersion>
		<battery public="1" set="null"><c path="js.html.BatteryManager"/></battery>
		<cookieEnabled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a boolean indicating whether cookies are enabled in the browser or not.</haxe_doc>
		</cookieEnabled>
		<geolocation public="1" set="null"><c path="js.html.Geolocation"/></geolocation>
		<language public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a string representing the language version of the browser.</haxe_doc>
		</language>
		<mimeTypes public="1" set="null">
			<c path="js.html.DOMMimeTypeArray"/>
			<haxe_doc>Returns a list of the MIME types supported by the browser.</haxe_doc>
		</mimeTypes>
		<onLine public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a boolean indicating whether the browser is working online.</haxe_doc>
		</onLine>
		<platform public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a string representing the platform of the browser.</haxe_doc>
		</platform>
		<plugins public="1" set="null">
			<c path="js.html.DOMPluginArray"/>
			<haxe_doc>Returns an array of the plugins installed in the browser.</haxe_doc>
		</plugins>
		<product public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the product name of the current browser. (e.g. "Gecko")</haxe_doc>
		</product>
		<productSub public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the build number of the current browser (e.g. "20060909")</haxe_doc>
		</productSub>
		<userAgent public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the user agent string for the current browser.</haxe_doc>
		</userAgent>
		<vendor public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the vendor name of the current browser (e.g. "Netscape6")</haxe_doc>
		</vendor>
		<vendorSub public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the vendor version number (e.g. "6.1")</haxe_doc>
		</vendorSub>
		<getGamepads public="1" set="method"><f a=""><c path="js.html.GamepadList"/></f></getGamepads>
		<getStorageUpdates public="1" set="method"><f a=""><x path="Void"/></f></getStorageUpdates>
		<getUserMedia public="1" set="method"><f a="options:successCallback:?errorCallback">
	<d/>
	<t path="js.html.rtc.NavigatorUserMediaSuccessCallback"/>
	<t path="js.html.rtc.NavigatorUserMediaErrorCallback"/>
	<x path="Void"/>
</f></getUserMedia>
		<javaEnabled public="1" set="method"><f a=""><x path="Bool"/></f></javaEnabled>
		<haxe_doc><![CDATA[Returns a reference to the navigator object, which can be queried for information about the application running the script.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window.navigator">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Navigator"</e></m></meta>
	</class>
	<class path="js.html.NodeFilter" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/NodeFilter.hx" extern="1">
		<FILTER_ACCEPT public="1" get="inline" set="null" line="31" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Value returned by the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/NodeFilter.acceptNode" class="new">NodeFilter.acceptNode()</a></code>
 method when a node should be accepted.]]></haxe_doc>
		</FILTER_ACCEPT>
		<FILTER_REJECT public="1" get="inline" set="null" line="37" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Value to be returned by the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/NodeFilter.acceptNode" class="new">NodeFilter.acceptNode()</a></code>
 method when a node should be rejected. The children of rejected nodes are not visited by the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 object; this value is treated as "skip this node and all its children".]]></haxe_doc>
		</FILTER_REJECT>
		<FILTER_SKIP public="1" get="inline" set="null" line="43" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Value to be returned by <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/NodeFilter.acceptNode" class="new">NodeFilter.acceptNode()</a></code>
 for nodes to be skipped by the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 object. The children of skipped nodes are still considered. This is treated as "skip this node but not its children".]]></haxe_doc>
		</FILTER_SKIP>
		<SHOW_ALL public="1" get="inline" set="null" line="46" static="1">
			<x path="Int"/>
			<haxe_doc>Shows all nodes.</haxe_doc>
		</SHOW_ALL>
		<SHOW_ATTRIBUTE public="1" get="inline" set="null" line="53" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows attribute <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Attr">Attr</a></code>
 nodes. This is meaningful only when creating a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 with an <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Attr">Attr</a></code>
 node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.]]></haxe_doc>
		</SHOW_ATTRIBUTE>
		<SHOW_CDATA_SECTION public="1" get="inline" set="null" line="57" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/CDATASection">CDATASection</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_CDATA_SECTION>
		<SHOW_COMMENT public="1" get="inline" set="null" line="61" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Comment">Comment</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_COMMENT>
		<SHOW_DOCUMENT public="1" get="inline" set="null" line="65" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_DOCUMENT>
		<SHOW_DOCUMENT_FRAGMENT public="1" get="inline" set="null" line="69" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DocumentFragment">DocumentFragment</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_DOCUMENT_FRAGMENT>
		<SHOW_DOCUMENT_TYPE public="1" get="inline" set="null" line="73" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DocumentType">DocumentType</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_DOCUMENT_TYPE>
		<SHOW_ELEMENT public="1" get="inline" set="null" line="77" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Element">Element</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_ELEMENT>
		<SHOW_ENTITY public="1" get="inline" set="null" line="85" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Entity">Entity</a></code>
&nbsp;nodes. This is meaningful only when creating a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 with an <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Entity">Entity</a></code>
 node as its root; in this case, it means that the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Entity">Entity</a></code>
 node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.]]></haxe_doc>
		</SHOW_ENTITY>
		<SHOW_ENTITY_REFERENCE public="1" get="inline" set="null" line="89" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/EntityReference">EntityReference</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_ENTITY_REFERENCE>
		<SHOW_NOTATION public="1" get="inline" set="null" line="97" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Notation">Notation</a></code>
 nodes. This is meaningful only when creating a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 with a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Notation">Notation</a></code>
 node as its root; in this case, it means that the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Notation">Notation</a></code>
 node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.]]></haxe_doc>
		</SHOW_NOTATION>
		<SHOW_PROCESSING_INSTRUCTION public="1" get="inline" set="null" line="101" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/ProcessingInstruction">ProcessingInstruction</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_PROCESSING_INSTRUCTION>
		<SHOW_TEXT public="1" get="inline" set="null" line="105" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Text">Text</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_TEXT>
		<acceptNode public="1" set="method"><f a="n">
	<c path="js.html.Node"/>
	<x path="Int"/>
</f></acceptNode>
		<meta><m n=":native"><e>"NodeFilter"</e></m></meta>
	</class>
	<class path="js.html.NodeIterator" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/NodeIterator.hx" extern="1">
		<expandEntityReferences public="1" set="null"><x path="Bool"/></expandEntityReferences>
		<filter public="1" set="null"><c path="js.html.NodeFilter"/></filter>
		<pointerBeforeReferenceNode public="1" set="null"><x path="Bool"/></pointerBeforeReferenceNode>
		<referenceNode public="1" set="null"><c path="js.html.Node"/></referenceNode>
		<root public="1" set="null"><c path="js.html.Node"/></root>
		<whatToShow public="1" set="null"><x path="Int"/></whatToShow>
		<detach public="1" set="method"><f a=""><x path="Void"/></f></detach>
		<nextNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></nextNode>
		<previousNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></previousNode>
		<meta><m n=":native"><e>"NodeIterator"</e></m></meta>
	</class>
	<class path="js.html.NodeList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/NodeList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the number of elements in the NodeList.&nbsp;]]></haxe_doc>
		</length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<haxe_doc><![CDATA[NodeList objects are collections of nodes returned by <a title="document.getElementsByTagName" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByTagName"><code>getElementsByTagName</code></a>, <a title="document.getElementsByTagNameNS" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByTagNameNS"><code>getElementsByTagNameNS</code></a>, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node.childNodes">Node.childNodes</a></code>
, <a title="document.querySelectorAll" rel="internal" href="https://developer.mozilla.org/En/DOM/Document.querySelectorAll">querySelectorAll</a>, <a title="document.getElementsByClassName" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByClassName"><code>getElementsByClassName</code></a>, etc.NodeList objects are collections of nodes returned by <a title="document.getElementsByTagName" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByTagName"><code>getElementsByTagName</code></a>, <a title="document.getElementsByTagNameNS" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByTagNameNS"><code>getElementsByTagNameNS</code></a>, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node.childNodes">Node.childNodes</a></code>
, <a title="document.querySelectorAll" rel="internal" href="https://developer.mozilla.org/En/DOM/Document.querySelectorAll">querySelectorAll</a>, <a title="document.getElementsByClassName" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByClassName"><code>getElementsByClassName</code></a>, etc.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/En/DOM/NodeList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"NodeList"</e></m></meta>
	</class>
	<class path="js.html.Notification" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Notification.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<requestPermission public="1" set="method" static="1"><f a="callback_">
	<t path="js.html.NotificationPermissionCallback"/>
	<x path="Void"/>
</f></requestPermission>
		<dir public="1"><c path="String"/></dir>
		<onclick public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[&nbsp;A function to call when the notification is clicked.]]></haxe_doc>
		</onclick>
		<onclose public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[&nbsp;A function to call when the notification is dismissed.]]></haxe_doc>
		</onclose>
		<ondisplay public="1"><t path="js.html.EventListener"/></ondisplay>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onshow public="1"><t path="js.html.EventListener"/></onshow>
		<permission public="1" set="null"><c path="String"/></permission>
		<replaceId public="1"><c path="String"/></replaceId>
		<tag public="1"><c path="String"/></tag>
		<cancel public="1" set="method"><f a=""><x path="Void"/></f></cancel>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<show public="1" set="method"><f a=""><x path="Void"/></f></show>
		<new public="1" set="method"><f a="title:options">
	<c path="String"/>
	<d/>
	<x path="Void"/>
</f></new>
		<haxe_doc><![CDATA[<div class="geckoMinversionHeaderTemplate"><p>Mobile Only in Gecko 2.0</p><p>Available only in Firefox Mobile as of Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
</p></div>

<div><p>Non-standard</p></div><p></p>
<p>The notification object, which you create using the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/navigator.mozNotification">navigator.mozNotification</a></code>
&nbsp;object's <code>createNotification()</code>&nbsp;method, is used to configure and display desktop notifications to the user.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/notification">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Notification"</e></m></meta>
	</class>
	<class path="js.html.NotificationCenter" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/NotificationCenter.hx" extern="1">
		<checkPermission public="1" set="method"><f a=""><x path="Int"/></f></checkPermission>
		<createHTMLNotification public="1" set="method"><f a="url">
	<c path="String"/>
	<c path="js.html.Notification"/>
</f></createHTMLNotification>
		<createNotification public="1" set="method"><f a="iconUrl:title:body">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Notification"/>
</f></createNotification>
		<requestPermission public="1" set="method"><f a="callback_">
	<t path="js.html.VoidCallback"/>
	<x path="Void"/>
</f></requestPermission>
		<meta><m n=":native"><e>"NotificationCenter"</e></m></meta>
	</class>
	<typedef path="js.html.NotificationPermissionCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/NotificationPermissionCallback.hx"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.OListElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/OListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn't work in all browsers. <div class="note"><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ol">&lt;ol&gt;</a></code>
 element should be styled using <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a>. To give a similar effect than the <span>compact</span> attribute, the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/line-height">line-height</a></code>
 can be used with a value of <span>80%</span>.</div>]]></haxe_doc>
		</compact>
		<reversed public="1">
			<x path="Bool"/>
			<haxe_doc>This Boolean attribute specifies that the items of the item are specified in the reverse order, i.e. that the least important one is listed first. Browsers, by default, numbered the items in the reverse order too.</haxe_doc>
		</reversed>
		<start public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[This integer attribute specifies the start value for numbering the individual list items. Although the ordering type of list elements might be Roman numerals, such as XXXI, or letters, the value of start is always represented as a number. To start numbering elements from the letter "C", use <code>&lt;ol start="3"&gt;</code>. <div class="note"><strong>Note</strong>: that attribute was deprecated in HTML4, but reintroduced in HTML5.</div>]]></haxe_doc>
		</start>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Indicates the numbering type: <ul> <li><span><code>'a'</code></span> indicates lowercase letters,</li> <li><span id="1284454877507S">&nbsp;</span><span><code>'<span id="1284454878023E">&nbsp;</span>A'</code></span> indicates uppercase letters,</li> <li><span><code>'i'</code></span> indicates lowercase Roman numerals,</li> <li><span><code>'I'</code></span> indicates uppercase Roman numerals,</li> <li>and <span><code>'1'</code></span> indicates numbers.</li> </ul> <p>The type set is used for the entire list unless a different 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/li#attr-type">type</a></code>
 attribute is used within an enclosed <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/li">&lt;li&gt;</a></code>
 element.</p> <div class="note"><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: use the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property instead.</div>]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[<p>The HTML <em>ordered list</em> element (<code>&lt;ol&gt;</code>) represents an ordered list of items. Typically, ordered-list items are displayed with a preceding numbering, which can be of any form, like numerals, letters or Romans numerals or even simple bullets. This numbered style is not defined in the HTML description of the page, but in its associated CSS, using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property.</p>
<p>There is no limitation to the depth and imbrication of lists defined with the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 elements.</p>
<div class="note"><strong>Usage note: </strong> The <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 both represent a list of items. They differ in the way that, with the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 element, the order is meaningful. As a rule of thumb to determine which one to use, try changing the order of the list items; if the meaning is changed, the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 element should be used, else the <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 is adequate.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/ol">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOListElement"</e></m></meta>
	</class>
	<class path="js.html.ObjectElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ObjectElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Alignment of the object relative to its context. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</align>
		<archive public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-archive">archive</a></code>
&nbsp;HTML attribute, containing a list of archives for resources for this object. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</archive>
		<border public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-border">border</a></code>
&nbsp;HTML attribute, specifying the width of a border around the object. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</border>
		<code public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The name of an applet class file, containing either the applet's subclass, or the path to get to the class, including the class file itself. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</code>
		<codeBase public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-codebase">codebase</a></code>
&nbsp;HTML attribute, specifying the base path to use to resolve relative URIs. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</codeBase>
		<codeType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-codetype">codetype</a></code>
&nbsp;HTML attribute, specifying the content type of the data. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</codeType>
		<contentDocument public="1" set="null">
			<c path="js.html.Document"/>
			<haxe_doc>The active document of the object element's nested browsing context, if any; otherwise null.</haxe_doc>
		</contentDocument>
		<data public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-data">data</a></code>
 HTML&nbsp;attribute, specifying the address of a resource's data.]]></haxe_doc>
		</data>
		<declare public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-declare">declare</a></code>
 HTML&nbsp;attribute, indicating that this is a declaration, not an instantiation, of the object. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</declare>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc>The object element's form owner, or null if there isn't one.</haxe_doc>
		</form>
		<height public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the {{htmlattrxref("height", "object)}}&nbsp;HTML attribute, specifying the displayed height of the resource in CSS pixels.]]></haxe_doc>
		</height>
		<hspace public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Horizontal space in pixels around the control. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</hspace>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-name">name</a></code>
&nbsp;HTML attribute, specifying the name of the object (
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>, or of a browsing context (
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</name>
		<standby public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-standby">standby</a></code>
 HTML&nbsp;attribute, specifying a message to display while the object loads. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</standby>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the {{htmlattrxref("type", "object)}}&nbsp;HTML attribute, specifying the MIME type of the resource.]]></haxe_doc>
		</type>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the {{htmlattrxref("usemap", "object)}}&nbsp;HTML attribute, specifying a {{HTMLElement("map")}} element to use.]]></haxe_doc>
		</useMap>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<vspace public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Horizontal space in pixels around the control. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</vspace>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-width">width</a></code>
&nbsp;HTML attribute, specifying the displayed width of the resource in CSS pixels.]]></haxe_doc>
		</width>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates whether the element is a candidate for constraint validation. Always false for <code>object</code> objects.]]></haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.svg.Document"/></f></getSVGDocument>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[DOM <code>Object</code> objects expose the <a title="http://dev.w3.org/html5/spec/the-iframe-element.html#htmlobjectelement" class=" external" rel="external nofollow" href="http://dev.w3.org/html5/spec/the-iframe-element.html#htmlobjectelement" target="_blank">HTMLObjectElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html#ID-9893177" title="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html#ID-9893177" target="_blank">HTMLObjectElement</a>) interface, which provides special properties and methods (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of Object element, representing external resources.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLObjectElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLObjectElement"</e></m></meta>
	</class>
	<class path="js.html.OptGroupElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/OptGroupElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>If this Boolean attribute is set, none of the items in this option group is selectable. Often browsers grey out such control and it won't received any browsing events, like mouse clicks or focus-related ones.</haxe_doc>
		</disabled>
		<label public="1">
			<c path="String"/>
			<haxe_doc>The name of the group of options, which the browser can use when labeling the options in the user interface. This attribute is mandatory if this element is used.</haxe_doc>
		</label>
		<haxe_doc><![CDATA[In a web form, the HTML <em>optgroup</em> element (&lt;optgroup&gt;) creates a grouping of options within a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select">&lt;select&gt;</a></code>
 element.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/optgroup">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptGroupElement"</e></m></meta>
	</class>
	<class path="js.html.OptionElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/OptionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<defaultSelected public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option#attr-selected">selected</a></code>
 HTML attribute. which indicates whether the option is selected by default.]]></haxe_doc>
		</defaultSelected>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option#attr-disabled">disabled</a></code>
 HTML&nbsp;attribute, which indicates that the option is unavailable to be selected. An option can also be disabled if it is a child of an <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/optgroup">&lt;optgroup&gt;</a></code>
 element that is disabled.]]></haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[If the option is a descendent of a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select">&lt;select&gt;</a></code>
 element, then this property has the same value as the <code>form</code> property of the corresponding {{DomXref("HTMLSelectElement") object; otherwise, it is null.]]></haxe_doc>
		</form>
		<index public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The position of the option within the list of options it belongs to, in tree-order. If the option is not part of a list of options, the value is 0.</haxe_doc>
		</index>
		<label public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option#attr-label">label</a></code>
 HTML attribute, which provides a label for the option. If this attribute isn't specifically set, reading it returns the element's text content.]]></haxe_doc>
		</label>
		<selected public="1">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the option is selected.</haxe_doc>
		</selected>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Contains the text content of the element. Setter throws DOMException.</haxe_doc>
		</text>
		<value public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option#attr-value">value</a></code>
 HTML attribute, if it exists; otherwise reflects value of the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/textContent" class="new">textContent</a></code>
&nbsp;IDL&nbsp;attribute.]]></haxe_doc>
		</value>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc><![CDATA[<p>DOM&nbsp;<em>option</em> elements elements share all of the properties and methods of other HTML elements described in the <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> section. They also have the specialized interface <a title="http://dev.w3.org/html5/spec/the-button-element.html#htmloptionelement" class=" external" rel="external" href="http://dev.w3.org/html5/spec/the-button-element.html#htmloptionelement" target="_blank">HTMLOptionElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class="external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-70901257" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-70901257" target="_blank">HTMLOptionElement</a>).</p>
<p>No methods are defined on this interface.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLOptionElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptionElement"</e></m></meta>
	</class>
	<class path="js.html.OutputElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/OutputElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<defaultValue public="1">
			<c path="String"/>
			<haxe_doc>The default value of the element, initially the empty string.</haxe_doc>
		</defaultValue>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[Indicates the control's form owner, reflecting the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/output#attr-form">form</a></code>
&nbsp;HTML&nbsp;attribute if it is defined.]]></haxe_doc>
		</form>
		<htmlFor public="1">
			<c path="js.html.DOMSettableTokenList"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/output#attr-for">for</a></code>
 HTML attribute, containing a list of IDs of other elements in the same document that contribute to (or otherwise affect) the calculated <strong>value</strong>.]]></haxe_doc>
		</htmlFor>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc>A list of label elements associated with this output element.</haxe_doc>
		</labels>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/output#attr-name">name</a></code>
 HTML attribute, containing the name for the control that is submitted with form data.]]></haxe_doc>
		</name>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Must be the string <code>output</code>.]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The value of the contents of the elements. Behaves like the <strong><a title="En/DOM/Node.textContent" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.textContent">textContent</a></strong> property.]]></haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<p>      in Gecko 2.0. Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation. (See <a rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=604673" class="external" title="">
bug 604673</a>
.)</p> <p>The standard behavior is to always return false because <code>output</code> objects are never candidates for constraint validation.</p>]]></haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<meta><m n=":native"><e>"HTMLOutputElement"</e></m></meta>
	</class>
	<class path="js.html.PagePopupController" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/PagePopupController.hx" extern="1">
		<formatMonth public="1" set="method"><f a="year:zeroBaseMonth">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></formatMonth>
		<localizeNumberString public="1" set="method"><f a="numberString">
	<c path="String"/>
	<c path="String"/>
</f></localizeNumberString>
		<setValueAndClosePopup public="1" set="method"><f a="numberValue:stringValue">
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></setValueAndClosePopup>
		<meta><m n=":native"><e>"PagePopupController"</e></m></meta>
	</class>
	<class path="js.html.ParagraphElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ParagraphElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Enumerated attribute indicating alignment of the element's contents with respect to the surrounding context.</haxe_doc>
		</align>
		<haxe_doc><![CDATA[DOM p (paragraph) objects expose the <a title="http://www.w3.org/TR/html5/grouping-content.html#htmlparagraphelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/grouping-content.html#htmlparagraphelement" target="_blank">HTMLParagraphElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-84675076" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-84675076" target="_blank"><code>HTMLParagraphElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating div elements. In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/HTMLParagraphElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLParagraphElement"</e></m></meta>
	</class>
	<class path="js.html.ParamElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ParamElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Name of the parameter.</haxe_doc>
		</name>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Only used if the <code>valuetype</code> is set to "ref". Specifies the type of values found at the URI specified by value.]]></haxe_doc>
		</type>
		<value public="1">
			<c path="String"/>
			<haxe_doc>Value of the parameter.</haxe_doc>
		</value>
		<valueType public="1"><c path="String"/></valueType>
		<haxe_doc><![CDATA[<strong>Parameter </strong>element which defines parameters for <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object">&lt;object&gt;</a></code>
.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/param">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLParamElement"</e></m></meta>
	</class>
	<class path="js.html.Performance" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Performance.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<memory public="1" set="null"><c path="js.html.MemoryInfo"/></memory>
		<navigation public="1" set="null"><c path="js.html.PerformanceNavigation"/></navigation>
		<timing public="1" set="null"><c path="js.html.PerformanceTiming"/></timing>
		<now public="1" set="method"><f a=""><x path="Float"/></f></now>
		<haxe_doc><![CDATA[The articles linked to from here will help you improve performance, whether you're developing core Mozilla code or an add-on.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Performance">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Performance"</e></m></meta>
	</class>
	<class path="js.html.PerformanceNavigation" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/PerformanceNavigation.hx" extern="1">
		<TYPE_BACK_FORWARD public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></TYPE_BACK_FORWARD>
		<TYPE_NAVIGATE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></TYPE_NAVIGATE>
		<TYPE_RELOAD public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></TYPE_RELOAD>
		<TYPE_RESERVED public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></TYPE_RESERVED>
		<redirectCount public="1" set="null"><x path="Int"/></redirectCount>
		<type public="1" set="null"><x path="Int"/></type>
		<meta><m n=":native"><e>"PerformanceNavigation"</e></m></meta>
	</class>
	<class path="js.html.PerformanceTiming" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/PerformanceTiming.hx" extern="1">
		<connectEnd public="1" set="null"><x path="Int"/></connectEnd>
		<connectStart public="1" set="null"><x path="Int"/></connectStart>
		<domComplete public="1" set="null"><x path="Int"/></domComplete>
		<domContentLoadedEventEnd public="1" set="null"><x path="Int"/></domContentLoadedEventEnd>
		<domContentLoadedEventStart public="1" set="null"><x path="Int"/></domContentLoadedEventStart>
		<domInteractive public="1" set="null"><x path="Int"/></domInteractive>
		<domLoading public="1" set="null"><x path="Int"/></domLoading>
		<domainLookupEnd public="1" set="null"><x path="Int"/></domainLookupEnd>
		<domainLookupStart public="1" set="null"><x path="Int"/></domainLookupStart>
		<fetchStart public="1" set="null"><x path="Int"/></fetchStart>
		<loadEventEnd public="1" set="null"><x path="Int"/></loadEventEnd>
		<loadEventStart public="1" set="null"><x path="Int"/></loadEventStart>
		<navigationStart public="1" set="null"><x path="Int"/></navigationStart>
		<redirectEnd public="1" set="null"><x path="Int"/></redirectEnd>
		<redirectStart public="1" set="null"><x path="Int"/></redirectStart>
		<requestStart public="1" set="null"><x path="Int"/></requestStart>
		<responseEnd public="1" set="null"><x path="Int"/></responseEnd>
		<responseStart public="1" set="null"><x path="Int"/></responseStart>
		<secureConnectionStart public="1" set="null"><x path="Int"/></secureConnectionStart>
		<unloadEventEnd public="1" set="null"><x path="Int"/></unloadEventEnd>
		<unloadEventStart public="1" set="null"><x path="Int"/></unloadEventStart>
		<meta><m n=":native"><e>"PerformanceTiming"</e></m></meta>
	</class>
	<class path="js.html.Point" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Point.hx" extern="1">
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<new public="1" set="method">
			<f a="?arg0:?arg1">
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Creates a new <code>Point</code> object.</p>
<pre>let p = new Point(x, y);
</pre>
<p>The new point, <code>p</code>, has the specified X&nbsp;and Y&nbsp;coordinates.</p>]]></haxe_doc>
		</new>
		<haxe_doc><![CDATA[The <code>Point</code> class offers methods for performing common geometry operations on two dimensional points.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_code_modules/Geometry.jsm/Point">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Point"</e></m></meta>
	</class>
	<typedef path="js.html.PositionCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/PositionCallback.hx"><f a="">
	<c path="js.html.Geoposition"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.PositionError" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/PositionError.hx" extern="1">
		<PERMISSION_DENIED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></PERMISSION_DENIED>
		<POSITION_UNAVAILABLE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></POSITION_UNAVAILABLE>
		<TIMEOUT public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></TIMEOUT>
		<code public="1" set="null"><x path="Int"/></code>
		<message public="1" set="null"><c path="String"/></message>
		<meta><m n=":native"><e>"PositionError"</e></m></meta>
	</class>
	<typedef path="js.html.PositionErrorCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/PositionErrorCallback.hx"><f a="">
	<c path="js.html.PositionError"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.PreElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/PreElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<width public="1"><x path="Int"/></width>
		<wrap public="1"><x path="Bool"/></wrap>
		<haxe_doc><![CDATA[This element represents preformatted text. Text within this element is typically displayed in a non-proportional font exactly as it is laid out in the file. Whitespaces inside this element are displayed as typed.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/pre">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLPreElement"</e></m></meta>
	</class>
	<class path="js.html.ProcessingInstruction" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ProcessingInstruction.hx" extern="1">
		<extends path="js.html.Node"/>
		<data public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</data>
		<sheet public="1" set="null"><c path="js.html.StyleSheet"/></sheet>
		<target public="1" set="null"><c path="String"/></target>
		<haxe_doc><![CDATA[<p>A processing instruction provides an opportunity for application-specific instructions to be embedded within XML and which can be ignored by XML processors which do not support processing their instructions (outside of their having a place in the DOM).</p>
<p>A Processing instruction is distinct from a <a title="en/XML/XML_Declaration" rel="internal" href="https://developer.mozilla.org/en/XML/XML_Declaration" class="new ">XML Declaration</a> which is used for other information about the document such as encoding and which appear (if it does) as the first item in the document.</p>
<p>User-defined processing instructions cannot begin with 'xml', as these are reserved (e.g., as used in &lt;?<a title="en/XML/xml-stylesheet" rel="internal" href="https://developer.mozilla.org/en/XML/xml-stylesheet" class="new ">xml-stylesheet</a>&nbsp;?&gt;).</p>
<p>Also inherits methods and properties from <a class="internal" title="En/DOM/Node" rel="internal" href="/api/js/html/Node"><code>Node</code></a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/ProcessingInstruction">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ProcessingInstruction"</e></m></meta>
	</class>
	<class path="js.html.ProgressElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ProgressElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<labels public="1" set="null"><c path="js.html.NodeList"/></labels>
		<max public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[This attribute describes how much work the task indicated by the <code>progress</code> element requires. Setter throws DOMException.]]></haxe_doc>
		</max>
		<position public="1" set="null"><x path="Float"/></position>
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<dl><dd>This attribute specifies how much of the task that has been completed. If there is no <code>value</code> attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take.</dd>
</dl>
<p>You can use the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/orient">orient</a></code>
 property to specify whether the progress bar should be rendered horizontally (the default) or vertically. The <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/%3Aindeterminate">:indeterminate</a></code>
 pseudo-class can be used to match against indeterminate progress bars.</p> Setter throws DOMException.]]></haxe_doc>
		</value>
		<haxe_doc><![CDATA[The HTML <em>progress</em> (<code>&lt;progress&gt;</code>) element is used to view the completion progress of a task. While the specifics of how it's displayed is left up to the browser developer, it's typically displayed as a progress bar.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/progress">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLProgressElement"</e></m></meta>
	</class>
	<class path="js.html.QuoteElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/QuoteElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cite public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/blockquote#attr-cite">cite</a></code>
 HTML attribute, containing a URL for the source of the quotation.]]></haxe_doc>
		</cite>
		<haxe_doc><![CDATA[DOM quote objects expose the <a class=" external" title="http://www.w3.org/TR/html5/grouping-content.html#htmlquoteelement" rel="external" href="http://www.w3.org/TR/html5/grouping-content.html#htmlquoteelement" target="_blank">HTMLQuoteElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-70319763" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-70319763" target="_blank"><code>HTMLQuoteElement</code></a>) interface, which provides special properties&nbsp; (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating quote elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLQuoteElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLQuoteElement"</e></m></meta>
	</class>
	<class path="js.html.Range" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Range.hx" extern="1">
		<END_TO_END public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></END_TO_END>
		<END_TO_START public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></END_TO_START>
		<NODE_AFTER public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></NODE_AFTER>
		<NODE_BEFORE public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></NODE_BEFORE>
		<NODE_BEFORE_AND_AFTER public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></NODE_BEFORE_AND_AFTER>
		<NODE_INSIDE public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></NODE_INSIDE>
		<START_TO_END public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></START_TO_END>
		<START_TO_START public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></START_TO_START>
		<collapsed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Returns a&nbsp;<code>boolean</code>&nbsp;indicating whether the range's start and end points are at the same position. Getter throws DOMException.]]></haxe_doc>
		</collapsed>
		<commonAncestorContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc><![CDATA[Returns the deepest&nbsp;<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node">Node</a></code>
&nbsp;that contains the startContainer and endContainer Nodes. Getter throws DOMException.]]></haxe_doc>
		</commonAncestorContainer>
		<endContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc><![CDATA[Returns the&nbsp;<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node">Node</a></code>
&nbsp;within which the Range ends. Getter throws DOMException.]]></haxe_doc>
		</endContainer>
		<endOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a number representing where in the endContainer the Range ends. Getter throws DOMException.</haxe_doc>
		</endOffset>
		<startContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc><![CDATA[Returns the&nbsp;<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node">Node</a></code>
&nbsp;within which the Range starts. Getter throws DOMException.]]></haxe_doc>
		</startContainer>
		<startOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a number representing where in the startContainer the Range starts. Getter throws DOMException.</haxe_doc>
		</startOffset>
		<cloneContents public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></cloneContents>
		<cloneRange public="1" set="method"><f a=""><c path="js.html.Range"/></f></cloneRange>
		<collapse public="1" set="method"><f a="toStart">
	<x path="Bool"/>
	<x path="Void"/>
</f></collapse>
		<compareBoundaryPoints public="1" set="method"><f a="how:sourceRange">
	<x path="Int"/>
	<c path="js.html.Range"/>
	<x path="Int"/>
</f></compareBoundaryPoints>
		<compareNode public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Int"/>
</f></compareNode>
		<comparePoint public="1" set="method"><f a="refNode:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Int"/>
</f></comparePoint>
		<createContextualFragment public="1" set="method"><f a="html">
	<c path="String"/>
	<c path="js.html.DocumentFragment"/>
</f></createContextualFragment>
		<deleteContents public="1" set="method"><f a=""><x path="Void"/></f></deleteContents>
		<detach public="1" set="method"><f a=""><x path="Void"/></f></detach>
		<expand public="1" set="method"><f a="unit">
	<c path="String"/>
	<x path="Void"/>
</f></expand>
		<extractContents public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></extractContents>
		<getBoundingClientRect public="1" set="method"><f a=""><c path="js.html.ClientRect"/></f></getBoundingClientRect>
		<getClientRects public="1" set="method"><f a=""><c path="js.html.ClientRectList"/></f></getClientRects>
		<insertNode public="1" set="method"><f a="newNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></insertNode>
		<intersectsNode public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></intersectsNode>
		<isPointInRange public="1" set="method"><f a="refNode:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></isPointInRange>
		<selectNode public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></selectNode>
		<selectNodeContents public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></selectNodeContents>
		<setEnd public="1" set="method"><f a="refNode:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setEnd>
		<setEndAfter public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></setEndAfter>
		<setEndBefore public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></setEndBefore>
		<setStart public="1" set="method"><f a="refNode:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setStart>
		<setStartAfter public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></setStartAfter>
		<setStartBefore public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></setStartBefore>
		<surroundContents public="1" set="method"><f a="newParent">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></surroundContents>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<haxe_doc><![CDATA[<p>The <code>Range</code> object represents a fragment of a document that can contain nodes and parts of text nodes in a given document.</p>
<p>A range can be created using the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document.createRange">Document.createRange</a></code>
&nbsp;method of the&nbsp;<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
&nbsp;object. Range objects can also be retrieved by using the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Selection.getRangeAt" class="new">Selection.getRangeAt</a></code>
&nbsp;method of the&nbsp;<code><a rel="custom" href="/api/js/html/DOMSelection">Selection</a></code>
&nbsp;object.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/range">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Range"</e></m></meta>
	</class>
	<typedef path="js.html.RequestAnimationFrameCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/RequestAnimationFrameCallback.hx"><f a="">
	<x path="Float"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.Screen" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Screen.hx" extern="1">
		<availHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Specifies the height of the screen, in pixels, minus permanent or semipermanent user interface features displayed by the operating system, such as the Taskbar on Windows.</haxe_doc>
		</availHeight>
		<availLeft public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the first available pixel available from the left side of the screen.</haxe_doc>
		</availLeft>
		<availTop public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Specifies the y-coordinate of the first pixel that is not allocated to permanent or semipermanent user interface features.</haxe_doc>
		</availTop>
		<availWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the amount of horizontal space in pixels available to the window.</haxe_doc>
		</availWidth>
		<colorDepth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the color depth of the screen.</haxe_doc>
		</colorDepth>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the height of the screen in pixels.</haxe_doc>
		</height>
		<pixelDepth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the bit depth of the screen.</haxe_doc>
		</pixelDepth>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the width of the screen.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[Returns a reference to the screen object associated with the window.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window.screen">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Screen"</e></m></meta>
	</class>
	<class path="js.html.ScriptElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ScriptElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<async public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Set this Boolean attribute to indicate that the browser should, if possible, execute the script asynchronously. It has no effect on inline scripts (i.e., scripts that don't have the <strong>src</strong> attribute). In older browsers that don't support the <strong>async</strong> attribute, parser-inserted scripts block the parser; script-inserted scripts execute asynchronously in IE and WebKit, but synchronously in Opera and pre-4.0 Firefox. In Firefox 4.0, the <code>async</code> DOM&nbsp;property defaults to <code>true</code> for script-created scripts, so the default behavior matches the behavior of IE&nbsp;and WebKit. To request script-inserted external scripts be executed in the insertion order in browsers where the <code>document.createElement("script").async</code> evaluates to <code>true</code> (such as Firefox 4.0), set <code>.async=false</code> on the scripts you want to maintain order. Never call <code>document.write()</code> from an <code>async</code> script. In Gecko 1.9.2, calling <code>document.write()</code> has an unpredictable effect. In Gecko 2.0, calling <code>document.write()</code> from an <code>async</code> script has no effect (other than printing a warning to the error console).]]></haxe_doc>
		</async>
		<charset public="1"><c path="String"/></charset>
		<crossOrigin public="1"><c path="String"/></crossOrigin>
		<defer public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed. Since this feature hasn't yet been implemented by all other major browsers, authors should not assume that the script’s execution will actually be deferred. Never call <code>document.write()</code> from a <code>defer</code> script (since Gecko 1.9.2, this will blow away the document). The <code>defer</code> attribute shouldn't be used on scripts that don't have the <code>src</code> attribute. Since Gecko 1.9.2, the <code>defer</code> attribute is ignored on scripts that don't have the <code>src</code> attribute. However, in Gecko 1.9.1 even inline scripts are deferred if the <code>defer</code> attribute is set.]]></haxe_doc>
		</defer>
		<event public="1"><c path="String"/></event>
		<htmlFor public="1"><c path="String"/></htmlFor>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the <abbr>URI</abbr> of an external script; this can be used as an alternative to embedding a script directly within a document. <code>script</code> elements with an <code>src</code> attribute specified should not have a script embedded within its tags.]]></haxe_doc>
		</src>
		<text public="1"><c path="String"/></text>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute identifies the scripting language of code embedded within a <code>script</code> element or referenced via the element’s <code>src</code> attribute. This is specified as a <abbr title="Multi-purpose Internet Mail Extensions">MIME</abbr> type; examples of supported <abbr title="Multi-purpose Internet Mail Extensions">MIME</abbr> types include <code>text/javascript</code>, <code>text/ecmascript</code>, <code>application/javascript</code>, and <code>application/ecmascript</code>. If this attribute is absent, the script is treated as JavaScript.]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[<p>The <code>script</code> element is used to embed or reference an executable script within an <abbr>HTML</abbr> or <abbr>XHTML</abbr> document.</p>
<p>Scripts without <code>async</code> or <code>defer</code> attributes are fetched and executed immediately, before the browser continues to parse the page.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/En/HTML/Element/Script">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLScriptElement"</e></m></meta>
	</class>
	<class path="js.html.ScriptProfile" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ScriptProfile.hx" extern="1">
		<head public="1" set="null"><c path="js.html.ScriptProfileNode"/></head>
		<title public="1" set="null"><c path="String"/></title>
		<uid public="1" set="null"><x path="Int"/></uid>
		<meta><m n=":native"><e>"ScriptProfile"</e></m></meta>
	</class>
	<class path="js.html.ScriptProfileNode" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ScriptProfileNode.hx" extern="1">
		<callUID public="1" set="null"><x path="Int"/></callUID>
		<functionName public="1" set="null"><c path="String"/></functionName>
		<lineNumber public="1" set="null"><x path="Int"/></lineNumber>
		<numberOfCalls public="1" set="null"><x path="Int"/></numberOfCalls>
		<selfTime public="1" set="null"><x path="Float"/></selfTime>
		<totalTime public="1" set="null"><x path="Float"/></totalTime>
		<url public="1" set="null"><c path="String"/></url>
		<visible public="1" set="null"><x path="Bool"/></visible>
		<children public="1" set="method"><f a=""><c path="Array"><c path="js.html.ScriptProfileNode"/></c></f></children>
		<meta><m n=":native"><e>"ScriptProfileNode"</e></m></meta>
	</class>
	<class path="js.html.SelectElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/SelectElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-autofocus">autofocus</a></code>
 HTML attribute, which indicates whether the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</autofocus>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-disabled">disabled</a></code>
 HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks.]]></haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[The form that this element is associated with. If this element is a descendant of a form element, then this attribute is the ID of that form element. If the element is not a descendant of a form element, then: <ul> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> The attribute can be the ID of any form element in the same document.</li> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> The attribute is null.</li> </ul> <strong>Read only.</strong>]]></haxe_doc>
		</form>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc>A list of label elements associated with this select element.</haxe_doc>
		</labels>
		<length public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option">&lt;option&gt;</a></code>
 elements in this <code>select</code> element. Setter throws DOMException.]]></haxe_doc>
		</length>
		<multiple public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-multiple">multiple</a></code>
 HTML attribute, whichindicates whether multiple items can be selected.]]></haxe_doc>
		</multiple>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-name">name</a></code>
 HTML attribute, containing the name of this control used by servers and DOM search functions.]]></haxe_doc>
		</name>
		<options public="1" set="null">
			<c path="js.html.HTMLOptionsCollection"/>
			<haxe_doc><![CDATA[The set of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option">&lt;option&gt;</a></code>
 elements contained by this element. <strong>Read only.</strong>]]></haxe_doc>
		</options>
		<required public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-required">required</a></code>
 HTML attribute, which indicates whether the user is required to select a value before submitting the form. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</required>
		<selectedIndex public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The index of the first selected <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option">&lt;option&gt;</a></code>
 element.]]></haxe_doc>
		</selectedIndex>
		<selectedOptions public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[The set of options that are selected. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</selectedOptions>
		<size public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-size">size</a></code>
 HTML attribute, which contains the number of visible items in the control. The default is 1, 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> unless <strong>multiple</strong> is true, in which case it is 4.]]></haxe_doc>
		</size>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The form control's type. When <strong>multiple</strong> is true, it returns <code>select-multiple</code>; otherwise, it returns <code>select-one</code>.<strong>Read only.</strong>]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.<strong>Read only.</strong> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc><![CDATA[The validity states that this control is in. <strong>Read only.</strong> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc>The value of this form control, that is, of the first selected option.</haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation. <strong>Read only.</strong> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</willValidate>
		<add public="1" set="method"><f a="element:before">
	<c path="js.html.Element"/>
	<c path="js.html.Element"/>
	<x path="Void"/>
</f></add>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></namedItem>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[<code>DOM select</code> elements share all of the properties and methods of other HTML elements described in the <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 section. They also have the specialized interface <a class="external" title="http://dev.w3.org/html5/spec/the-button-element.html#htmlselectelement" rel="external" href="http://dev.w3.org/html5/spec/the-button-element.html#htmlselectelement" target="_blank">HTMLSelectElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class="external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-94282980" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-94282980" target="_blank">HTMLSelectElement</a>).<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLSelectElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLSelectElement"</e></m></meta>
	</class>
	<class path="js.html.ShadowElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ShadowElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<resetStyleInheritance public="1"><x path="Bool"/></resetStyleInheritance>
		<meta><m n=":native"><e>"HTMLShadowElement"</e></m></meta>
	</class>
	<class path="js.html.SourceElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/SourceElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<media public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/source#attr-media">media</a></code>
 HTML&nbsp;attribute, containing the intended type of the media resource.]]></haxe_doc>
		</media>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/source#attr-src">src</a></code>
 HTML&nbsp;attribute, containing the URL&nbsp;for the media resource.]]></haxe_doc>
		</src>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/source#attr-type">type</a></code>
 HTML&nbsp;attribute, containing the type of the media resource.]]></haxe_doc>
		</type>
		<meta><m n=":native"><e>"HTMLSourceElement"</e></m></meta>
	</class>
	<class path="js.html.SpanElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/SpanElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<haxe_doc><![CDATA[This HTML element is a generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the <strong>class</strong> or <strong>id</strong> attributes), or because they share attribute values, such as <strong>lang</strong>. It should be used only when no other semantic element is appropriate. &lt;span&gt; is very much like a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/div">&lt;div&gt;</a></code>
 element, but <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/div">&lt;div&gt;</a></code>
 is a block-level element whereas a &lt;span&gt; is an inline element.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/span">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLSpanElement"</e></m></meta>
	</class>
	<class path="js.html.Storage" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Storage.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Getter throws DOMException.</haxe_doc>
		</length>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<getItem public="1" set="method"><f a="key">
	<c path="String"/>
	<c path="String"/>
</f></getItem>
		<key public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></key>
		<removeItem public="1" set="method"><f a="key">
	<c path="String"/>
	<x path="Void"/>
</f></removeItem>
		<setItem public="1" set="method"><f a="key:data">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setItem>
		<haxe_doc><![CDATA[<p><strong>Storage</strong> is a <a class="external" rel="external" href="http://www.sqlite.org/" title="http://www.sqlite.org/" target="_blank">SQLite</a> database API. It is available to trusted callers, meaning extensions and Firefox components only.</p>
<p>The API is currently "unfrozen", which means it is subject to change at any time; in fact, it has changed somewhat with each release of Firefox since it was introduced, and will likely continue to do so for a while.</p>
<div class="note"><strong>Note:</strong> Storage is not the same as the <a title="en/DOM/Storage" rel="internal" href="https://developer.mozilla.org/en/DOM/Storage">DOM:Storage</a> feature which can be used by web pages to store persistent data or the <a title="en/Session_store_API" rel="internal" href="https://developer.mozilla.org/en/Session_store_API">Session store API</a> (an <a title="en/XPCOM" rel="internal" href="https://developer.mozilla.org/en/XPCOM">XPCOM</a> storage utility for use by extensions).</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Storage">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Storage"</e></m></meta>
	</class>
	<class path="js.html.StorageInfo" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StorageInfo.hx" extern="1">
		<PERSISTENT public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></PERSISTENT>
		<TEMPORARY public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></TEMPORARY>
		<queryUsageAndQuota public="1" set="method"><f a="storageType:?usageCallback:?errorCallback">
	<x path="Int"/>
	<t path="js.html.StorageInfoUsageCallback"/>
	<t path="js.html.StorageInfoErrorCallback"/>
	<x path="Void"/>
</f></queryUsageAndQuota>
		<requestQuota public="1" set="method"><f a="storageType:newQuotaInBytes:?quotaCallback:?errorCallback">
	<x path="Int"/>
	<x path="Int"/>
	<t path="js.html.StorageInfoQuotaCallback"/>
	<t path="js.html.StorageInfoErrorCallback"/>
	<x path="Void"/>
</f></requestQuota>
		<meta><m n=":native"><e>"StorageInfo"</e></m></meta>
	</class>
	<typedef path="js.html.StorageInfoErrorCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StorageInfoErrorCallback.hx"><f a="">
	<c path="js.html.DOMCoreException"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.StorageInfoQuotaCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StorageInfoQuotaCallback.hx"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.StorageInfoUsageCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StorageInfoUsageCallback.hx"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.StringCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StringCallback.hx"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.StyleElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StyleElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>Returns true if the stylesheet is disabled, and false if not</haxe_doc>
		</disabled>
		<media public="1">
			<c path="String"/>
			<haxe_doc>Specifies the intended destination medium for style information.</haxe_doc>
		</media>
		<scoped public="1"><x path="Bool"/></scoped>
		<sheet public="1" set="null"><c path="js.html.StyleSheet"/></sheet>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Returns the type of style being applied by this statement.</haxe_doc>
		</type>
		<haxe_doc><![CDATA[See <a title="en/DOM/Using_dynamic_styling_information" rel="internal" href="https://developer.mozilla.org/en/DOM/Using_dynamic_styling_information">Using dynamic styling information</a> for an overview of the objects used to manipulate specified CSS properties using the DOM.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLStyleElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLStyleElement"</e></m></meta>
	</class>
	<class path="js.html.StyleMedia" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StyleMedia.hx" extern="1">
		<type public="1" set="null"><c path="String"/></type>
		<matchMedium public="1" set="method"><f a="mediaquery">
	<c path="String"/>
	<x path="Bool"/>
</f></matchMedium>
		<meta><m n=":native"><e>"StyleMedia"</e></m></meta>
	</class>
	<class path="js.html.StyleSheetList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/StyleSheetList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.StyleSheet"/>
</f></item>
		<meta><m n=":native"><e>"StyleSheetList"</e></m></meta>
	</class>
	<class path="js.html.TableCaptionElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TableCaptionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Enumerated attribute indicating alignment of the caption with respect to the table.</haxe_doc>
		</align>
		<haxe_doc><![CDATA[DOM table caption elements expose the <a title="http://www.w3.org/TR/html5/tabular-data.html#htmltablecaptionelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/tabular-data.html#htmltablecaptionelement" target="_blank">HTMLTableCaptionElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-12035137" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-12035137" target="_blank"><code>HTMLTableCaptionElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating definition list elements. In <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML/HTML5">HTML 5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTableCaptionElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableCaptionElement"</e></m></meta>
	</class>
	<class path="js.html.TableCellElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TableCellElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<abbr public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute contains a short abbreviated description of the content of the cell. Some user-agents, such as speech readers, may present this description before the content itself. <div class="note"><strong>Note: </strong>Do not use this attribute as it is obsolete in the latest standard: instead either consider starting the cell content by an independent abbreviated content itself or use the abbreviated content as the cell content and use the long content as the description of the cell by putting it in the <strong>title</strong> attribute.</div>]]></haxe_doc>
		</abbr>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are: <ul> <li><span>left</span>, aligning the content to the left of the cell</li> <li><span>center</span>, centering the content in the cell</li> <li><span>right</span>, aligning the content to the right of the cell</li> <li><span>justify</span>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><span>char</span>, aligning the textual content on a special character with a minimal offset, defined by the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/td#attr-char">char</a></code>
 and 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/td#attr-charoff">charoff</a></code>
 attributes 
<span class="unimplementedInlineTemplate">Unimplemented (see<a rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=2212" class="external" title="">
bug 2212</a>
)</span>
.</li> </ul> <p>If this attribute is not set,&nbsp; the <span>left</span> value is assumed.</p> <div class="note"><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard. <ul> <li>To achieve the same effect as the <span>left</span>, <span>center</span>, <span>right</span> or <span>justify</span> values, use the CSS <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-align">text-align</a></code>
 property on it.</li> <li>To achieve the same effect as the <span>char</span> value, in CSS3, you can use the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/td#attr-char">char</a></code>
 as the value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-align">text-align</a></code>
 property 
<span class="unimplementedInlineTemplate">Unimplemented</span>
.</li> </ul> </div>]]></haxe_doc>
		</align>
		<axis public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute contains a list of space-separated strings. Each string is the ID of a group of cells that this header applies to. <div class="note"><strong>Note: </strong>Do not use this attribute as it is obsolete in the latest standard: instead use the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/td#attr-scope">scope</a></code>
 attribute.</div>]]></haxe_doc>
		</axis>
		<bgColor public="1"><c path="String"/></bgColor>
		<cellIndex public="1" set="null"><x path="Int"/></cellIndex>
		<ch public="1"><c path="String"/></ch>
		<chOff public="1"><c path="String"/></chOff>
		<colSpan public="1"><x path="Int"/></colSpan>
		<headers public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attributes a list of space-separated strings, each corresponding to the <strong>id</strong> attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/th">&lt;th&gt;</a></code>
 elements that applies to this element.]]></haxe_doc>
		</headers>
		<height public="1"><c path="String"/></height>
		<noWrap public="1"><x path="Bool"/></noWrap>
		<rowSpan public="1"><x path="Int"/></rowSpan>
		<scope public="1"><c path="String"/></scope>
		<vAlign public="1"><c path="String"/></vAlign>
		<width public="1"><c path="String"/></width>
		<haxe_doc><![CDATA[The <em>HTML Table Cell Element</em> (<code>&lt;td&gt;</code>) defines a cell that content data.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/td">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableCellElement"</e></m></meta>
	</class>
	<class path="js.html.TableColElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TableColElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Indicates the horizontal alignment of the cell data in the column.</haxe_doc>
		</align>
		<ch public="1">
			<c path="String"/>
			<haxe_doc>Alignment character for cell data.</haxe_doc>
		</ch>
		<chOff public="1">
			<c path="String"/>
			<haxe_doc>Offset for the alignment character.</haxe_doc>
		</chOff>
		<span public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/col#attr-span">span</a></code>
 HTML&nbsp;attribute, indicating the number of columns to apply this object's attributes to. Must be a positive integer.]]></haxe_doc>
		</span>
		<vAlign public="1">
			<c path="String"/>
			<haxe_doc>Indicates the vertical alignment of the cell data in the column.</haxe_doc>
		</vAlign>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Default column width.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[DOM table column objects (which may correspond to <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/col">&lt;col&gt;</a></code>
&nbsp;or <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/colgroup">&lt;colgroup&gt;</a></code>
 HTML elements) expose the <a target="_blank" href="http://www.w3.org/TR/html5/tabular-data.html#htmltablecolelement" rel="external nofollow" class=" external" title="http://www.w3.org/TR/html5/tabular-data.html#htmltablecolelement">HTMLTableColElement</a> (or <span><a href="https://developer.mozilla.org/en/HTML" rel="custom nofollow">HTML 4</a></span> <a target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-84150186" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-84150186" rel="external nofollow" class=" external"><code>HTMLTableColElement</code></a>) interface, which provides special properties (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating table column elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTableColElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableColElement"</e></m></meta>
	</class>
	<class path="js.html.TableElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TableElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>align</b> gets/sets the alignment of the table.]]></haxe_doc>
		</align>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>bgColor</b> gets/sets the background color of the table.]]></haxe_doc>
		</bgColor>
		<border public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>border</b> gets/sets the table border.]]></haxe_doc>
		</border>
		<caption public="1">
			<c path="js.html.TableCaptionElement"/>
			<haxe_doc><![CDATA[<b>caption</b> returns the table caption.
 Setter throws DOMException.]]></haxe_doc>
		</caption>
		<cellPadding public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>cellPadding</b> gets/sets the cell padding.]]></haxe_doc>
		</cellPadding>
		<cellSpacing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>cellSpacing</b> gets/sets the spacing around the table.]]></haxe_doc>
		</cellSpacing>
		<frame public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>frame</b> specifies which sides of the table have borders.]]></haxe_doc>
		</frame>
		<rows public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[<b>rows</b> returns the rows in the table.]]></haxe_doc>
		</rows>
		<rules public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>rules</b> specifies which interior borders are visible.]]></haxe_doc>
		</rules>
		<summary public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>summary</b> gets/sets the table summary.]]></haxe_doc>
		</summary>
		<tBodies public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[<b>tBodies</b> returns the table bodies.]]></haxe_doc>
		</tBodies>
		<tFoot public="1">
			<c path="js.html.TableSectionElement"/>
			<haxe_doc><![CDATA[<b>tFoot</b> returns the table footer.
 Setter throws DOMException.]]></haxe_doc>
		</tFoot>
		<tHead public="1">
			<c path="js.html.TableSectionElement"/>
			<haxe_doc><![CDATA[<b>tHead</b> returns the table head.
 Setter throws DOMException.]]></haxe_doc>
		</tHead>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>width</b> gets/sets the width of the table.]]></haxe_doc>
		</width>
		<createCaption public="1" set="method"><f a=""><c path="js.html.Element"/></f></createCaption>
		<createTBody public="1" set="method"><f a=""><c path="js.html.Element"/></f></createTBody>
		<createTFoot public="1" set="method"><f a=""><c path="js.html.Element"/></f></createTFoot>
		<createTHead public="1" set="method"><f a=""><c path="js.html.Element"/></f></createTHead>
		<deleteCaption public="1" set="method"><f a=""><x path="Void"/></f></deleteCaption>
		<deleteRow public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteRow>
		<deleteTFoot public="1" set="method"><f a=""><x path="Void"/></f></deleteTFoot>
		<deleteTHead public="1" set="method"><f a=""><x path="Void"/></f></deleteTHead>
		<insertRow public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Element"/>
</f></insertRow>
		<haxe_doc><![CDATA[<code>table</code> objects expose the <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-64060425" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-64060425" target="_blank">HTMLTableElement</a></code> interface, which provides special properties and methods (beyond the regular <a rel="internal" href="/api/js/html/Element" title="en/DOM/element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of tables in HTML.
<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTableElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableElement"</e></m></meta>
	</class>
	<class path="js.html.TableRowElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TableRowElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<a title="en/DOM/tableRow.bgColor" rel="internal" href="https://developer.mozilla.org/en/DOM/tableRow.bgColor" class="new ">row.bgColor</a> 

<span class="deprecatedInlineTemplate" title="">Deprecated</span>]]></haxe_doc>
		</align>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>row.cells</haxe_doc>
		</bgColor>
		<cells public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>row.ch</haxe_doc>
		</cells>
		<ch public="1">
			<c path="String"/>
			<haxe_doc>row.chOff</haxe_doc>
		</ch>
		<chOff public="1">
			<c path="String"/>
			<haxe_doc>row.rowIndex</haxe_doc>
		</chOff>
		<rowIndex public="1" set="null">
			<x path="Int"/>
			<haxe_doc>row.sectionRowIndex</haxe_doc>
		</rowIndex>
		<sectionRowIndex public="1" set="null">
			<x path="Int"/>
			<haxe_doc>row.vAlign</haxe_doc>
		</sectionRowIndex>
		<vAlign public="1"><c path="String"/></vAlign>
		<deleteCell public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteCell>
		<insertCell public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Element"/>
</f></insertCell>
		<haxe_doc><![CDATA[DOM <code>table row</code> objects expose the <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6986576" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6986576" target="_blank">HTMLTableRowElement</a></code> interface, which provides special properties and methods (beyond the regular <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of rows in an HTML table.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTableRowElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableRowElement"</e></m></meta>
	</class>
	<class path="js.html.TableSectionElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TableSectionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are: <ul> <li><span>left</span>, aligning the content to the left of the cell</li> <li><span>center</span>, centering the content in the cell</li> <li><span>right</span>, aligning the content to the right of the cell</li> <li><span>justify</span>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><span>char</span>, aligning the textual content on a special character with a minimal offset, defined by the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/thead#attr-char">char</a></code>
 and 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/thead#attr-charoff">charoff</a></code>
 attributes 
<span class="unimplementedInlineTemplate">Unimplemented (see<a rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=2212" class="external" title="">
bug 2212</a>
)</span>
.</li> </ul> <p>If this attribute is not set,&nbsp; the <span>left</span> value is assumed.</p> <div class="note"><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard. <ul> <li>To achieve the same effect as the <span>left</span>, <span>center</span>, <span>right</span> or <span>justify</span> values, use the CSS <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-align">text-align</a></code>
 property on it.</li> <li>To achieve the same effect as the <span>char</span> value, in CSS3, you can use the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/thead#attr-char">char</a></code>
 as the value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-align">text-align</a></code>
 property 
<span class="unimplementedInlineTemplate">Unimplemented</span>
.</li> </ul> </div>]]></haxe_doc>
		</align>
		<ch public="1"><c path="String"/></ch>
		<chOff public="1"><c path="String"/></chOff>
		<rows public="1" set="null"><c path="js.html.HTMLCollection"/></rows>
		<vAlign public="1"><c path="String"/></vAlign>
		<deleteRow public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteRow>
		<insertRow public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Element"/>
</f></insertRow>
		<haxe_doc><![CDATA[The <em>HTML Table Head Element</em> (<code>&lt;thead&gt;</code>) defines a set of rows defining the head of the columns of the table.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/thead">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableSectionElement"</e></m></meta>
	</class>
	<class path="js.html.TextAreaElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TextAreaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-autofocus">autofocus</a></code>
 HTML&nbsp;attribute, indicating that the control should have input focus when the page loads]]></haxe_doc>
		</autofocus>
		<cols public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-cols">cols</a></code>
 HTML attribute, indicating the visible width of the text area.]]></haxe_doc>
		</cols>
		<defaultValue public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The control's default value, which behaves like the <strong><a title="en/DOM/element.textContent" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.textContent">textContent</a></strong> property.]]></haxe_doc>
		</defaultValue>
		<dirName public="1"><c path="String"/></dirName>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-disabled">disabled</a></code>
 HTML attribute, indicating that the control is not available for interaction.]]></haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[<p>The containing form element, if this element is in a form. If this element is not contained in a form element:</p> <ul> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> this can be the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-id">id</a></code>
 attribute of any <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element in the same document.</li> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> this must be <code>null</code>.</li> </ul>]]></haxe_doc>
		</form>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc><![CDATA[A list of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/label">&lt;label&gt;</a></code>
 elements that are labels for this element.]]></haxe_doc>
		</labels>
		<maxLength public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-maxlength">maxlength</a></code>
 HTML&nbsp;attribute, indicating the maximum number of characters the user can enter. This constraint is evaluated only when the value changes. Setter throws DOMException.]]></haxe_doc>
		</maxLength>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-name">name</a></code>
 HTML attribute, containing the name of the control.]]></haxe_doc>
		</name>
		<placeholder public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-placeholder">placeholder</a></code>
 HTML attribute, containing a hint to the user about what to enter in the control.]]></haxe_doc>
		</placeholder>
		<readOnly public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-readonly">readonly</a></code>
 HTML attribute, indicating that the user cannot modify the value of the control.]]></haxe_doc>
		</readOnly>
		<required public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-required">required</a></code>
 HTML attribute, indicating that the user must specify a value before submitting the form.]]></haxe_doc>
		</required>
		<rows public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-rows">rows</a></code>
 HTML attribute, indicating the number of visible text lines for the control.]]></haxe_doc>
		</rows>
		<selectionDirection public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The direction in which selection occurred. This is "forward" if selection was performed in the start-to-end direction of the current locale, or "backward" for the opposite direction. This can also be "none"&nbsp;if the direction is unknown."]]></haxe_doc>
		</selectionDirection>
		<selectionEnd public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The index of the end of selected text. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> If no text is selected, contains the index of the character that follows the input cursor. On being set, the control behaves as if <strong>setSelectionRange</strong>() had been called with this as the second argument, and <strong>selectionStart</strong> as the first argument.]]></haxe_doc>
		</selectionEnd>
		<selectionStart public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The index of the beginning of selected text. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> If no text is selected, contains the index of the character that follows the input cursor. On being set, the control behaves as if <strong>setSelectionRange</strong>() had been called with this as the first argument, and <strong>selectionEnd</strong> as the second argument.]]></haxe_doc>
		</selectionStart>
		<textLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The codepoint length of the control's value.</haxe_doc>
		</textLength>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The string <code>textarea</code>.]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc>The raw value contained in the control.</haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.</haxe_doc>
		</willValidate>
		<wrap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-wrap">wrap</a></code>
 HTML attribute, indicating how the control wraps text.]]></haxe_doc>
		</wrap>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<select public="1" set="method"><f a=""><x path="Void"/></f></select>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<setRangeText public="1" set="method">
			<f a="replacement:start:end:selectionMode">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><setRangeText public="1" set="method">
	<f a="replacement">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</setRangeText></overloads>
		</setRangeText>
		<setSelectionRange public="1" set="method"><f a="start:end:?direction">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></setSelectionRange>
		<haxe_doc><![CDATA[DOM <code>TextArea</code> objects expose the <a title="http://dev.w3.org/html5/spec/the-button-element.html#the-textarea-element" class=" external" rel="external" href="http://dev.w3.org/html5/spec/the-button-element.html#the-textarea-element" target="_blank">HTMLTextAreaElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <code><a title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-24874179" class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-24874179" target="_blank">HTMLTextAreaElement</a></code>) interface, which provides special properties and methods (beyond the regular <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea">&lt;textarea&gt;</a></code>
 elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTextAreaElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTextAreaElement"</e></m></meta>
	</class>
	<class path="js.html.TextMetrics" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TextMetrics.hx" extern="1">
		<width public="1" set="null"><x path="Float"/></width>
		<haxe_doc><![CDATA[Returned by <a title="CanvasRenderingContext2D" rel="internal" href="https://developer.mozilla.org/CanvasRenderingContext2D" class="new ">CanvasRenderingContext2D</a>'s <a title="CanvasRenderingContext2D.measureText" rel="internal" href="https://developer.mozilla.org/CanvasRenderingContext2D.measureText" class="new ">measureText</a> method.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/TextMetrics">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TextMetrics"</e></m></meta>
	</class>
	<class path="js.html.TextTrack" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TextTrack.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<activeCues public="1" set="null"><c path="js.html.TextTrackCueList"/></activeCues>
		<cues public="1" set="null"><c path="js.html.TextTrackCueList"/></cues>
		<kind public="1" set="null"><c path="String"/></kind>
		<label public="1" set="null"><c path="String"/></label>
		<language public="1" set="null"><c path="String"/></language>
		<mode public="1"><c path="String"/></mode>
		<oncuechange public="1"><t path="js.html.EventListener"/></oncuechange>
		<addCue public="1" set="method"><f a="cue">
	<c path="js.html.TextTrackCue"/>
	<x path="Void"/>
</f></addCue>
		<removeCue public="1" set="method"><f a="cue">
	<c path="js.html.TextTrackCue"/>
	<x path="Void"/>
</f></removeCue>
		<meta><m n=":native"><e>"TextTrack"</e></m></meta>
	</class>
	<class path="js.html.TextTrackCue" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TextTrackCue.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</align>
		<endTime public="1"><x path="Float"/></endTime>
		<id public="1"><c path="String"/></id>
		<line public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</line>
		<onenter public="1"><t path="js.html.EventListener"/></onenter>
		<onexit public="1"><t path="js.html.EventListener"/></onexit>
		<pauseOnExit public="1"><x path="Bool"/></pauseOnExit>
		<position public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</position>
		<size public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</size>
		<snapToLines public="1"><x path="Bool"/></snapToLines>
		<startTime public="1"><x path="Float"/></startTime>
		<text public="1"><c path="String"/></text>
		<track public="1" set="null"><c path="js.html.TextTrack"/></track>
		<vertical public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</vertical>
		<getCueAsHTML public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></getCueAsHTML>
		<new public="1" set="method"><f a="startTime:endTime:text">
	<x path="Float"/>
	<x path="Float"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"TextTrackCue"</e></m></meta>
	</class>
	<class path="js.html.TextTrackCueList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TextTrackCueList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<getCueById public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="js.html.TextTrackCue"/>
</f></getCueById>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.TextTrackCue"/>
</f></item>
		<meta><m n=":native"><e>"TextTrackCueList"</e></m></meta>
	</class>
	<class path="js.html.TextTrackList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TextTrackList.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<length public="1" set="null"><x path="Int"/></length>
		<onaddtrack public="1"><t path="js.html.EventListener"/></onaddtrack>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.TextTrack"/>
</f></item>
		<meta><m n=":native"><e>"TextTrackList"</e></m></meta>
	</class>
	<class path="js.html.TimeRanges" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TimeRanges.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of time ranges represented by the time range object. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<end public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Float"/>
</f></end>
		<start public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Float"/>
</f></start>
		<haxe_doc><![CDATA[<p>The <code>TimeRanges</code> interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/audio">&lt;audio&gt;</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
&nbsp;elements.</p>
<p>A <code>TimeRanges</code> object includes one or more ranges of time, each specified by a starting and ending time offset. You reference each time range by using the <code>start()</code> and <code>end()</code> methods, passing the index number of the time range you want to retrieve.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/TimeRanges">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TimeRanges"</e></m></meta>
	</class>
	<class path="js.html.TitleElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TitleElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Gets or sets the text content of the document's title.</haxe_doc>
		</text>
		<haxe_doc><![CDATA[The <code>title</code> object exposes the <a target="_blank" class=" external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-79243169" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-79243169">HTMLTitleElement</a> interface which contains the title for a document.&nbsp; This element inherits all of the properties and methods described in the <a title="en/DOM/element" class="internal" rel="internal" href="/api/js/html/Element">element</a> section.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTitleElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTitleElement"</e></m></meta>
	</class>
	<class path="js.html.Touch" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Touch.hx" extern="1">
		<clientX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X coordinate of the touch point relative to the viewport, not including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</clientX>
		<clientY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y coordinate of the touch point relative to the viewport, not including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</clientY>
		<force public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[The amount of pressure being applied to the surface by the user, as a float between 0.0 (no pressure) and 1.0 (maximum pressure). <strong>Read only.</strong>]]></haxe_doc>
		</force>
		<identifier public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[A unique identifier for this <code>Touch</code> object. A given touch (say, by a finger) will have the same identifier for the duration of its movement around the surface. This lets you ensure that you're tracking the same touch all the time. <strong>Read only.</strong>]]></haxe_doc>
		</identifier>
		<pageX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X coordinate of the touch point relative to the viewport, including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</pageX>
		<pageY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y coordinate of the touch point relative to the viewport, including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</pageY>
		<radiusX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X radius of the ellipse that most closely circumscribes the area of contact with the screen. The value is in pixels of the same scale as <code>screenX</code>. <strong>Read only.</strong>]]></haxe_doc>
		</radiusX>
		<radiusY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y radius of the ellipse that most closely circumscribes the area of contact with the screen. The value is in pixels of the same scale as <code>screenY</code>. <strong>Read only.</strong>]]></haxe_doc>
		</radiusY>
		<rotationAngle public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[The angle (in degrees)&nbsp;that the ellipse described by radiusX and radiusY must be rotated, clockwise, to most accurately cover the area of contact between the user and the surface. <strong>Read only.</strong>]]></haxe_doc>
		</rotationAngle>
		<screenX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X coordinate of the touch point relative to the screen, not including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</screenX>
		<screenY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y coordinate of the touch point relative to the screen, not including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</screenY>
		<target public="1" set="null"><c path="js.html.EventTarget"/></target>
		<haxe_doc><![CDATA[A <code>Touch</code> object represents a single point of contact between the user and a touch-sensitive interface device (which may be, for example, a touchscreen or a trackpad).<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Touch">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Touch"</e></m></meta>
	</class>
	<class path="js.html.TouchList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TouchList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Touch">Touch</a></code>
&nbsp;objects in the <code>TouchList</code>. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Touch"/>
</f></item>
		<haxe_doc><![CDATA[A <code>TouchList</code> represents a list of all of the points of contact with a touch surface; for example, if the user has three fingers on the screen (or trackpad), the corresponding <code>TouchList</code> would have one <code><a rel="custom" href="/api/js/html/Touch">Touch</a></code>
 object for each finger, for a total of three entries.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/TouchList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TouchList"</e></m></meta>
	</class>
	<class path="js.html.TrackElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TrackElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<ERROR public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></ERROR>
		<LOADED public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></LOADED>
		<LOADING public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></LOADING>
		<NONE public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></NONE>
		<default_ public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This attribute indicates that the track should be enabled unless the user's preferences indicate that another track is more appropriate. This may only be used on one <code>track</code> element per media element.]]></haxe_doc>
		</default_>
		<get_default_ get="inline" set="null" line="44"><f a=""><x path="Bool"/></f></get_default_>
		<set_default_ get="inline" set="null" line="47"><f a="x">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_default_>
		<kind public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Kind of text track. The following keywords are allowed: <ul> <li>subtitles: A transcription or translation of the dialogue.</li> <li>captions: A transcription or translation of the dialogue or other sound effects. Suitable for users who are deaf or when the sound is muted.</li> <li>descriptions: Textual descriptions of the video content. Suitable for users who are blind.</li> <li>chapters: Chapter titles, intended to be used when the user is navigating the media resource.</li> <li>metadata: Tracks used by script. Not visible to the user.</li> </ul>]]></haxe_doc>
		</kind>
		<label public="1">
			<c path="String"/>
			<haxe_doc>A user-readable title of the text track Used by the browser when listing available text tracks.</haxe_doc>
		</label>
		<readyState public="1" set="null"><x path="Int"/></readyState>
		<src public="1">
			<c path="String"/>
			<haxe_doc>Address of the track. Must be a valid URL. This attribute must be defined.</haxe_doc>
		</src>
		<srclang public="1">
			<c path="String"/>
			<haxe_doc>Language of the track text data.</haxe_doc>
		</srclang>
		<track public="1" set="null"><c path="js.html.TextTrack"/></track>
		<haxe_doc><![CDATA[<p>The <code>track</code>&nbsp;element is used as a child of the media elements—<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/audio">&lt;audio&gt;</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
—and does not represent anything on its own. It lets you specify timed text tracks (or time-based data).</p>
<p>The type of data that <code> track</code> adds to the media is set in the <code>kind</code> attribute, which can take values of <code>subtitles</code>, <code>captions</code>, <code>descriptions</code>, <code>chapters</code> or <code>metadata</code>. The element points to a source file containing timed text that the browser exposes when the user requests additional data. </p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/track">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTrackElement"</e></m></meta>
	</class>
	<class path="js.html.TreeWalker" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/TreeWalker.hx" extern="1">
		<currentNode public="1">
			<c path="js.html.Node"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</currentNode>
		<expandEntityReferences public="1" set="null"><x path="Bool"/></expandEntityReferences>
		<filter public="1" set="null"><c path="js.html.NodeFilter"/></filter>
		<root public="1" set="null"><c path="js.html.Node"/></root>
		<whatToShow public="1" set="null"><x path="Int"/></whatToShow>
		<firstChild public="1" set="method"><f a=""><c path="js.html.Node"/></f></firstChild>
		<lastChild public="1" set="method"><f a=""><c path="js.html.Node"/></f></lastChild>
		<nextNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></nextNode>
		<nextSibling public="1" set="method"><f a=""><c path="js.html.Node"/></f></nextSibling>
		<parentNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></parentNode>
		<previousNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></previousNode>
		<previousSibling public="1" set="method"><f a=""><c path="js.html.Node"/></f></previousSibling>
		<haxe_doc><![CDATA[<p>The <code>TreeWalker</code> object represents the nodes of a document subtree and a position within them.</p>
<p>A TreeWalker can be created using the <code><a title="en/DOM/document.createTreeWalker" rel="internal" href="https://developer.mozilla.org/en/DOM/document.createTreeWalker">createTreeWalker()</a></code> method of the <code><a title="en/DOM/document" rel="internal" href="/api/js/html/Document">document</a></code> object.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Treewalker">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TreeWalker"</e></m></meta>
	</class>
	<class path="js.html.UListElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/UListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn't work in all browsers. <div class="note"><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ol">&lt;ol&gt;</a></code>
 element should be styled using <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a>. To give a similar effect than the <span>compact</span> attribute, the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property <a title="en/CSS/line-height" rel="internal" href="https://developer.mozilla.org/en/CSS/line-height">line-height</a> can be used with a value of <span>80%</span>.</div>]]></haxe_doc>
		</compact>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Used to set the bullet style for the list. The values defined under <a title="en/HTML3.2" rel="internal" href="https://developer.mozilla.org/en/HTML3.2" class="new ">HTML3.2</a> and the transitional version of <a title="en/HTML4.01" rel="internal" href="https://developer.mozilla.org/en/HTML4.01" class="new ">HTML 4.0/4.01</a> are<span>:</span> <ul> <li><code>circle</code>,</li> <li><code>disc</code>,</li> <li>and <code>square</code>.</li> </ul> <p>A fourth bullet type has been defined in the WebTV interface, but not all browsers support it: <code>triangle.</code></p> <p>If not present and if no <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property does apply to the element, the user agent decide to use a kind of bullets depending on the nesting level of the list.</p> <div class="note"><strong>Usage note:</strong> Do not use this attribute, as it has been deprecated: use the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property instead.</div>]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[<p>The HTML <em>unordered list</em> element (<code>&lt;ul&gt;</code>) represents an unordered list of items, namely a collection of items that do not have a numerical ordering, and their order in the list is meaningless. Typically, unordered-list items are displayed with a bullet, which can be of several forms, like a dot, a circle or a squared. The bullet style is not defined in the HTML description of the page, but in its associated CSS, using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property.</p>
<p>There is no limitation to the depth and imbrication of lists defined with the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 elements.</p>
<div class="note"><strong>Usage note: </strong> The <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 both represent a list of items. They differ in the way that, with the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 element, the order is meaningful. As a rule of thumb to determine which one to use, try changing the order of the list items; if the meaning is changed, the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 element should be used, else the <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 is adequate.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/ul">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLUListElement"</e></m></meta>
	</class>
	<class path="js.html.Uint8Array" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Uint8Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of each array element.</haxe_doc>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of entries in the array; for these 8-bit values, this is the same as the size of the array in bytes. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
			<overloads>
				<set public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
				<set public="1" set="method">
					<f a="array:?offset">
						<c path="js.html.Uint8Array"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
			</overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Uint8Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint8Array <a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new Uint8Array object.</p>
<pre>Uint8Array Uint8Array(
&nbsp; unsigned long length
);

Uint8Array Uint8Array(
&nbsp; <em>TypedArray</em> array
);

Uint8Array Uint8Array(
&nbsp; sequence&lt;type&gt; array
);

Uint8Array Uint8Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to an 8-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint8Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint8Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint8Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint8Array <a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new Uint8Array object.</p>
<pre>Uint8Array Uint8Array(
&nbsp; unsigned long length
);

Uint8Array Uint8Array(
&nbsp; <em>TypedArray</em> array
);

Uint8Array Uint8Array(
&nbsp; sequence&lt;type&gt; array
);

Uint8Array Uint8Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to an 8-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint8Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint8Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint8Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint8Array <a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new Uint8Array object.</p>
<pre>Uint8Array Uint8Array(
&nbsp; unsigned long length
);

Uint8Array Uint8Array(
&nbsp; <em>TypedArray</em> array
);

Uint8Array Uint8Array(
&nbsp; sequence&lt;type&gt; array
);

Uint8Array Uint8Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to an 8-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint8Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint8Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint8Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Uint8Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint8Array <a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new Uint8Array object.</p>
<pre>Uint8Array Uint8Array(
&nbsp; unsigned long length
);

Uint8Array Uint8Array(
&nbsp; <em>TypedArray</em> array
);

Uint8Array Uint8Array(
&nbsp; sequence&lt;type&gt; array
);

Uint8Array Uint8Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to an 8-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint8Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint8Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint8Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[<p>The <code>UInt8Array</code> type represents an array of 8-bit unsigned integers.</p>
<p>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Uint8Array"</e></m></meta>
	</class>
	<class path="js.html.Uint8ClampedArray" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/Uint8ClampedArray.hx" extern="1">
		<extends path="js.html.Uint8Array"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></BYTES_PER_ELEMENT>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads>
				<new public="1" set="method"><f a="length">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
				<new public="1" set="method"><f a="array">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></new>
				<new public="1" set="method"><f a="array">
	<c path="js.html.Uint8ClampedArray"/>
	<x path="Void"/>
</f></new>
			</overloads>
		</new>
		<meta><m n=":native"><e>"Uint8ClampedArray"</e></m></meta>
	</class>
	<class path="js.html.ValidityState" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/ValidityState.hx" extern="1">
		<customError public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>The element's custom validity message has been set to a non-empty string by calling the element's setCustomValidity() method.</haxe_doc>
		</customError>
		<patternMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value does not match the specified 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-pattern">pattern</a></code>
.]]></haxe_doc>
		</patternMismatch>
		<rangeOverflow public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value is greater than the specified 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-max">max</a></code>
.]]></haxe_doc>
		</rangeOverflow>
		<rangeUnderflow public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value is less than the specified 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-min">min</a></code>
.]]></haxe_doc>
		</rangeUnderflow>
		<stepMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value does not fit the rules determined by 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-step">step</a></code>
.]]></haxe_doc>
		</stepMismatch>
		<tooLong public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<p>The value exceeds the specified <strong>maxlength</strong> for <a title="en/DOM/HTMLInputElement" rel="internal" href="https://developer.mozilla.org/en/DOM/HTMLInputElement">HTMLInputElement</a> or <a title="en/DOM/textarea" rel="internal" href="https://developer.mozilla.org/en/DOM/HTMLTextAreaElement">HTMLTextAreaElement</a> objects.</p> <div class="note"><strong>Note:</strong> This will never be <code>true</code> in Gecko, because elements' values are prevented from being longer than <strong>maxlength</strong>.</div>]]></haxe_doc>
		</tooLong>
		<typeMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value is not in the required syntax (when 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-type">type</a></code>
 is <code>email</code> or <code>url</code>).]]></haxe_doc>
		</typeMismatch>
		<valid public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>No other constraint validation conditions are true.</haxe_doc>
		</valid>
		<valueMissing public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The element has a 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-required">required</a></code>
 attribute, but no value.]]></haxe_doc>
		</valueMissing>
		<haxe_doc><![CDATA[The DOM&nbsp;<code>ValidityState</code> interface represents the <em>validity states</em> that an element can be in, with respect to constraint validation.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/ValidityState">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ValidityState"</e></m></meta>
	</class>
	<class path="js.html.VideoElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/VideoElement.hx" extern="1">
		<extends path="js.html.MediaElement"/>
		<decodedFrameCount public="1" set="null"><x path="Int"/></decodedFrameCount>
		<displayingFullscreen public="1" set="null"><x path="Bool"/></displayingFullscreen>
		<droppedFrameCount public="1" set="null"><x path="Int"/></droppedFrameCount>
		<height public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-height">height</a></code>
 HTML attribute, which specifies the height of the display area, in CSS pixels.]]></haxe_doc>
		</height>
		<poster public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-poster">poster</a></code>
 HTML&nbsp;attribute, which specifies an image to show while no video data is available.]]></haxe_doc>
		</poster>
		<supportsFullscreen public="1" set="null"><x path="Bool"/></supportsFullscreen>
		<videoHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The intrinsic height of the resource in CSS pixels, taking into account the dimensions, aspect ratio, clean aperture, resolution, and so forth, as defined for the format used by the resource. If the element's ready state is HAVE_NOTHING, the value is 0.</haxe_doc>
		</videoHeight>
		<videoWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The intrinsic width of the resource in CSS pixels, taking into account the dimensions, aspect ratio, clean aperture, resolution, and so forth, as defined for the format used by the resource. If the element's ready state is HAVE_NOTHING, the value is 0.</haxe_doc>
		</videoWidth>
		<width public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-width">width</a></code>
&nbsp;HTML&nbsp;attribute, which specifies the width of the display area, in CSS pixels.]]></haxe_doc>
		</width>
		<enterFullScreen public="1" set="method"><f a=""><x path="Void"/></f></enterFullScreen>
		<enterFullscreen public="1" set="method"><f a=""><x path="Void"/></f></enterFullscreen>
		<exitFullScreen public="1" set="method"><f a=""><x path="Void"/></f></exitFullScreen>
		<exitFullscreen public="1" set="method"><f a=""><x path="Void"/></f></exitFullscreen>
		<haxe_doc><![CDATA[DOM <code>video</code> objects expose the <a class="external" title="http://www.w3.org/TR/html5/video.html#htmlvideoelement" rel="external" href="http://www.w3.org/TR/html5/video.html#htmlvideoelement" target="_blank">HTMLVideoElement</a> interface, which provides special properties (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object and <a title="en/DOM/HTMLMediaElement" rel="internal" href="/api/js/html/MediaElement">HTMLMediaElement</a> interfaces they also have available to them by inheritance) for manipulating video objects.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLVideoElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLVideoElement"</e></m></meta>
	</class>
	<typedef path="js.html.VoidCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/VoidCallback.hx"><f a=""><x path="Bool"/></f></typedef>
	<class path="js.html.XMLHttpRequest" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/XMLHttpRequest.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<DONE public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>The operation is complete.</haxe_doc>
		</DONE>
		<HEADERS_RECEIVED public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[<code>send()</code> has been called, and headers and status are available.]]></haxe_doc>
		</HEADERS_RECEIVED>
		<LOADING public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Downloading; <code>responseText</code> holds partial data.]]></haxe_doc>
		</LOADING>
		<OPENED public="1" get="inline" set="null" line="45" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[<code>send()</code>has not been called yet.]]></haxe_doc>
		</OPENED>
		<UNSENT public="1" get="inline" set="null" line="48" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[<code>open()</code>has not been called yet.]]></haxe_doc>
		</UNSENT>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onload public="1"><t path="js.html.EventListener"/></onload>
		<onloadend public="1"><t path="js.html.EventListener"/></onloadend>
		<onloadstart public="1"><t path="js.html.EventListener"/></onloadstart>
		<onprogress public="1"><t path="js.html.EventListener"/></onprogress>
		<onreadystatechange public="1"><t path="js.html.EventListener"/></onreadystatechange>
		<readyState public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[<p>The state of the request:</p> <table class="standard-table"> <tbody> <tr> <td class="header">Value</td> <td class="header">State</td> <td class="header">Description</td> </tr> <tr> <td><code>0</code></td> <td><code>UNSENT</code></td> <td><code>open()</code>has not been called yet.</td> </tr> <tr> <td><code>1</code></td> <td><code>OPENED</code></td> <td><code>send()</code>has not been called yet.</td> </tr> <tr> <td><code>2</code></td> <td><code>HEADERS_RECEIVED</code></td> <td><code>send()</code> has been called, and headers and status are available.</td> </tr> <tr> <td><code>3</code></td> <td><code>LOADING</code></td> <td>Downloading; <code>responseText</code> holds partial data.</td> </tr> <tr> <td><code>4</code></td> <td><code>DONE</code></td> <td>The operation is complete.</td> </tr> </tbody> </table>]]></haxe_doc>
		</readyState>
		<response public="1" set="null">
			<d/>
			<haxe_doc><![CDATA[The response entity body according to <code><a href="#responseType">responseType</a></code>, as an <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>, <a title="en/DOM/Blob" rel="internal" href="https://developer.mozilla.org/en/DOM/Blob"><code>Blob</code></a>, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
, JavaScript object (for "moz-json"), or string. This is <code>NULL</code>&nbsp;if the request is not complete or was not successful. Getter throws DOMException.]]></haxe_doc>
		</response>
		<responseText public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The response to the request as text, or <code>null</code> if the request was unsuccessful or has not yet been sent. <strong>Read-only.</strong> Getter throws DOMException.]]></haxe_doc>
		</responseText>
		<responseType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>Can be set to change the response type. This tells the server what format you want the response to be in.</p> <table class="standard-table"> <tbody> <tr> <td class="header">Value</td> <td class="header">Data type of <code>response</code> property</td> </tr> <tr> <td><em>empty string</em></td> <td>String (this is the default)</td> </tr> <tr> <td>"arraybuffer"</td> <td><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a></td> </tr> <tr> <td>"blob"</td> <td><code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Blob">Blob</a></code>
</td> </tr> <tr> <td>"document"</td> <td><code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
</td> </tr> <tr> <td>"text"</td> <td>String</td> </tr> <tr> <td>"moz-json"</td> <td>JavaScript object, parsed from a JSON string returned by the server 
<span title="(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
">Requires Gecko 9.0</span>
</td> </tr> </tbody> </table> Setter throws DOMException.]]></haxe_doc>
		</responseType>
		<responseXML public="1" set="null">
			<c path="js.html.Document"/>
			<haxe_doc><![CDATA[<p>The response to the request as a DOM <code><a class="internal" title="En/DOM/Document" rel="internal" href="https://developer.mozilla.org/en/DOM/document">Document</a></code> object, or <code>null</code> if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML. The response is parsed as if it were a <code>text/xml</code> stream. <strong>Read-only.</strong></p> <div class="note"><strong>Note:</strong> If the server doesn't apply the <code>text/xml</code> Content-Type header, you can use <code>overrideMimeType()</code>to force <code>XMLHttpRequest</code> to parse it as XML anyway.</div> Getter throws DOMException.]]></haxe_doc>
		</responseXML>
		<status public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The status of the response to the request. This is the HTTP result code (for example, <code>status</code> is 200 for a successful request). <strong>Read-only.</strong> Getter throws DOMException.]]></haxe_doc>
		</status>
		<statusText public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The response string returned by the HTTP server. Unlike <code>status</code>, this includes the entire text of the response message ("<code>200 OK</code>", for example). <strong>Read-only.</strong> Getter throws DOMException.]]></haxe_doc>
		</statusText>
		<upload public="1" set="null">
			<c path="js.html.XMLHttpRequestUpload"/>
			<haxe_doc><![CDATA[The upload process can be tracked by adding an event listener to <code>upload</code>. 
<span>New in <a rel="custom" href="https://developer.mozilla.org/en/Firefox_3.5_for_developers">Firefox 3.5</a></span>]]></haxe_doc>
		</upload>
		<withCredentials public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<p>Indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies or authorization headers. 
<span>New in <a rel="custom" href="https://developer.mozilla.org/en/Firefox_3.5_for_developers">Firefox 3.5</a></span>
</p> <div class="note"><strong>Note:</strong> This never affects same-site requests.</div> <p>The default is <code>false</code>.</p> Setter throws DOMException.]]></haxe_doc>
		</withCredentials>
		<abort public="1" set="method"><f a=""><x path="Void"/></f></abort>
		<getAllResponseHeaders public="1" set="method"><f a=""><c path="String"/></f></getAllResponseHeaders>
		<getResponseHeader public="1" set="method"><f a="header">
	<c path="String"/>
	<c path="String"/>
</f></getResponseHeader>
		<open public="1" set="method"><f a="method:url:?async:?user:?password">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></open>
		<overrideMimeType public="1" set="method"><f a="override_">
	<c path="String"/>
	<x path="Void"/>
</f></overrideMimeType>
		<send public="1" set="method">
			<f a="data">
				<c path="js.html.DOMFormData"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
			<overloads>
				<send public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.ArrayBuffer"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.Blob"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.Document"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="String"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
			</overloads>
		</send>
		<setRequestHeader public="1" set="method"><f a="header:value">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setRequestHeader>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc><![CDATA[<p><code>XMLHttpRequest</code> is a <a class="internal" title="En/JavaScript" rel="internal" href="https://developer.mozilla.org/en/JavaScript">JavaScript</a> object that was designed by Microsoft and adopted by Mozilla, Apple, and Google. It's now being <a class="external" title="http://www.w3.org/TR/XMLHttpRequest/" rel="external" href="http://www.w3.org/TR/XMLHttpRequest/" target="_blank">standardized in the W3C</a>. It provides an easy way to retrieve data at a URL. Despite its name, <code>XMLHttpRequest</code> can be used to retrieve any type of data, not just XML, and it supports protocols other than <a title="en/HTTP" rel="internal" href="https://developer.mozilla.org/en/HTTP">HTTP</a> (including <code>file</code> and <code>ftp</code>).</p>
<p>To create an instance of <code>XMLHttpRequest</code>, simply do this:</p>
<pre>var req = new XMLHttpRequest();
</pre>
<p>For details about how to use <code>XMLHttpRequest</code>, see <a class="internal" title="En/Using XMLHttpRequest" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/Using_XMLHttpRequest">Using XMLHttpRequest</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XMLHttpRequest">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"XMLHttpRequest"</e></m></meta>
	</class>
	<class path="js.html.XMLHttpRequestUpload" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/XMLHttpRequestUpload.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onload public="1"><t path="js.html.EventListener"/></onload>
		<onloadend public="1"><t path="js.html.EventListener"/></onloadend>
		<onloadstart public="1"><t path="js.html.EventListener"/></onloadstart>
		<onprogress public="1"><t path="js.html.EventListener"/></onprogress>
		<meta><m n=":native"><e>"XMLHttpRequestUpload"</e></m></meta>
	</class>
	<class path="js.html.XPathExpression" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/XPathExpression.hx" extern="1">
		<evaluate public="1" set="method"><f a="contextNode:type:inResult">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<c path="js.html.XPathResult"/>
	<c path="js.html.XPathResult"/>
</f></evaluate>
		<haxe_doc><![CDATA[An XPathExpression is a compiled XPath query returned from <a rel="internal" href="https://developer.mozilla.org/en/DOM/document.createExpression" title="en/DOM/document.createExpression">document.createExpression()</a>. It has a method <code>evaluate()</code> which can be used to execute the compiled XPath.
<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XPathExpression">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"XPathExpression"</e></m></meta>
	</class>
	<class path="js.html.XPathNSResolver" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/XPathNSResolver.hx" extern="1">
		<lookupNamespaceURI public="1" set="method"><f a="prefix">
	<c path="String"/>
	<c path="String"/>
</f></lookupNamespaceURI>
		<meta><m n=":native"><e>"XPathNSResolver"</e></m></meta>
	</class>
	<class path="js.html.XPathResult" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/XPathResult.hx" extern="1">
		<ANY_TYPE public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>A result set containing whatever type naturally results from evaluation of the expression. Note that if the result is a node-set then UNORDERED_NODE_ITERATOR_TYPE is always the resulting type.</haxe_doc>
		</ANY_TYPE>
		<ANY_UNORDERED_NODE_TYPE public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing any single node that matches the expression. The node is not necessarily the first node in the document that matches the expression.</haxe_doc>
		</ANY_UNORDERED_NODE_TYPE>
		<BOOLEAN_TYPE public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A result containing a single boolean value. This is useful for example, in an XPath expression using the <code>not()</code> function.]]></haxe_doc>
		</BOOLEAN_TYPE>
		<FIRST_ORDERED_NODE_TYPE public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing the first node in the document that matches the expression.</haxe_doc>
		</FIRST_ORDERED_NODE_TYPE>
		<NUMBER_TYPE public="1" get="inline" set="null" line="45" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A result containing a single number. This is useful for example, in an XPath expression using the <code>count()</code> function.]]></haxe_doc>
		</NUMBER_TYPE>
		<ORDERED_NODE_ITERATOR_TYPE public="1" get="inline" set="null" line="48" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing all the nodes matching the expression. The nodes in the result set are in the same order that they appear in the document.</haxe_doc>
		</ORDERED_NODE_ITERATOR_TYPE>
		<ORDERED_NODE_SNAPSHOT_TYPE public="1" get="inline" set="null" line="51" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing snapshots of all the nodes matching the expression. The nodes in the result set are in the same order that they appear in the document.</haxe_doc>
		</ORDERED_NODE_SNAPSHOT_TYPE>
		<STRING_TYPE public="1" get="inline" set="null" line="54" static="1">
			<x path="Int"/>
			<haxe_doc>A result containing a single string.</haxe_doc>
		</STRING_TYPE>
		<UNORDERED_NODE_ITERATOR_TYPE public="1" get="inline" set="null" line="57" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing all the nodes matching the expression. The nodes may not necessarily be in the same order that they appear in the document.</haxe_doc>
		</UNORDERED_NODE_ITERATOR_TYPE>
		<UNORDERED_NODE_SNAPSHOT_TYPE public="1" get="inline" set="null" line="60" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing snapshots of all the nodes matching the expression. The nodes may not necessarily be in the same order that they appear in the document.</haxe_doc>
		</UNORDERED_NODE_SNAPSHOT_TYPE>
		<booleanValue public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>readonly boolean Getter throws DOMException.</haxe_doc>
		</booleanValue>
		<invalidIteratorState public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>readonly boolean</haxe_doc>
		</invalidIteratorState>
		<numberValue public="1" set="null">
			<x path="Float"/>
			<haxe_doc>readonly float Getter throws DOMException.</haxe_doc>
		</numberValue>
		<resultType public="1" set="null">
			<x path="Int"/>
			<haxe_doc>readonly integer (short)</haxe_doc>
		</resultType>
		<singleNodeValue public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>readonly Node Getter throws DOMException.</haxe_doc>
		</singleNodeValue>
		<snapshotLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc>readonly Integer Getter throws DOMException.</haxe_doc>
		</snapshotLength>
		<stringValue public="1" set="null">
			<c path="String"/>
			<haxe_doc>readonly String Getter throws DOMException.</haxe_doc>
		</stringValue>
		<iterateNext public="1" set="method"><f a=""><c path="js.html.Node"/></f></iterateNext>
		<snapshotItem public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></snapshotItem>
		<haxe_doc><![CDATA[Refer to <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIDOMXPathResult">nsIDOMXPathResult</a></code>
 for more detail.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XPathResult">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"XPathResult"</e></m></meta>
	</class>
	<class path="js.html.fs.Entry" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/Entry.hx" extern="1">
		<filesystem public="1" set="null">
			<c path="js.html.fs.FileSystem"/>
			<haxe_doc>The file system on which the entry resides.</haxe_doc>
		</filesystem>
		<fullPath public="1" set="null"><c path="String"/></fullPath>
		<isDirectory public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>The entry is a directory.</haxe_doc>
		</isDirectory>
		<isFile public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>The entry is a file.</haxe_doc>
		</isFile>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of the entry, excluding the path leading to it.</haxe_doc>
		</name>
		<copyTo public="1" set="method"><f a="parent:?name:?successCallback:?errorCallback">
	<c path="js.html.fs.DirectoryEntry"/>
	<c path="String"/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></copyTo>
		<getMetadata public="1" set="method"><f a="successCallback:?errorCallback">
	<t path="js.html.fs.MetadataCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></getMetadata>
		<getParent public="1" set="method"><f a="?successCallback:?errorCallback">
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></getParent>
		<moveTo public="1" set="method"><f a="parent:?name:?successCallback:?errorCallback">
	<c path="js.html.fs.DirectoryEntry"/>
	<c path="String"/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></moveTo>
		<remove public="1" set="method"><f a="successCallback:?errorCallback">
	<t path="js.html.VoidCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></remove>
		<toURL public="1" set="method"><f a=""><c path="String"/></f></toURL>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong> <div>This page is not complete.</div>
</div>
<p>The <code>Entry</code> interface of the <a title="en/DOM/File_API/File_System_API" rel="internal" href="https://developer.mozilla.org/en/DOM/File_API/File_System_API">FileSystem API</a> represents entries in a file system. The entries can be a file&nbsp;or a <a href="https://developer.mozilla.org/en/DOM/File_API/File_system_API/DirectoryEntry" rel="internal" title="en/DOM/File_API/File_system_API/DirectoryEntry">DirectoryEntry</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/File_API/File_System_API/Entry">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Entry"</e></m></meta>
	</class>
	<class path="js.html.fs.DirectoryEntry" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/DirectoryEntry.hx" extern="1">
		<extends path="js.html.fs.Entry"/>
		<createReader public="1" set="method"><f a=""><c path="js.html.fs.DirectoryReader"/></f></createReader>
		<getDirectory public="1" set="method"><f a="path:?options:?successCallback:?errorCallback">
	<c path="String"/>
	<d/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></getDirectory>
		<getFile public="1" set="method"><f a="path:?options:?successCallback:?errorCallback">
	<c path="String"/>
	<d/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></getFile>
		<removeRecursively public="1" set="method"><f a="successCallback:?errorCallback">
	<t path="js.html.VoidCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></removeRecursively>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong> <div>This page is not complete.</div>
</div>
<p>The <code>DirectoryEntry</code> interface of the <a title="en/DOM/File_API/File_System_API" rel="internal" href="https://developer.mozilla.org/en/DOM/File_API/File_System_API">FileSystem API</a> represents a directory in a file system.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/File_API/File_System_API/DirectoryEntry">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DirectoryEntry"</e></m></meta>
	</class>
	<class path="js.html.fs.DirectoryReader" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/DirectoryReader.hx" extern="1">
		<readEntries public="1" set="method"><f a="successCallback:?errorCallback">
	<t path="js.html.fs.EntriesCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></readEntries>
		<haxe_doc><![CDATA[<div><strong>`DRAFT</strong> <div>This page is not complete.</div>
</div>
<p>The <code>DirectoryReader</code> interface of the <a title="en/DOM/File_API/File_System_API" rel="internal" href="https://developer.mozilla.org/en/DOM/File_API/File_System_API">FileSystem API</a> lets a user list files and directories in a directory.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/File_API/File_System_API/DirectoryReader">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DirectoryReader"</e></m></meta>
	</class>
	<typedef path="js.html.fs.EntriesCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/EntriesCallback.hx"><f a="">
	<c path="js.html.fs.EntryArray"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.fs.EntryArray" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/EntryArray.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.fs.Entry"/>
</f></item>
		<meta><m n=":native"><e>"EntryArray"</e></m></meta>
	</class>
	<typedef path="js.html.fs.EntryCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/EntryCallback.hx"><f a="">
	<c path="js.html.fs.Entry"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.fs.ErrorCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/ErrorCallback.hx"><f a="">
	<c path="js.html.fs.FileError"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.fs.FileError" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/FileError.hx" extern="1">
		<ABORT_ERR public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The file operation was aborted, probably due to a call to the <code>FileReader</code> <code>abort()</code>&nbsp;method.]]></haxe_doc>
		</ABORT_ERR>
		<ENCODING_ERR public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>The file data cannot be accurately represented in a data URL.</haxe_doc>
		</ENCODING_ERR>
		<INVALID_MODIFICATION_ERR public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></INVALID_MODIFICATION_ERR>
		<INVALID_STATE_ERR public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></INVALID_STATE_ERR>
		<NOT_FOUND_ERR public="1" get="inline" set="null" line="43" static="1">
			<x path="Int"/>
			<haxe_doc>File not found.</haxe_doc>
		</NOT_FOUND_ERR>
		<NOT_READABLE_ERR public="1" get="inline" set="null" line="46" static="1">
			<x path="Int"/>
			<haxe_doc>File could not be read.</haxe_doc>
		</NOT_READABLE_ERR>
		<NO_MODIFICATION_ALLOWED_ERR public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></NO_MODIFICATION_ALLOWED_ERR>
		<PATH_EXISTS_ERR public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></PATH_EXISTS_ERR>
		<QUOTA_EXCEEDED_ERR public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></QUOTA_EXCEEDED_ERR>
		<SECURITY_ERR public="1" get="inline" set="null" line="55" static="1">
			<x path="Int"/>
			<haxe_doc>The file could not be accessed for security reasons.</haxe_doc>
		</SECURITY_ERR>
		<SYNTAX_ERR public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></SYNTAX_ERR>
		<TYPE_MISMATCH_ERR public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></TYPE_MISMATCH_ERR>
		<code public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The <a title="en/nsIDOMFileError#Error codes" rel="internal" href="https://developer.mozilla.org/en/nsIDOMFileError#Error_codes">error code</a>.]]></haxe_doc>
		</code>
		<haxe_doc><![CDATA[Represents an error that occurs while using the <code><a rel="custom" href="/api/js/html/FileReader">FileReader</a></code>
 interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/FileError">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"FileError"</e></m></meta>
	</class>
	<class path="js.html.fs.FileSystem" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/FileSystem.hx" extern="1">
		<name public="1" set="null"><c path="String"/></name>
		<root public="1" set="null"><c path="js.html.fs.DirectoryEntry"/></root>
		<meta><m n=":native"><e>"DOMFileSystem"</e></m></meta>
	</class>
	<typedef path="js.html.fs.FileSystemCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/FileSystemCallback.hx"><f a="">
	<c path="js.html.fs.FileSystem"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.fs.Metadata" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/Metadata.hx" extern="1">
		<modificationTime public="1" set="null"><c path="Date"/></modificationTime>
		<size public="1" set="null"><x path="Int"/></size>
		<haxe_doc><![CDATA[Metadata is structured data about data. Metadata which is included with SVG content should be specified within <code>metadata</code> elements. The contents of the <code>metadata</code> should be elements from other XML namespaces such as RDF, FOAF, etc.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/SVG/Element/metadata">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Metadata"</e></m></meta>
	</class>
	<typedef path="js.html.fs.MetadataCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/fs/MetadataCallback.hx"><f a="">
	<c path="js.html.fs.Metadata"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.idb.Any" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/Any.hx" extern="1"><meta><m n=":native"><e>"IDBAny"</e></m></meta></class>
	<class path="js.html.idb.Database" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/Database.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>Name of the connected database.</haxe_doc>
		</name>
		<objectStoreNames public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc><![CDATA[A list of the names of the <a title="en/IndexedDB#gloss object store" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_object_store">object stores</a> currently in the connected database.]]></haxe_doc>
		</objectStoreNames>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onversionchange public="1"><t path="js.html.EventListener"/></onversionchange>
		<version public="1" set="null">
			<c path="js.html.idb.Any"/>
			<haxe_doc>The version of the connected database. When a database is first created, this attribute is the empty string.</haxe_doc>
		</version>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<createObjectStore public="1" set="method"><f a="name:?options">
	<c path="String"/>
	<d/>
	<c path="js.html.idb.ObjectStore"/>
</f></createObjectStore>
		<deleteObjectStore public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></deleteObjectStore>
		<setVersion public="1" set="method"><f a="version">
	<c path="String"/>
	<c path="js.html.idb.VersionChangeRequest"/>
</f></setVersion>
		<transaction public="1" set="method">
			<f a="storeName:mode">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.idb.Transaction"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction">IDBTransaction</a> object, and starts a transaction in a separate thread. &nbsp;The method returns a transaction object (<a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction"><code>IDBTransaction</code></a>) containing the <a title="en/IndexedDB/IDBTransaction#objectStore()" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#objectStore()">objectStore()</a> method, which you can use to access your object store.&nbsp;</p>

<div id="section_22"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>storeNames</dt> <dd>The names of object stores and indexes that are in the scope of the new transaction. Specify only the object stores that you need to access.</dd> <dt>mode</dt> <dd><em>Optional</em>. The types of access that can be performed in the transaction. Transactions are opened in one of three modes: <code>READ_ONLY</code>, <code>READ_WRITE</code>, and <code>VERSION_CHANGE</code>. If you don't provide the parameter, the default access mode is <code>READ_ONLY</code>. To avoid slowing things down, don't open a <code>READ_WRITE</code> transaction, unless you actually need to write into the database.</dd>
</dl>
</div><div id="section_23"><span id="Sample_code"></span><h5 class="editable">Sample code</h5>
<p>To start a transaction with the following scope, you can use the code snippets in the table. As noted earlier:</p>
<ul> <li>Add prefixes to the methods in WebKit browsers, (that is, instead of <code>IDBTransaction.READ_ONLY</code>, use <code>webkitIDBTransaction.READ_ONLY</code>).</li> <li>The default mode is <code>READ_ONLY</code>, so you don't really have to specify it. Of course, if you need to write into the object store, you can open the transaction in the <code>READ_WRITE</code> mode.</li>
</ul>
<table class="standard-table"> <thead> <tr> <th scope="col" width="185">Scope</th> <th scope="col" width="1018">Code</th> </tr> <tr> <td>Single object store</td> <td> <p><code>var transaction = db.transaction(['my-store-name'], IDBTransaction.READ_ONLY); </code></p> <p>Alternatively:</p> <p><code>var transaction = db.transaction('my-store-name', IDBTransaction.READ_ONLY);</code></p> </td> </tr> <tr> <td>Multiple object stores</td> <td><code>var transaction = db.transaction(['my-store-name', 'my-store-name2'], IDBTransaction.READ_ONLY);</code></td> </tr> <tr> <td>All object stores</td> <td> <p><code>var transaction = db.transaction(db.objectStoreNames, IDBTransaction.READ_ONLY);</code></p> <p>You cannot pass an empty array into the storeNames parameter, such as in the following: <code>var transaction = db.transaction([], IDBTransaction.READ_ONLY);.</code></p> <div class="warning"><strong>Warning:</strong>&nbsp; Accessing all obejct stores under the <code>READ_WRITE</code> mode means that you can run only that transaction. You cannot have writing transactions with overlapping scopes.</div> </td> </tr> </thead> <tbody> </tbody>
</table>
</div><div id="section_24"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeRequest">IDBTransaction</a></code></dt> <dd>The transaction object.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Exception</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The error is thrown for one of two reasons: <ul> <li>The <code>close()</code> method has been called on this IDBDatabase instance.</li> <li>The object store has been deleted or removed.</li> </ul> </td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code></td> <td>One of the object stores doesn't exist in the connected database.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads>
				<transaction public="1" set="method">
					<f a="storeNames:mode">
						<c path="js.html.DOMStringList"/>
						<c path="String"/>
						<c path="js.html.idb.Transaction"/>
					</f>
					<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction">IDBTransaction</a> object, and starts a transaction in a separate thread. &nbsp;The method returns a transaction object (<a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction"><code>IDBTransaction</code></a>) containing the <a title="en/IndexedDB/IDBTransaction#objectStore()" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#objectStore()">objectStore()</a> method, which you can use to access your object store.&nbsp;</p>

<div id="section_22"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>storeNames</dt> <dd>The names of object stores and indexes that are in the scope of the new transaction. Specify only the object stores that you need to access.</dd> <dt>mode</dt> <dd><em>Optional</em>. The types of access that can be performed in the transaction. Transactions are opened in one of three modes: <code>READ_ONLY</code>, <code>READ_WRITE</code>, and <code>VERSION_CHANGE</code>. If you don't provide the parameter, the default access mode is <code>READ_ONLY</code>. To avoid slowing things down, don't open a <code>READ_WRITE</code> transaction, unless you actually need to write into the database.</dd>
</dl>
</div><div id="section_23"><span id="Sample_code"></span><h5 class="editable">Sample code</h5>
<p>To start a transaction with the following scope, you can use the code snippets in the table. As noted earlier:</p>
<ul> <li>Add prefixes to the methods in WebKit browsers, (that is, instead of <code>IDBTransaction.READ_ONLY</code>, use <code>webkitIDBTransaction.READ_ONLY</code>).</li> <li>The default mode is <code>READ_ONLY</code>, so you don't really have to specify it. Of course, if you need to write into the object store, you can open the transaction in the <code>READ_WRITE</code> mode.</li>
</ul>
<table class="standard-table"> <thead> <tr> <th scope="col" width="185">Scope</th> <th scope="col" width="1018">Code</th> </tr> <tr> <td>Single object store</td> <td> <p><code>var transaction = db.transaction(['my-store-name'], IDBTransaction.READ_ONLY); </code></p> <p>Alternatively:</p> <p><code>var transaction = db.transaction('my-store-name', IDBTransaction.READ_ONLY);</code></p> </td> </tr> <tr> <td>Multiple object stores</td> <td><code>var transaction = db.transaction(['my-store-name', 'my-store-name2'], IDBTransaction.READ_ONLY);</code></td> </tr> <tr> <td>All object stores</td> <td> <p><code>var transaction = db.transaction(db.objectStoreNames, IDBTransaction.READ_ONLY);</code></p> <p>You cannot pass an empty array into the storeNames parameter, such as in the following: <code>var transaction = db.transaction([], IDBTransaction.READ_ONLY);.</code></p> <div class="warning"><strong>Warning:</strong>&nbsp; Accessing all obejct stores under the <code>READ_WRITE</code> mode means that you can run only that transaction. You cannot have writing transactions with overlapping scopes.</div> </td> </tr> </thead> <tbody> </tbody>
</table>
</div><div id="section_24"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeRequest">IDBTransaction</a></code></dt> <dd>The transaction object.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Exception</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The error is thrown for one of two reasons: <ul> <li>The <code>close()</code> method has been called on this IDBDatabase instance.</li> <li>The object store has been deleted or removed.</li> </ul> </td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code></td> <td>One of the object stores doesn't exist in the connected database.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
				</transaction>
				<transaction public="1" set="method">
					<f a="storeNames:mode">
						<c path="Array"><c path="String"/></c>
						<c path="String"/>
						<c path="js.html.idb.Transaction"/>
					</f>
					<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction">IDBTransaction</a> object, and starts a transaction in a separate thread. &nbsp;The method returns a transaction object (<a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction"><code>IDBTransaction</code></a>) containing the <a title="en/IndexedDB/IDBTransaction#objectStore()" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#objectStore()">objectStore()</a> method, which you can use to access your object store.&nbsp;</p>

<div id="section_22"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>storeNames</dt> <dd>The names of object stores and indexes that are in the scope of the new transaction. Specify only the object stores that you need to access.</dd> <dt>mode</dt> <dd><em>Optional</em>. The types of access that can be performed in the transaction. Transactions are opened in one of three modes: <code>READ_ONLY</code>, <code>READ_WRITE</code>, and <code>VERSION_CHANGE</code>. If you don't provide the parameter, the default access mode is <code>READ_ONLY</code>. To avoid slowing things down, don't open a <code>READ_WRITE</code> transaction, unless you actually need to write into the database.</dd>
</dl>
</div><div id="section_23"><span id="Sample_code"></span><h5 class="editable">Sample code</h5>
<p>To start a transaction with the following scope, you can use the code snippets in the table. As noted earlier:</p>
<ul> <li>Add prefixes to the methods in WebKit browsers, (that is, instead of <code>IDBTransaction.READ_ONLY</code>, use <code>webkitIDBTransaction.READ_ONLY</code>).</li> <li>The default mode is <code>READ_ONLY</code>, so you don't really have to specify it. Of course, if you need to write into the object store, you can open the transaction in the <code>READ_WRITE</code> mode.</li>
</ul>
<table class="standard-table"> <thead> <tr> <th scope="col" width="185">Scope</th> <th scope="col" width="1018">Code</th> </tr> <tr> <td>Single object store</td> <td> <p><code>var transaction = db.transaction(['my-store-name'], IDBTransaction.READ_ONLY); </code></p> <p>Alternatively:</p> <p><code>var transaction = db.transaction('my-store-name', IDBTransaction.READ_ONLY);</code></p> </td> </tr> <tr> <td>Multiple object stores</td> <td><code>var transaction = db.transaction(['my-store-name', 'my-store-name2'], IDBTransaction.READ_ONLY);</code></td> </tr> <tr> <td>All object stores</td> <td> <p><code>var transaction = db.transaction(db.objectStoreNames, IDBTransaction.READ_ONLY);</code></p> <p>You cannot pass an empty array into the storeNames parameter, such as in the following: <code>var transaction = db.transaction([], IDBTransaction.READ_ONLY);.</code></p> <div class="warning"><strong>Warning:</strong>&nbsp; Accessing all obejct stores under the <code>READ_WRITE</code> mode means that you can run only that transaction. You cannot have writing transactions with overlapping scopes.</div> </td> </tr> </thead> <tbody> </tbody>
</table>
</div><div id="section_24"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeRequest">IDBTransaction</a></code></dt> <dd>The transaction object.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Exception</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The error is thrown for one of two reasons: <ul> <li>The <code>close()</code> method has been called on this IDBDatabase instance.</li> <li>The object store has been deleted or removed.</li> </ul> </td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code></td> <td>One of the object stores doesn't exist in the connected database.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
				</transaction>
			</overloads>
		</transaction>
		<haxe_doc><![CDATA[<p>The <code>IDBDatabase</code> interface of the IndexedDB&nbsp;API provides asynchronous access to a <a title="en/IndexedDB#database connection" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#database_connection">connection to a database</a>. Use it to create, manipulate, and delete objects in that database. The interface also provides the only way to get a <a title="en/IndexedDB#gloss transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_transaction">transaction</a>&nbsp;and manage versions on that database.</p>
<p>Inherits from: <a title="en/DOM/EventTarget" rel="internal" href="/api/js/html/EventTarget">EventTarget</a></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabase">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBDatabase"</e></m></meta>
	</class>
	<class path="js.html.idb.Factory" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/Factory.hx" extern="1">
		<cmp public="1" set="method"><f a="first:second">
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.Key"/>
	<x path="Int"/>
</f></cmp>
		<deleteDatabase public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.idb.VersionChangeRequest"/>
</f></deleteDatabase>
		<getDatabaseNames public="1" set="method"><f a=""><c path="js.html.idb.Request"/></f></getDatabaseNames>
		<open public="1" set="method"><f a="name:?version">
	<c path="String"/>
	<x path="Int"/>
	<c path="js.html.idb.OpenDBRequest"/>
</f></open>
		<haxe_doc><![CDATA[<p>The <code>IDBFactory</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB&nbsp;API</a> lets applications asynchronously access the indexed databases. The object that implements the interface is&nbsp; <code>window.indexedDB</code>. You open—that is, create and access—and delete a database with the object and not directly with <code>IDBFactory</code>.</p>
<p>This interface still has vendor prefixes, that is to say, you have to make calls with <code>mozIndexedDB.open()</code> for Firefox and <code>webkitIndexedDB.open()</code> for Chrome.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBFactory">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBFactory"</e></m></meta>
	</class>
	<class path="js.html.idb.Index" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/Index.hx" extern="1">
		<keyPath public="1" set="null"><c path="js.html.idb.Any"/></keyPath>
		<multiEntry public="1" set="null"><x path="Bool"/></multiEntry>
		<name public="1" set="null"><c path="String"/></name>
		<objectStore public="1" set="null"><c path="js.html.idb.ObjectStore"/></objectStore>
		<unique public="1" set="null"><x path="Bool"/></unique>
		<count public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and in a separate thread, returns the number of records within a key range. For example, if you want to see how many records are between keys 1000 and 2000 in an object store, you can write the following: <code> var req = store.count(<a title="en/IndexedDB/IDBKeyRange" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBKeyRange">IDBKeyRange</a>.bound(1000, 2000));</code></p>
<pre>IDBRequest count (
  in optional any key
) raises (IDBDatabaseException);
</pre>
<div id="section_15"><span id="Parameters_3"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be counted.</dd>
</dl></div><div id="section_16"><span id="Returns_3"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_17"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise a <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><count public="1" set="method">
	<f a="?range">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and in a separate thread, returns the number of records within a key range. For example, if you want to see how many records are between keys 1000 and 2000 in an object store, you can write the following: <code> var req = store.count(<a title="en/IndexedDB/IDBKeyRange" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBKeyRange">IDBKeyRange</a>.bound(1000, 2000));</code></p>
<pre>IDBRequest count (
  in optional any key
) raises (IDBDatabaseException);
</pre>
<div id="section_15"><span id="Parameters_3"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be counted.</dd>
</dl></div><div id="section_16"><span id="Returns_3"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_17"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise a <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</count></overloads>
		</count>
		<get public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, finds either:</p>
<ul> <li>The value in the referenced object store that corresponds to the given key.</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>
</ul>
<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title="en/IndexedDB/IDBRequest#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result">result</a></code> of the request object.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>
<pre>IDBRequest get (
  in any key
) raises (IDBDatabaseException);
</pre>
<div id="section_7"><span id="Parameters"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>
</dl>
</div><div id="section_8"><span id="Returns"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_9"><span id="Exceptions"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><get public="1" set="method">
	<f a="key">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, finds either:</p>
<ul> <li>The value in the referenced object store that corresponds to the given key.</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>
</ul>
<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title="en/IndexedDB/IDBRequest#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result">result</a></code> of the request object.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>
<pre>IDBRequest get (
  in any key
) raises (IDBDatabaseException);
</pre>
<div id="section_7"><span id="Parameters"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>
</dl>
</div><div id="section_8"><span id="Returns"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_9"><span id="Exceptions"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</get></overloads>
		</get>
		<getKey public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, finds either:</p>
<ul> <li>The value in the index that corresponds to the given key</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>
</ul>
<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title="en/IndexedDB/IDBRequest#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result">result</a></code> of the request object.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>
<pre>IDBRequest getKey (
  in any key
) raises (IDBDatabaseException);
</pre>
<div id="section_11"><span id="Parameters_2"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>
</dl>
</div><div id="section_12"><span id="Returns_2"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_13"><span id="Exceptions_2"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise a <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><getKey public="1" set="method">
	<f a="key">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, finds either:</p>
<ul> <li>The value in the index that corresponds to the given key</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>
</ul>
<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title="en/IndexedDB/IDBRequest#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result">result</a></code> of the request object.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>
<pre>IDBRequest getKey (
  in any key
) raises (IDBDatabaseException);
</pre>
<div id="section_11"><span id="Parameters_2"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>
</dl>
</div><div id="section_12"><span id="Returns_2"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_13"><span id="Exceptions_2"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise a <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</getKey></overloads>
		</getKey>
		<openCursor public="1" set="method">
			<f a="key:?direction">
				<c path="js.html.idb.Key"/>
				<c path="String"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, creates a <a title="en/IndexedDB#gloss cursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_cursor">cursor</a> over the specified key range. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>
<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title="en/IndexedDB/IDBSuccessEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent">success event</a> is fired on the result object, with its <a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a> set to the new <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object; the <code><a title="en/IndexedDB/IDBCursor#attr value" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value">value</a></code> of the cursor object is set to a structured clone of the referenced value.</li> <li>If no records match the key range, then then an <a title="en/IndexedDB/IDBErrorEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent">error event</a> is fired on the request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR" rel="internal">NOT_FOUND_ERR</a></code> and a suitable <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</li>
</ul>
<pre>IDBRequest openCursor (
  in optional any? range, 
  in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_19"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required <a title="en/indexedDB#gloss direction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_direction">direction</a>. See <a title="en/IndexedDB/IDBCursor#Constants" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants">IDBCursor Constants</a> for possible values.</dd>
</dl>
</div><div id="section_20"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_21"><span id="Exceptions_4"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><openCursor public="1" set="method">
	<f a="?range:?direction">
		<c path="js.html.idb.KeyRange"/>
		<c path="String"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, creates a <a title="en/IndexedDB#gloss cursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_cursor">cursor</a> over the specified key range. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>
<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title="en/IndexedDB/IDBSuccessEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent">success event</a> is fired on the result object, with its <a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a> set to the new <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object; the <code><a title="en/IndexedDB/IDBCursor#attr value" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value">value</a></code> of the cursor object is set to a structured clone of the referenced value.</li> <li>If no records match the key range, then then an <a title="en/IndexedDB/IDBErrorEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent">error event</a> is fired on the request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR" rel="internal">NOT_FOUND_ERR</a></code> and a suitable <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</li>
</ul>
<pre>IDBRequest openCursor (
  in optional any? range, 
  in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_19"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required <a title="en/indexedDB#gloss direction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_direction">direction</a>. See <a title="en/IndexedDB/IDBCursor#Constants" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants">IDBCursor Constants</a> for possible values.</dd>
</dl>
</div><div id="section_20"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_21"><span id="Exceptions_4"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</openCursor></overloads>
		</openCursor>
		<openKeyCursor public="1" set="method">
			<f a="key:?direction">
				<c path="js.html.idb.Key"/>
				<c path="String"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>
<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title="en/IndexedDB/IDBSuccessEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent">success event</a> is fired on the result object, with its <a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a> set to the new <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object; the <code><a title="en/IndexedDB/IDBCursor#attr value" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value">value</a></code> of the cursor object is set to the value of the found record.</li> <li>If no records match the key range, then then an <a title="en/IndexedDB/IDBErrorEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent">error event</a> is fired on the request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR" rel="internal">NOT_FOUND_ERR</a></code> and a suitable <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</li>
</ul>
<pre>IDBRequest openKeyCursor (
  in optional any? range, 
  in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_23"><span id="Parameters_5"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required direction. See <a title="en/IndexedDB/IDBCursor#Constants" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants">IDBCursor Constants</a> for possible values.</dd>
</dl>
</div><div id="section_24"><span id="Returns_5"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_5"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><openKeyCursor public="1" set="method">
	<f a="?range:?direction">
		<c path="js.html.idb.KeyRange"/>
		<c path="String"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>
<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title="en/IndexedDB/IDBSuccessEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent">success event</a> is fired on the result object, with its <a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a> set to the new <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object; the <code><a title="en/IndexedDB/IDBCursor#attr value" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value">value</a></code> of the cursor object is set to the value of the found record.</li> <li>If no records match the key range, then then an <a title="en/IndexedDB/IDBErrorEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent">error event</a> is fired on the request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR" rel="internal">NOT_FOUND_ERR</a></code> and a suitable <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</li>
</ul>
<pre>IDBRequest openKeyCursor (
  in optional any? range, 
  in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_23"><span id="Parameters_5"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required direction. See <a title="en/IndexedDB/IDBCursor#Constants" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants">IDBCursor Constants</a> for possible values.</dd>
</dl>
</div><div id="section_24"><span id="Returns_5"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_5"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</openKeyCursor></overloads>
		</openKeyCursor>
		<haxe_doc><![CDATA[<p>The <code>IDBIndex</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB API</a> provides asynchronous access to an <a title="en/IndexedDB#gloss index" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_index">index</a> in a database. An index is a kind of object store for looking up records in another object store, called the <em>referenced object store</em>. You use this interface to retrieve data.</p>
<p>Inherits from: <a title="en/DOM/EventTarget" rel="internal" href="/api/js/html/EventTarget">EventTarget</a></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBIndex">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBIndex"</e></m></meta>
	</class>
	<class path="js.html.idb.Key" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/Key.hx" extern="1"><meta><m n=":native"><e>"IDBKey"</e></m></meta></class>
	<class path="js.html.idb.KeyRange" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/KeyRange.hx" extern="1">
		<bound public="1" set="method" static="1"><f a="lower:upper:?lowerOpen:?upperOpen">
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.Key"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="js.html.idb.KeyRange"/>
</f></bound>
		<lowerBound public="1" set="method" static="1"><f a="bound:?open">
	<c path="js.html.idb.Key"/>
	<x path="Bool"/>
	<c path="js.html.idb.KeyRange"/>
</f></lowerBound>
		<only public="1" set="method" static="1"><f a="value">
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.KeyRange"/>
</f></only>
		<upperBound public="1" set="method" static="1"><f a="bound:?open">
	<c path="js.html.idb.Key"/>
	<x path="Bool"/>
	<c path="js.html.idb.KeyRange"/>
</f></upperBound>
		<lower public="1" set="null"><c path="js.html.idb.Key"/></lower>
		<lowerOpen public="1" set="null"><x path="Bool"/></lowerOpen>
		<upper public="1" set="null"><c path="js.html.idb.Key"/></upper>
		<upperOpen public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns false if the upper-bound value is included in the key range.</haxe_doc>
		</upperOpen>
		<haxe_doc><![CDATA[The <code>IDBKeyRange</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB API</a> represents a continuous interval over some data type that is used for keys. Records can be retrieved from object stores and indexes using keys or a range of keys. You can limit the range using lower and upper bounds. For example, you can iterate over all values of a key between x and y.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBKeyRange">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBKeyRange"</e></m></meta>
	</class>
	<class path="js.html.idb.ObjectStore" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/ObjectStore.hx" extern="1">
		<autoIncrement public="1" set="null"><x path="Bool"/></autoIncrement>
		<indexNames public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc><![CDATA[A list of the names of <a title="en/IndexedDB#gloss index" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_index">indexes</a> on objects in this object store.]]></haxe_doc>
		</indexNames>
		<keyPath public="1" set="null">
			<c path="js.html.idb.Any"/>
			<haxe_doc><![CDATA[The <a title="en/IndexedDB#gloss key path" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_key_path">key path</a> of this object store. If this attribute is null, the application must provide a key for each modification operation.]]></haxe_doc>
		</keyPath>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of this object store.</haxe_doc>
		</name>
		<transaction public="1" set="null"><c path="js.html.idb.Transaction"/></transaction>
		<add public="1" set="method"><f a="value:?key">
	<d/>
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.Request"/>
</f></add>
		<clear public="1" set="method"><f a=""><c path="js.html.idb.Request"/></f></clear>
		<count public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <a title="IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object and asynchronously count the amount of objects in the object store that match the parameter, a key or a key range. If the parameter is not valid returns an exception.</p>

<div id="section_12"><span id="Parameters_2"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the records to be counted.</dd>
</dl>
</div><div id="section_13"><span id="Returns_3"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_14"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<dl> <dt><code><a href="IDBDatabaseException#DATA_ERR" rel="internal" title="en/IndexedDB/DatabaseException#DATA ERR">DATA_ERR</a></code></dt> <dd>If the object store uses in-line keys or has a key generator, and a key parameter was provided.<br> If the object store uses out-of-line keys and has no key generator, and no key parameter was provided.<br> If the object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.<br> If the key parameter was provided but does not contain a valid key.<br> If there are indexed on this object store, and using their key path on the value parameter yields a value that is not a valid key.</dd> <dt><code><a href="IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>The request was made on a source object that has been deleted or removed.</dd>
</dl></div> Throws DatabaseException.]]></haxe_doc>
			<overloads><count public="1" set="method">
	<f a="?range">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Immediately returns an <a title="IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object and asynchronously count the amount of objects in the object store that match the parameter, a key or a key range. If the parameter is not valid returns an exception.</p>

<div id="section_12"><span id="Parameters_2"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the records to be counted.</dd>
</dl>
</div><div id="section_13"><span id="Returns_3"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_14"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<dl> <dt><code><a href="IDBDatabaseException#DATA_ERR" rel="internal" title="en/IndexedDB/DatabaseException#DATA ERR">DATA_ERR</a></code></dt> <dd>If the object store uses in-line keys or has a key generator, and a key parameter was provided.<br> If the object store uses out-of-line keys and has no key generator, and no key parameter was provided.<br> If the object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.<br> If the key parameter was provided but does not contain a valid key.<br> If there are indexed on this object store, and using their key path on the value parameter yields a value that is not a valid key.</dd> <dt><code><a href="IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>The request was made on a source object that has been deleted or removed.</dd>
</dl></div> Throws DatabaseException.]]></haxe_doc>
</count></overloads>
		</count>
		<createIndex public="1" set="method">
			<f a="name:keyPath:?options">
				<c path="String"/>
				<c path="String"/>
				<d/>
				<c path="js.html.idb.Index"/>
			</f>
			<haxe_doc><![CDATA[<p>Creates and returns a new index in the connected database. Note that this method must be called only from a <a title="en/IndexedDB/IDBTransaction#VERSION CHANGE" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE"><code>VERSION_CHANGE</code></a> transaction callback.</p>
<pre>IDBIndex createIndex (
&nbsp; in DOMString name, 
&nbsp; in DOMString keyPath, 
&nbsp; in Object optionalParameters
) raises (IDBDatabaseException);

</pre>
<div id="section_16"><span id="Parameters_3"></span><h5 class="editable">Parameters</h5>
<dl> <dt>name</dt> <dd>The name of the index to create.</dd> <dt>keyPath</dt> <dd>The key path for the index to use.</dd> <dt>optionalParameters</dt> <dd> <div class="warning"><strong>Warning:</strong> The latest draft of the specification changed this to <code>IDBIndexParameters</code>, which is not yet recognized by any browser</div> <p>Options object whose attributes are optional parameters to the method. It includes the following properties:</p> <table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code>unique</code></td> <td>If true, the index will not allow duplicate values for a single key.</td> </tr> <tr> <td><code>multientry</code></td> <td>If true, the index will add an entry in the index for each array element when the <em>keypath</em> resolves to an Array. If false, it will add one single entry containing the Array.</td> </tr> </tbody> </table> <p>Unknown parameters are ignored.</p> </dd> <dd></dd>
</dl>
</div><div id="section_17"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBIndex" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBIndex">IDBIndex</a></dt> <dd>The newly created index.</dd>
</dl>
</div><div id="section_18"><span id="Exceptions_4"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<dl> <dt><code><a title="en/IndexedDB/DatabaseException#CONSTRAINT ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR">CONSTRAINT_ERR</a></code></dt> <dd>If an index with the same name (based on case-sensitive comparison) already exists in the connected database.</dd> <dt><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>If this method was not called from a <a title="en/IndexedDB/IDBTransaction#VERSION CHANGE" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE"><code>VERSION_CHANGE</code></a> transaction callback.</dd>
</dl></div> Throws DatabaseException.]]></haxe_doc>
			<overloads><createIndex public="1" set="method">
	<f a="name:keyPath:?options">
		<c path="String"/>
		<c path="Array"><c path="String"/></c>
		<d/>
		<c path="js.html.idb.Index"/>
	</f>
	<haxe_doc><![CDATA[<p>Creates and returns a new index in the connected database. Note that this method must be called only from a <a title="en/IndexedDB/IDBTransaction#VERSION CHANGE" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE"><code>VERSION_CHANGE</code></a> transaction callback.</p>
<pre>IDBIndex createIndex (
&nbsp; in DOMString name, 
&nbsp; in DOMString keyPath, 
&nbsp; in Object optionalParameters
) raises (IDBDatabaseException);

</pre>
<div id="section_16"><span id="Parameters_3"></span><h5 class="editable">Parameters</h5>
<dl> <dt>name</dt> <dd>The name of the index to create.</dd> <dt>keyPath</dt> <dd>The key path for the index to use.</dd> <dt>optionalParameters</dt> <dd> <div class="warning"><strong>Warning:</strong> The latest draft of the specification changed this to <code>IDBIndexParameters</code>, which is not yet recognized by any browser</div> <p>Options object whose attributes are optional parameters to the method. It includes the following properties:</p> <table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code>unique</code></td> <td>If true, the index will not allow duplicate values for a single key.</td> </tr> <tr> <td><code>multientry</code></td> <td>If true, the index will add an entry in the index for each array element when the <em>keypath</em> resolves to an Array. If false, it will add one single entry containing the Array.</td> </tr> </tbody> </table> <p>Unknown parameters are ignored.</p> </dd> <dd></dd>
</dl>
</div><div id="section_17"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBIndex" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBIndex">IDBIndex</a></dt> <dd>The newly created index.</dd>
</dl>
</div><div id="section_18"><span id="Exceptions_4"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<dl> <dt><code><a title="en/IndexedDB/DatabaseException#CONSTRAINT ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR">CONSTRAINT_ERR</a></code></dt> <dd>If an index with the same name (based on case-sensitive comparison) already exists in the connected database.</dd> <dt><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>If this method was not called from a <a title="en/IndexedDB/IDBTransaction#VERSION CHANGE" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE"><code>VERSION_CHANGE</code></a> transaction callback.</dd>
</dl></div> Throws DatabaseException.]]></haxe_doc>
</createIndex></overloads>
		</createIndex>
		<delete public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code> object, and removes the record specified by the given key from this object store, and any indexes that reference it, in a separate thread. If no record exists in this object store corresponding to the key, an error event is fired on the returned request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code> and an appropriate <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>. If the record is successfully removed, then a success event is fired on the returned request object, using the <code><a title="en/IndexedDB/IDBTransactionEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent">IDBTransactionEvent</a></code> interface, with the <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to <code>undefined</code>, and <a title="en/IndexedDB/IDBTransactionEvent#attr transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction">transaction</a> set to the transaction in which this object store is opened.</p>
<pre>IDBRequest delete (
  in any key
) raises (IDBDatabaseException); 
</pre>
<div id="section_20"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key to use to identify the record.</dd>
</dl>
</div><div id="section_21"><span id="Returns_5"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_22"><span id="Exceptions_5"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p></div> Throws DatabaseException.]]></haxe_doc>
			<overloads><delete public="1" set="method">
	<f a="keyRange">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Immediately returns an <code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code> object, and removes the record specified by the given key from this object store, and any indexes that reference it, in a separate thread. If no record exists in this object store corresponding to the key, an error event is fired on the returned request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code> and an appropriate <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>. If the record is successfully removed, then a success event is fired on the returned request object, using the <code><a title="en/IndexedDB/IDBTransactionEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent">IDBTransactionEvent</a></code> interface, with the <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to <code>undefined</code>, and <a title="en/IndexedDB/IDBTransactionEvent#attr transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction">transaction</a> set to the transaction in which this object store is opened.</p>
<pre>IDBRequest delete (
  in any key
) raises (IDBDatabaseException); 
</pre>
<div id="section_20"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key to use to identify the record.</dd>
</dl>
</div><div id="section_21"><span id="Returns_5"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_22"><span id="Exceptions_5"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p></div> Throws DatabaseException.]]></haxe_doc>
</delete></overloads>
		</delete>
		<deleteIndex public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></deleteIndex>
		<get public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and retrieves the requested record from the object store in a separate thread. If the operation is successful, then a success event is fired on the returned object, using the <a title="en/IndexedDB/IDBTransactionEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent">IDBTransactionEvent</a> interface, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to the retrieved value, and <code><a title="en/IndexedDB/IDBTransactionEvent#attr transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction">transaction</a></code> set to the transaction in which this object store is opened. If a record does not exist in the object store for the key parameter, then an error event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code> and an appropriate <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This function produces the same result if no record with the given key exists in the database as when a record exists, but with an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>

<div id="section_27"><span id="Parameters_6"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key identifying the record to retrieve.</dd>
</dl>
</div><div id="section_28"><span id="Returns_6"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_29"><span id="Exceptions_7"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<dl> <dt><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></dt> <dd>If the <code>key</code> parameter was not a valid value.</dd> <dt><code><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd>
</dl>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><get public="1" set="method">
	<f a="key">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and retrieves the requested record from the object store in a separate thread. If the operation is successful, then a success event is fired on the returned object, using the <a title="en/IndexedDB/IDBTransactionEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent">IDBTransactionEvent</a> interface, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to the retrieved value, and <code><a title="en/IndexedDB/IDBTransactionEvent#attr transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction">transaction</a></code> set to the transaction in which this object store is opened. If a record does not exist in the object store for the key parameter, then an error event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code> and an appropriate <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This function produces the same result if no record with the given key exists in the database as when a record exists, but with an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>

<div id="section_27"><span id="Parameters_6"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key identifying the record to retrieve.</dd>
</dl>
</div><div id="section_28"><span id="Returns_6"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_29"><span id="Exceptions_7"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<dl> <dt><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></dt> <dd>If the <code>key</code> parameter was not a valid value.</dd> <dt><code><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd>
</dl>
</div> Throws DatabaseException.]]></haxe_doc>
</get></overloads>
		</get>
		<index public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.idb.Index"/>
</f></index>
		<openCursor public="1" set="method">
			<f a="key:?direction">
				<c path="js.html.idb.Key"/>
				<c path="String"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and creates a <a title="en/IndexedDB#gloss cursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_cursor">cursor</a> over the records in this object store, in a separate thread. If there is even a single record that matches the <a title="en/IndexedDB#gloss key range" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_key_range">key range</a>, then a success event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to the <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object for the new cursor. If no records match the key range, then a success event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to null.</p>
<pre>IDBRequest openCursor (
&nbsp; in optional IDBKeyRange range, 
&nbsp; in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_35"><span id="Parameters_8"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd>The key range to use as the cursor's range. If this parameter is unspecified or null, then the range includes all the records in the object store.</dd> <dt>direction</dt> <dd>The cursor's <a title="en/IndexedDB#gloss direction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_direction">direction</a>.</dd>
</dl>
</div><div id="section_36"><span id="Returns_8"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_37"><span id="Exceptions_9"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an IDBDatabaseException with the following code:</p>
<dl> <dt><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>If this object store is not in the scope of any existing transaction on the connected database.</dd>
</dl>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><openCursor public="1" set="method">
	<f a="?range:?direction">
		<c path="js.html.idb.KeyRange"/>
		<c path="String"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and creates a <a title="en/IndexedDB#gloss cursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_cursor">cursor</a> over the records in this object store, in a separate thread. If there is even a single record that matches the <a title="en/IndexedDB#gloss key range" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_key_range">key range</a>, then a success event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to the <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object for the new cursor. If no records match the key range, then a success event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to null.</p>
<pre>IDBRequest openCursor (
&nbsp; in optional IDBKeyRange range, 
&nbsp; in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_35"><span id="Parameters_8"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd>The key range to use as the cursor's range. If this parameter is unspecified or null, then the range includes all the records in the object store.</dd> <dt>direction</dt> <dd>The cursor's <a title="en/IndexedDB#gloss direction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_direction">direction</a>.</dd>
</dl>
</div><div id="section_36"><span id="Returns_8"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_37"><span id="Exceptions_9"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an IDBDatabaseException with the following code:</p>
<dl> <dt><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>If this object store is not in the scope of any existing transaction on the connected database.</dd>
</dl>
</div> Throws DatabaseException.]]></haxe_doc>
</openCursor></overloads>
		</openCursor>
		<put public="1" set="method"><f a="value:?key">
	<d/>
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.Request"/>
</f></put>
		<haxe_doc><![CDATA[The <code>IDBObjectStore</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB API</a> represents an <a title="en/IndexedDB#gloss object store" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_object_store">object store</a> in a database.&nbsp;Records within an object store are sorted according to their keys. This sorting enable fast insertion, look-up, and &nbsp;ordered retrieval.&nbsp;<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBObjectStore">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBObjectStore"</e></m></meta>
	</class>
	<class path="js.html.idb.Request" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/Request.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<error public="1" set="null">
			<c path="js.html.DOMError"/>
			<haxe_doc>Getter throws DatabaseException.</haxe_doc>
		</error>
		<errorCode public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Getter throws DatabaseException.</haxe_doc>
		</errorCode>
		<errorMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc>Getter throws DatabaseException.</haxe_doc>
		</errorMessage>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onsuccess public="1"><t path="js.html.EventListener"/></onsuccess>
		<readyState public="1" set="null"><c path="String"/></readyState>
		<result public="1" set="null">
			<c path="js.html.idb.Any"/>
			<haxe_doc>Getter throws DatabaseException.</haxe_doc>
		</result>
		<source public="1" set="null"><c path="js.html.idb.Any"/></source>
		<transaction public="1" set="null"><c path="js.html.idb.Transaction"/></transaction>
		<haxe_doc><![CDATA[<p>The <code>IDBRequest</code> interface of the IndexedDB&nbsp;API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request.</p>
<p>The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the <code>IDBRequest</code> instance.</p>
<p>Inherits from: <a title="en/DOM/EventTarget" rel="internal" href="/api/js/html/EventTarget">EventTarget</a></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBRequest"</e></m></meta>
	</class>
	<class path="js.html.idb.OpenDBRequest" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/OpenDBRequest.hx" extern="1">
		<extends path="js.html.idb.Request"/>
		<onblocked public="1"><t path="js.html.EventListener"/></onblocked>
		<onupgradeneeded public="1"><t path="js.html.EventListener"/></onupgradeneeded>
		<meta><m n=":native"><e>"IDBOpenDBRequest"</e></m></meta>
	</class>
	<class path="js.html.idb.Transaction" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/Transaction.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<READ_ONLY public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Allows data to be read but not changed.&nbsp;]]></haxe_doc>
		</READ_ONLY>
		<READ_WRITE public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>Allows reading and writing of data in existing data stores to be changed.</haxe_doc>
		</READ_WRITE>
		<VERSION_CHANGE public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Allows any operation to be performed, including ones that delete and create object stores and indexes. This mode is for updating the version number of transactions that were started using the <a title="en/IndexedDB/IDBDatabase#setVersion" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabase#setVersion"><code>setVersion()</code></a> method of <a title="en/IndexedDB/IDBDatabase" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabase">IDBDatabase</a> objects. Transactions of this mode cannot run concurrently with other transactions.]]></haxe_doc>
		</VERSION_CHANGE>
		<db public="1" set="null">
			<c path="js.html.idb.Database"/>
			<haxe_doc>The database connection that this transaction is associated with.</haxe_doc>
		</db>
		<error public="1" set="null"><c path="js.html.DOMError"/></error>
		<mode public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The mode for isolating access to data in the object stores that are in the scope of the transaction. For possible values, see Constants. The default value is <code><a href="#const_read_only" title="#const read only">READ_ONLY</a></code>.]]></haxe_doc>
		</mode>
		<onabort public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[The event handler for the <code>onabort</code> event.]]></haxe_doc>
		</onabort>
		<oncomplete public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[The event handler for the <code>oncomplete</code> event.]]></haxe_doc>
		</oncomplete>
		<onerror public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[The event handler for the <code>error </code>event.]]></haxe_doc>
		</onerror>
		<abort public="1" set="method"><f a=""><x path="Void"/></f></abort>
		<objectStore public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.idb.ObjectStore"/>
</f></objectStore>
		<haxe_doc><![CDATA[<p>The <code>IDBTransaction</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB&nbsp;API</a> provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data are done within transactions. You actually use <code><a title="en/IndexedDB/IDBDatabase" rel="internal" href="/api/js/html/idb/Database">IDBDatabase</a></code> to start transactions and use <code>IDBTransaction</code> to set the mode of the transaction and access an object store and make your request. You can also use it to abort transactions.</p>
<p>Inherits from: <a title="en/DOM/EventTarget" rel="internal" href="/api/js/html/EventTarget">EventTarget</a></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBTransaction"</e></m></meta>
	</class>
	<class path="js.html.idb.VersionChangeRequest" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/idb/VersionChangeRequest.hx" extern="1">
		<extends path="js.html.idb.Request"/>
		<onblocked public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>The event handler for the blocked event.</haxe_doc>
		</onblocked>
		<haxe_doc><![CDATA[<div class="warning"><strong>Warning: </strong> The latest specification does not include this interface anymore as the <code>IDBDatabase.setVersion()</code> method has been removed. However, it is still implemented in not up-to-date browsers. See the compatibility table for version details.<br> The new way to do it is to use the <a title="en/IndexedDB/IDBOpenDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBOpenDBRequest"><code>IDBOpenDBRequest</code></a> interface which has now the <code>onblocked</code> handler and the newly needed <code>onupgradeneeded</code> one.</div>
<p>The <code>IDBVersionChangeRequest</code> interface the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB API </a>represents a request to change the version of a database. It is used only by the <a title="en/IndexedDB/IDBDatabase#setVersion" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabase#setVersion"><code>setVersion()</code></a> method of <code><a title="en/IndexedDB/IDBDatabase" rel="internal" href="/api/js/html/idb/Database">IDBDatabase</a></code>.</p>
<p>Inherits from:&nbsp;<code><a title="en/IndexedDB/IDBRequest" rel="internal" href="/api/js/html/idb/Request">IDBRequest</a></code></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeRequest">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBVersionChangeRequest"</e></m></meta>
	</class>
	<class path="js.html.rtc.MediaStream" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/rtc/MediaStream.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<ENDED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ENDED>
		<LIVE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></LIVE>
		<audioTracks public="1" set="null"><c path="js.html.rtc.MediaStreamTrackList"/></audioTracks>
		<label public="1" set="null"><c path="String"/></label>
		<onended public="1"><t path="js.html.EventListener"/></onended>
		<readyState public="1" set="null"><x path="Int"/></readyState>
		<videoTracks public="1" set="null"><c path="js.html.rtc.MediaStreamTrackList"/></videoTracks>
		<new public="1" set="method"><f a="audioTracks:videoTracks">
	<c path="js.html.rtc.MediaStreamTrackList"/>
	<c path="js.html.rtc.MediaStreamTrackList"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"MediaStream"</e></m></meta>
	</class>
	<class path="js.html.rtc.LocalMediaStream" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/rtc/LocalMediaStream.hx" extern="1">
		<extends path="js.html.rtc.MediaStream"/>
		<stop public="1" set="method"><f a=""><x path="Void"/></f></stop>
		<meta><m n=":native"><e>"LocalMediaStream"</e></m></meta>
	</class>
	<class path="js.html.rtc.MediaStreamTrack" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/rtc/MediaStreamTrack.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<ENDED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ENDED>
		<LIVE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></LIVE>
		<MUTED public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></MUTED>
		<enabled public="1"><x path="Bool"/></enabled>
		<kind public="1" set="null"><c path="String"/></kind>
		<label public="1" set="null"><c path="String"/></label>
		<onended public="1"><t path="js.html.EventListener"/></onended>
		<onmute public="1"><t path="js.html.EventListener"/></onmute>
		<onunmute public="1"><t path="js.html.EventListener"/></onunmute>
		<readyState public="1" set="null"><x path="Int"/></readyState>
		<meta><m n=":native"><e>"MediaStreamTrack"</e></m></meta>
	</class>
	<class path="js.html.rtc.MediaStreamTrackList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/rtc/MediaStreamTrackList.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<length public="1" set="null"><x path="Int"/></length>
		<onaddtrack public="1"><t path="js.html.EventListener"/></onaddtrack>
		<onremovetrack public="1"><t path="js.html.EventListener"/></onremovetrack>
		<add public="1" set="method"><f a="track">
	<c path="js.html.rtc.MediaStreamTrack"/>
	<x path="Void"/>
</f></add>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.rtc.MediaStreamTrack"/>
</f></item>
		<remove public="1" set="method"><f a="track">
	<c path="js.html.rtc.MediaStreamTrack"/>
	<x path="Void"/>
</f></remove>
		<meta><m n=":native"><e>"MediaStreamTrackList"</e></m></meta>
	</class>
	<class path="js.html.rtc.NavigatorUserMediaError" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/rtc/NavigatorUserMediaError.hx" extern="1">
		<PERMISSION_DENIED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></PERMISSION_DENIED>
		<code public="1" set="null"><x path="Int"/></code>
		<meta><m n=":native"><e>"NavigatorUserMediaError"</e></m></meta>
	</class>
	<typedef path="js.html.rtc.NavigatorUserMediaErrorCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/rtc/NavigatorUserMediaErrorCallback.hx"><f a="">
	<c path="js.html.rtc.NavigatorUserMediaError"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.rtc.NavigatorUserMediaSuccessCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/rtc/NavigatorUserMediaSuccessCallback.hx"><f a="">
	<c path="js.html.rtc.LocalMediaStream"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.sql.Database" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/Database.hx" extern="1">
		<version public="1" set="null"><c path="String"/></version>
		<changeVersion public="1" set="method"><f a="oldVersion:newVersion:?callback_:?errorCallback:?successCallback">
	<c path="String"/>
	<c path="String"/>
	<t path="js.html.sql.TransactionCallback"/>
	<t path="js.html.sql.TransactionErrorCallback"/>
	<t path="js.html.VoidCallback"/>
	<x path="Void"/>
</f></changeVersion>
		<readTransaction public="1" set="method"><f a="callback_:?errorCallback:?successCallback">
	<t path="js.html.sql.TransactionCallback"/>
	<t path="js.html.sql.TransactionErrorCallback"/>
	<t path="js.html.VoidCallback"/>
	<x path="Void"/>
</f></readTransaction>
		<transaction public="1" set="method"><f a="callback_:?errorCallback:?successCallback">
	<t path="js.html.sql.TransactionCallback"/>
	<t path="js.html.sql.TransactionErrorCallback"/>
	<t path="js.html.VoidCallback"/>
	<x path="Void"/>
</f></transaction>
		<haxe_doc><![CDATA[<div><p>This content covers features introduced in <a rel="custom" href="https://developer.mozilla.org/en/Firefox_3_for_developers">Firefox 3</a>.</p></div>
<p></p>
<p>This document provides a high-level overview of the overall database design of the <a title="en/Places" rel="internal" href="https://developer.mozilla.org/en/Places">Places</a> system. Places is designed to be a complete replacement for the Firefox bookmarks and history systems using <a title="en/Storage" rel="internal" href="/api/js/html/Storage">Storage.</a></p>
<p>View the <a class=" external" rel="external" href="http://people.mozilla.org/~dietrich/places-erd.png" title="http://people.mozilla.org/~dietrich/places-erd.png" target="_blank">schema diagram</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/The_Places_database">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Database"</e></m></meta>
	</class>
	<typedef path="js.html.sql.DatabaseCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/DatabaseCallback.hx"><f a="">
	<c path="js.html.sql.Database"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.sql.Error" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/Error.hx" extern="1">
		<CONSTRAINT_ERR public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></CONSTRAINT_ERR>
		<DATABASE_ERR public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></DATABASE_ERR>
		<QUOTA_ERR public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></QUOTA_ERR>
		<SYNTAX_ERR public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></SYNTAX_ERR>
		<TIMEOUT_ERR public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></TIMEOUT_ERR>
		<TOO_LARGE_ERR public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></TOO_LARGE_ERR>
		<UNKNOWN_ERR public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></UNKNOWN_ERR>
		<VERSION_ERR public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></VERSION_ERR>
		<code public="1" set="null"><x path="Int"/></code>
		<message public="1" set="null"><c path="String"/></message>
		<meta><m n=":native"><e>"SQLError"</e></m></meta>
	</class>
	<class path="js.html.sql.ResultSet" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/ResultSet.hx" extern="1">
		<insertId public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Getter throws DOMException.</haxe_doc>
		</insertId>
		<rows public="1" set="null"><c path="js.html.sql.ResultSetRowList"/></rows>
		<rowsAffected public="1" set="null"><x path="Int"/></rowsAffected>
		<meta><m n=":native"><e>"SQLResultSet"</e></m></meta>
	</class>
	<class path="js.html.sql.ResultSetRowList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/ResultSetRowList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<d/>
</f></item>
		<meta><m n=":native"><e>"SQLResultSetRowList"</e></m></meta>
	</class>
	<typedef path="js.html.sql.StatementCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/StatementCallback.hx"><f a=":">
	<c path="js.html.sql.Transaction"/>
	<c path="js.html.sql.ResultSet"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.sql.StatementErrorCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/StatementErrorCallback.hx"><f a=":">
	<c path="js.html.sql.Transaction"/>
	<c path="js.html.sql.Error"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.sql.Transaction" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/Transaction.hx" extern="1">
		<executeSql public="1" set="method"><f a="sqlStatement:arguments:?callback_:?errorCallback">
	<c path="String"/>
	<c path="Array"><d/></c>
	<t path="js.html.sql.StatementCallback"/>
	<t path="js.html.sql.StatementErrorCallback"/>
	<x path="Void"/>
</f></executeSql>
		<meta><m n=":native"><e>"SQLTransaction"</e></m></meta>
	</class>
	<typedef path="js.html.sql.TransactionCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/TransactionCallback.hx"><f a="">
	<c path="js.html.sql.Transaction"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.sql.TransactionErrorCallback" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/sql/TransactionErrorCallback.hx"><f a="">
	<c path="js.html.sql.Error"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.svg.Angle" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Angle.hx" extern="1">
		<SVG_ANGLETYPE_DEG public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type was explicitly set to degrees.</haxe_doc>
		</SVG_ANGLETYPE_DEG>
		<SVG_ANGLETYPE_GRAD public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is gradians.</haxe_doc>
		</SVG_ANGLETYPE_GRAD>
		<SVG_ANGLETYPE_RAD public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is radians.</haxe_doc>
		</SVG_ANGLETYPE_RAD>
		<SVG_ANGLETYPE_UNKNOWN public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_ANGLETYPE_UNKNOWN>
		<SVG_ANGLETYPE_UNSPECIFIED public="1" get="inline" set="null" line="45" static="1">
			<x path="Int"/>
			<haxe_doc>No unit type was provided (i.e., a unitless value was specified). For angles, a unitless value is treated the same as if degrees were specified.</haxe_doc>
		</SVG_ANGLETYPE_UNSPECIFIED>
		<unitType public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The type of the value as specified by one of the SVG_ANGLETYPE_* constants defined on this interface.</haxe_doc>
		</unitType>
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value as a floating point value, in user units. Setting this attribute will cause <code>valueInSpecifiedUnits</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p>]]></haxe_doc>
		</value>
		<valueAsString public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>The value as a string value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code>, <code>valueInSpecifiedUnits</code> and <code>unitType</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong></p> <ul> <li>a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>SYNTAX_ERR</code> is raised if the assigned string cannot be parsed as a valid <a title="https://developer.mozilla.org/en/SVG/Content_type#Angle" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Angle">&lt;angle&gt;</a>.</li> <li>a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</li> </ul> Setter throws DOMException.]]></haxe_doc>
		</valueAsString>
		<valueInSpecifiedUnits public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value as a floating point value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p>]]></haxe_doc>
		</valueInSpecifiedUnits>
		<convertToSpecifiedUnits public="1" set="method"><f a="unitType">
	<x path="Int"/>
	<x path="Void"/>
</f></convertToSpecifiedUnits>
		<newValueSpecifiedUnits public="1" set="method"><f a="unitType:valueInSpecifiedUnits">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></newValueSpecifiedUnits>
		<haxe_doc><![CDATA[<p>The <code>SVGAngle</code> interface correspond to the <a title="https://developer.mozilla.org/en/SVG/Content_type#Angle" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Angle">&lt;angle&gt;</a> basic data type.</p>
<p>An <code>SVGAngle</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGAngle">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGAngle"</e></m></meta>
	</class>
	<class path="js.html.svg.AnimatedLength" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/AnimatedLength.hx" extern="1">
		<animVal public="1" set="null">
			<c path="js.html.svg.Length"/>
			<haxe_doc><![CDATA[If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as <code>baseVal</code>.]]></haxe_doc>
		</animVal>
		<baseVal public="1" set="null">
			<c path="js.html.svg.Length"/>
			<haxe_doc>The base value of the given attribute before applying any animations.</haxe_doc>
		</baseVal>
		<haxe_doc><![CDATA[The <code>SVGAnimatedLength</code> interface is used for attributes of basic type <a title="https://developer.mozilla.org/en/SVG/Content_type#Length" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Length">&lt;length&gt;</a> which can be animated.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/SVGAnimatedLength">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGAnimatedLength"</e></m></meta>
	</class>
	<class path="js.html.svg.AnimatedPreserveAspectRatio" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/AnimatedPreserveAspectRatio.hx" extern="1">
		<animVal public="1" set="null">
			<c path="js.html.svg.PreserveAspectRatio"/>
			<haxe_doc><![CDATA[A read only <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/SVGPreserveAspectRatio">SVGPreserveAspectRatio</a></code>
 representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/SVGPreserveAspectRatio">SVGPreserveAspectRatio</a></code>
 will have the same contents as <code>baseVal</code>. The object referenced by <code>animVal</code> is always distinct from the one referenced by <code>baseVal</code>, even when the attribute is not animated.]]></haxe_doc>
		</animVal>
		<baseVal public="1" set="null">
			<c path="js.html.svg.PreserveAspectRatio"/>
			<haxe_doc>The base value of the given attribute before applying any animations.</haxe_doc>
		</baseVal>
		<haxe_doc><![CDATA[The <code>SVGAnimatedPreserveAspectRatio</code> interface is used for attributes of type <code><a rel="custom" href="/api/js/html/svg/PreserveAspectRatio">SVGPreserveAspectRatio</a></code>
 which can be animated.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGAnimatedPreserveAspectRatio">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGAnimatedPreserveAspectRatio"</e></m></meta>
	</class>
	<class path="js.html.svg.AnimatedRect" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/AnimatedRect.hx" extern="1">
		<animVal public="1" set="null">
			<c path="js.html.svg.Rect"/>
			<haxe_doc><![CDATA[A read only <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/SVGRect">SVGRect</a></code>
 representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/SVGRect">SVGRect</a></code>
 will have the same contents as <code>baseVal</code>. The object referenced by <code>animVal</code> will always be distinct from the one referenced by <code>baseVal</code>, even when the attribute is not animated.]]></haxe_doc>
		</animVal>
		<baseVal public="1" set="null">
			<c path="js.html.svg.Rect"/>
			<haxe_doc>The base value of the given attribute before applying any animations.</haxe_doc>
		</baseVal>
		<haxe_doc><![CDATA[The <code>SVGAnimatedRect</code> interface is used for attributes of basic <code><a rel="custom" href="/api/js/html/svg/Rect">SVGRect</a></code>
 which can be animated.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/SVGAnimatedRect">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGAnimatedRect"</e></m></meta>
	</class>
	<class path="js.html.svg.Document" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Document.hx" extern="1">
		<extends path="js.html.Document"/>
		<rootElement public="1" set="null"><c path="js.html.svg.SVGElement"/></rootElement>
		<meta><m n=":native"><e>"SVGDocument"</e></m></meta>
	</class>
	<class path="js.html.svg.Element" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Element.hx" extern="1">
		<extends path="js.html.Element"/>
		<ownerSVGElement public="1" set="null">
			<c path="js.html.svg.SVGElement"/>
			<haxe_doc><![CDATA[The nearest ancestor <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element. <code>Null</code> if the given element is the outermost svg element.]]></haxe_doc>
		</ownerSVGElement>
		<viewportElement public="1" set="null">
			<c path="js.html.svg.Element"/>
			<haxe_doc><![CDATA[The element which established the current viewport. Often, the nearest ancestor <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element. <code>Null</code> if the given element is the outermost svg element.]]></haxe_doc>
		</viewportElement>
		<xmlbase public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/xml%3Abase" class="new">xml:base</a></code> on the given element. Setter throws DOMException.]]></haxe_doc>
		</xmlbase>
		<haxe_doc><![CDATA[All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the <code>SVGElement</code> interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGElement"</e></m></meta>
	</class>
	<class path="js.html.svg.Length" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Length.hx" extern="1">
		<SVG_LENGTHTYPE_CM public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the cm units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_CM>
		<SVG_LENGTHTYPE_EMS public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the em units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_EMS>
		<SVG_LENGTHTYPE_EXS public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the ex units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_EXS>
		<SVG_LENGTHTYPE_IN public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the in units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_IN>
		<SVG_LENGTHTYPE_MM public="1" get="inline" set="null" line="45" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the mm units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_MM>
		<SVG_LENGTHTYPE_NUMBER public="1" get="inline" set="null" line="48" static="1">
			<x path="Int"/>
			<haxe_doc>No unit type was provided (i.e., a unitless value was specified), which indicates a value in user units.</haxe_doc>
		</SVG_LENGTHTYPE_NUMBER>
		<SVG_LENGTHTYPE_PC public="1" get="inline" set="null" line="51" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the pc units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_PC>
		<SVG_LENGTHTYPE_PERCENTAGE public="1" get="inline" set="null" line="54" static="1">
			<x path="Int"/>
			<haxe_doc>A percentage value was specified.</haxe_doc>
		</SVG_LENGTHTYPE_PERCENTAGE>
		<SVG_LENGTHTYPE_PT public="1" get="inline" set="null" line="57" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the pt units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_PT>
		<SVG_LENGTHTYPE_PX public="1" get="inline" set="null" line="60" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the px units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_PX>
		<SVG_LENGTHTYPE_UNKNOWN public="1" get="inline" set="null" line="63" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_LENGTHTYPE_UNKNOWN>
		<unitType public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The type of the value as specified by one of the SVG_LENGTHTYPE_* constants defined on this interface.</haxe_doc>
		</unitType>
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value as a floating point value, in user units. Setting this attribute will cause <code>valueInSpecifiedUnits</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p> Getter throws DOMException. Setter throws DOMException.]]></haxe_doc>
		</value>
		<valueAsString public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>The value as a string value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code>, <code>valueInSpecifiedUnits</code> and <code>unitType</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong></p> <ul> <li>a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>SYNTAX_ERR</code> is raised if the assigned string cannot be parsed as a valid <a title="https://developer.mozilla.org/en/SVG/Content_type#Length" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Length">&lt;length&gt;</a>.</li> <li>a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</li> </ul> Setter throws DOMException.]]></haxe_doc>
		</valueAsString>
		<valueInSpecifiedUnits public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value as a floating point value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p>]]></haxe_doc>
		</valueInSpecifiedUnits>
		<convertToSpecifiedUnits public="1" set="method"><f a="unitType">
	<x path="Int"/>
	<x path="Void"/>
</f></convertToSpecifiedUnits>
		<newValueSpecifiedUnits public="1" set="method"><f a="unitType:valueInSpecifiedUnits">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></newValueSpecifiedUnits>
		<haxe_doc><![CDATA[<p>The <code>SVGLength</code> interface correspond to the <a title="https://developer.mozilla.org/en/SVG/Content_type#Length" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Length">&lt;length&gt;</a> basic data type.</p>
<p>An <code>SVGLength</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/SVGLength">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGLength"</e></m></meta>
	</class>
	<class path="js.html.svg.Matrix" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Matrix.hx" extern="1">
		<a public="1"><x path="Float"/></a>
		<b public="1"><x path="Float"/></b>
		<c public="1"><x path="Float"/></c>
		<d public="1"><x path="Float"/></d>
		<e public="1"><x path="Float"/></e>
		<f public="1"><x path="Float"/></f>
		<flipX public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></flipX>
		<flipY public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></flipY>
		<inverse public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></inverse>
		<multiply public="1" set="method"><f a="secondMatrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Matrix"/>
</f></multiply>
		<rotate public="1" set="method"><f a="angle">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></rotate>
		<rotateFromVector public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></rotateFromVector>
		<scale public="1" set="method"><f a="scaleFactor">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></scale>
		<scaleNonUniform public="1" set="method"><f a="scaleFactorX:scaleFactorY">
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></scaleNonUniform>
		<skewX public="1" set="method"><f a="angle">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></skewX>
		<skewY public="1" set="method"><f a="angle">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></skewY>
		<translate public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></translate>
		<haxe_doc><![CDATA[<p>Many of SVG's graphics operations utilize 2x3 matrices of the form:</p>
<pre>[a c e]
[b d f]</pre>
<p>which, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become:</p>
<pre>[a c e]
[b d f]
[0 0 1]
</pre>
<p>An <code>SVGMatrix</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGMatrix">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGMatrix"</e></m></meta>
	</class>
	<class path="js.html.svg.Number" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Number.hx" extern="1">
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value of the given attribute.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is Raised on an attempt to change the value of a read only attribute.</p>]]></haxe_doc>
		</value>
		<haxe_doc><![CDATA[<p>The <code>SVGNumber</code> interface correspond to the <a title="https://developer.mozilla.org/en/SVG/Content_type#Number" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Number">&lt;number&gt;</a> basic data type.</p>
<p>An <code>SVGNumber</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGNumber">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGNumber"</e></m></meta>
	</class>
	<class path="js.html.svg.Point" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Point.hx" extern="1">
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<matrixTransform public="1" set="method"><f a="matrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Point"/>
</f></matrixTransform>
		<meta><m n=":native"><e>"SVGPoint"</e></m></meta>
	</class>
	<class path="js.html.svg.PreserveAspectRatio" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/PreserveAspectRatio.hx" extern="1">
		<SVG_MEETORSLICE_MEET public="1" get="inline" set="null" line="35" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>meet</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_MEETORSLICE_MEET>
		<SVG_MEETORSLICE_SLICE public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>slice</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_MEETORSLICE_SLICE>
		<SVG_MEETORSLICE_UNKNOWN public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc>The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_MEETORSLICE_UNKNOWN>
		<SVG_PRESERVEASPECTRATIO_NONE public="1" get="inline" set="null" line="46" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>none</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_NONE>
		<SVG_PRESERVEASPECTRATIO_UNKNOWN public="1" get="inline" set="null" line="49" static="1">
			<x path="Int"/>
			<haxe_doc>The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_PRESERVEASPECTRATIO_UNKNOWN>
		<SVG_PRESERVEASPECTRATIO_XMAXYMAX public="1" get="inline" set="null" line="53" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMaxYMax</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMAXYMAX>
		<SVG_PRESERVEASPECTRATIO_XMAXYMID public="1" get="inline" set="null" line="57" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMaxYMid</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMAXYMID>
		<SVG_PRESERVEASPECTRATIO_XMAXYMIN public="1" get="inline" set="null" line="61" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMaxYMin</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMAXYMIN>
		<SVG_PRESERVEASPECTRATIO_XMIDYMAX public="1" get="inline" set="null" line="65" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMidYMax</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMIDYMAX>
		<SVG_PRESERVEASPECTRATIO_XMIDYMID public="1" get="inline" set="null" line="69" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMidYMid</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMIDYMID>
		<SVG_PRESERVEASPECTRATIO_XMIDYMIN public="1" get="inline" set="null" line="73" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMidYMin</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMIDYMIN>
		<SVG_PRESERVEASPECTRATIO_XMINYMAX public="1" get="inline" set="null" line="77" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMinYMax</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMINYMAX>
		<SVG_PRESERVEASPECTRATIO_XMINYMID public="1" get="inline" set="null" line="81" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMinYMid</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMINYMID>
		<SVG_PRESERVEASPECTRATIO_XMINYMIN public="1" get="inline" set="null" line="85" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMinYMin</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMINYMIN>
		<align public="1">
			<x path="Int"/>
			<haxe_doc>The type of the alignment value as specified by one of the SVG_PRESERVEASPECTRATIO_* constants defined on this interface. Setter throws DOMException.</haxe_doc>
		</align>
		<meetOrSlice public="1">
			<x path="Int"/>
			<haxe_doc>The type of the meet-or-slice value as specified by one of the SVG_MEETORSLICE_* constants defined on this interface. Setter throws DOMException.</haxe_doc>
		</meetOrSlice>
		<haxe_doc><![CDATA[<p>The <code>SVGPreserveAspectRatio</code> interface corresponds to the 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code> attribute, which is available for some of SVG's elements.</p>
<p>An <code>SVGPreserveAspectRatio</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGPreserveAspectRatio">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGPreserveAspectRatio"</e></m></meta>
	</class>
	<class path="js.html.svg.Rect" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Rect.hx" extern="1">
		<height public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The <em>height</em> coordinate of the rectangle, in user units.]]></haxe_doc>
		</height>
		<width public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The <em>width</em> coordinate of the rectangle, in user units.]]></haxe_doc>
		</width>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<haxe_doc><![CDATA[<p>The <code>SVGRect</code> represents rectangular geometry. Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative.</p>
<p>An <code>SVGRect</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGRect">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGRect"</e></m></meta>
	</class>
	<class path="js.html.svg.SVGElement" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/SVGElement.hx" extern="1">
		<extends path="js.html.svg.Element"/>
		<contentScriptType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/contentScriptType">contentScriptType</a></code> on the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element.]]></haxe_doc>
		</contentScriptType>
		<contentStyleType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/contentStyleType">contentStyleType</a></code> on the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element.]]></haxe_doc>
		</contentStyleType>
		<currentScale public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[On an outermost <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element, this attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations. DOM attributes <code>currentScale</code> and <code>currentTranslate</code> are equivalent to the 2x3 matrix <code>[a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]</code>. If "magnification" is enabled (i.e., <code>zoomAndPan="magnify"</code>), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element).]]></haxe_doc>
		</currentScale>
		<currentTranslate public="1" set="null">
			<c path="js.html.svg.Point"/>
			<haxe_doc><![CDATA[On an outermost <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element, the corresponding translation factor that takes into account user "magnification".]]></haxe_doc>
		</currentTranslate>
		<currentView public="1" set="null">
			<c path="js.html.svg.ViewSpec"/>
			<haxe_doc><![CDATA[The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. The meaning depends on the situation:<br> <ul> <li>If the initial view was a "standard" view, then: <ul> <li>the values for 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/zoomAndPan" class="new">zoomAndPan</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will match the values for the corresponding DOM attributes that are on <code>SVGSVGElement</code> directly</li> <li>the values for 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewTarget" class="new">viewTarget</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will be null</li> </ul> </li> <li>If the initial view was a link into a <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/view">&lt;view&gt;</a></code>
 element, then: <ul> <li>the values for 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/zoomAndPan" class="new">zoomAndPan</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will correspond to the corresponding attributes for the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/view">&lt;view&gt;</a></code>
 element</li> <li>the values for 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewTarget" class="new">viewTarget</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will be null</li> </ul> </li> <li>If the initial view was a link into another element (i.e., other than a <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/view">&lt;view&gt;</a></code>
), then: <ul> <li>the values for 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/zoomAndPan" class="new">zoomAndPan</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will match the values for the corresponding DOM attributes that are on <code>SVGSVGElement</code> directly for the closest ancestor <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element</li> <li>the values for 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will be null</li> <li>the 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewTarget" class="new">viewTarget</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will represent the target of the link</li> </ul> </li> <li>If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: <ul> <li>the values for 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>, 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/zoomAndPan" class="new">zoomAndPan</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewTarget" class="new">viewTarget</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will correspond to the values from the SVG view specification fragment identifier</li> </ul> </li> </ul>]]></haxe_doc>
		</currentView>
		<height public="1" set="null">
			<c path="js.html.svg.AnimatedLength"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/height">height</a></code> on the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element.]]></haxe_doc>
		</height>
		<pixelUnitToMillimeterX public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Size of a pixel units (as defined by CSS2) along the x-axis of the viewport, which represents a unit somewhere in the range of 70dpi to 120dpi, and, on systems that support this, might actually match the characteristics of the target medium. On systems where it is impossible to know the size of a pixel, a suitable default pixel size is provided.</haxe_doc>
		</pixelUnitToMillimeterX>
		<pixelUnitToMillimeterY public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Corresponding size of a pixel unit along the y-axis of the viewport.</haxe_doc>
		</pixelUnitToMillimeterY>
		<screenPixelToMillimeterX public="1" set="null">
			<x path="Float"/>
			<haxe_doc>User interface (UI) events in DOM Level 2 indicate the screen positions at which the given UI event occurred. When the browser actually knows the physical size of a "screen unit", this attribute will express that information; otherwise, user agents will provide a suitable default value such as .28mm.</haxe_doc>
		</screenPixelToMillimeterX>
		<screenPixelToMillimeterY public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Corresponding size of a screen pixel along the y-axis of the viewport.</haxe_doc>
		</screenPixelToMillimeterY>
		<useCurrentView public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the "standard" view (i.e., based on attributes on the <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element such as 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>) or to a "custom" view (i.e., a hyperlink into a particular <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/view">&lt;view&gt;</a></code>
 or other element). If the initial view is the "standard" view, then this attribute is false. If the initial view is a "custom" view, then this attribute is true.]]></haxe_doc>
		</useCurrentView>
		<viewport public="1" set="null">
			<c path="js.html.svg.Rect"/>
			<haxe_doc><![CDATA[The position and size of the viewport (implicit or explicit) that corresponds to this <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element. When the browser is actually rendering the content, then the position and size values represent the actual values when rendering. The position and size values are unitless values in the coordinate system of the parent element. If no parent element exists (i.e., <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element represents the root of the document tree), if this SVG document is embedded as part of another document (e.g., via the HTML <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object">&lt;object&gt;</a></code>
 element), then the position and size are unitless values in the coordinate system of the parent document. (If the parent uses CSS or XSL layout, then unitless values represent pixel units for the current CSS or XSL viewport.)]]></haxe_doc>
		</viewport>
		<width public="1" set="null">
			<c path="js.html.svg.AnimatedLength"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/width">width</a></code> on the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element.]]></haxe_doc>
		</width>
		<x public="1" set="null"><c path="js.html.svg.AnimatedLength"/></x>
		<y public="1" set="null"><c path="js.html.svg.AnimatedLength"/></y>
		<animationsPaused public="1" set="method"><f a=""><x path="Bool"/></f></animationsPaused>
		<checkEnclosure public="1" set="method"><f a="element:rect">
	<c path="js.html.svg.Element"/>
	<c path="js.html.svg.Rect"/>
	<x path="Bool"/>
</f></checkEnclosure>
		<checkIntersection public="1" set="method"><f a="element:rect">
	<c path="js.html.svg.Element"/>
	<c path="js.html.svg.Rect"/>
	<x path="Bool"/>
</f></checkIntersection>
		<createSVGAngle public="1" set="method"><f a=""><c path="js.html.svg.Angle"/></f></createSVGAngle>
		<createSVGLength public="1" set="method"><f a=""><c path="js.html.svg.Length"/></f></createSVGLength>
		<createSVGMatrix public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></createSVGMatrix>
		<createSVGNumber public="1" set="method"><f a=""><c path="js.html.svg.Number"/></f></createSVGNumber>
		<createSVGPoint public="1" set="method"><f a=""><c path="js.html.svg.Point"/></f></createSVGPoint>
		<createSVGRect public="1" set="method"><f a=""><c path="js.html.svg.Rect"/></f></createSVGRect>
		<createSVGTransform public="1" set="method"><f a=""><c path="js.html.svg.Transform"/></f></createSVGTransform>
		<createSVGTransformFromMatrix public="1" set="method"><f a="matrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Transform"/>
</f></createSVGTransformFromMatrix>
		<deselectAll public="1" set="method"><f a=""><x path="Void"/></f></deselectAll>
		<forceRedraw public="1" set="method"><f a=""><x path="Void"/></f></forceRedraw>
		<getCurrentTime public="1" set="method"><f a=""><x path="Float"/></f></getCurrentTime>
		<getElementById public="1" set="method"><f a="elementId">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></getElementById>
		<getEnclosureList public="1" set="method"><f a="rect:referenceElement">
	<c path="js.html.svg.Rect"/>
	<c path="js.html.svg.Element"/>
	<c path="js.html.NodeList"/>
</f></getEnclosureList>
		<getIntersectionList public="1" set="method"><f a="rect:referenceElement">
	<c path="js.html.svg.Rect"/>
	<c path="js.html.svg.Element"/>
	<c path="js.html.NodeList"/>
</f></getIntersectionList>
		<pauseAnimations public="1" set="method"><f a=""><x path="Void"/></f></pauseAnimations>
		<setCurrentTime public="1" set="method"><f a="seconds">
	<x path="Float"/>
	<x path="Void"/>
</f></setCurrentTime>
		<suspendRedraw public="1" set="method"><f a="maxWaitMilliseconds">
	<x path="Int"/>
	<x path="Int"/>
</f></suspendRedraw>
		<unpauseAnimations public="1" set="method"><f a=""><x path="Void"/></f></unpauseAnimations>
		<unsuspendRedraw public="1" set="method"><f a="suspendHandleId">
	<x path="Int"/>
	<x path="Void"/>
</f></unsuspendRedraw>
		<unsuspendRedrawAll public="1" set="method"><f a=""><x path="Void"/></f></unsuspendRedrawAll>
		<haxe_doc><![CDATA[The <code>SVGSVGElement</code> interface provides access to the properties of <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGSVGElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGSVGElement"</e></m></meta>
	</class>
	<class path="js.html.svg.Transform" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/Transform.hx" extern="1">
		<SVG_TRANSFORM_MATRIX public="1" get="inline" set="null" line="35" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A <code>matrix(…)</code> transformation]]></haxe_doc>
		</SVG_TRANSFORM_MATRIX>
		<SVG_TRANSFORM_ROTATE public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></SVG_TRANSFORM_ROTATE>
		<SVG_TRANSFORM_SCALE public="1" get="inline" set="null" line="40" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A <code>scale(…)</code> transformation]]></haxe_doc>
		</SVG_TRANSFORM_SCALE>
		<SVG_TRANSFORM_SKEWX public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></SVG_TRANSFORM_SKEWX>
		<SVG_TRANSFORM_SKEWY public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></SVG_TRANSFORM_SKEWY>
		<SVG_TRANSFORM_TRANSLATE public="1" get="inline" set="null" line="47" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A <code>translate(…)</code> transformation]]></haxe_doc>
		</SVG_TRANSFORM_TRANSLATE>
		<SVG_TRANSFORM_UNKNOWN public="1" get="inline" set="null" line="50" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_TRANSFORM_UNKNOWN>
		<angle public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[A convenience attribute for <code>SVG_TRANSFORM_ROTATE</code>, <code>SVG_TRANSFORM_SKEWX</code> and <code>SVG_TRANSFORM_SKEWY</code>. It holds the angle that was specified.<br> <br> For <code>SVG_TRANSFORM_MATRIX</code>, <code>SVG_TRANSFORM_TRANSLATE</code> and <code>SVG_TRANSFORM_SCALE</code>, <code>angle</code> will be zero.]]></haxe_doc>
		</angle>
		<matrix public="1" set="null">
			<c path="js.html.svg.Matrix"/>
			<haxe_doc><![CDATA[<p>The matrix that represents this transformation. The matrix object is live, meaning that any changes made to the <code>SVGTransform</code> object are immediately reflected in the matrix object and vice versa. In case the matrix object is changed directly (i.e., without using the methods on the <code>SVGTransform</code> interface itself) then the type of the <code>SVGTransform</code> changes to <code>SVG_TRANSFORM_MATRIX</code>.</p> <ul> <li>For <code>SVG_TRANSFORM_MATRIX</code>, the matrix contains the a, b, c, d, e, f values supplied by the user.</li> <li>For <code>SVG_TRANSFORM_TRANSLATE</code>, e and f represent the translation amounts (a=1, b=0, c=0 and d=1).</li> <li>For <code>SVG_TRANSFORM_SCALE</code>, a and d represent the scale amounts (b=0, c=0, e=0 and f=0).</li> <li>For <code>SVG_TRANSFORM_SKEWX</code> and <code>SVG_TRANSFORM_SKEWY</code>, a, b, c and d represent the matrix which will result in the given skew (e=0 and f=0).</li> <li>For <code>SVG_TRANSFORM_ROTATE</code>, a, b, c, d, e and f together represent the matrix which will result in the given rotation. When the rotation is around the center point (0, 0), e and f will be zero.</li> </ul>]]></haxe_doc>
		</matrix>
		<type public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The type of the value as specified by one of the SVG_TRANSFORM_* constants defined on this interface.</haxe_doc>
		</type>
		<setMatrix public="1" set="method"><f a="matrix">
	<c path="js.html.svg.Matrix"/>
	<x path="Void"/>
</f></setMatrix>
		<setRotate public="1" set="method"><f a="angle:cx:cy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setRotate>
		<setScale public="1" set="method"><f a="sx:sy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setScale>
		<setSkewX public="1" set="method"><f a="angle">
	<x path="Float"/>
	<x path="Void"/>
</f></setSkewX>
		<setSkewY public="1" set="method"><f a="angle">
	<x path="Float"/>
	<x path="Void"/>
</f></setSkewY>
		<setTranslate public="1" set="method"><f a="tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTranslate>
		<haxe_doc><![CDATA[<p><code>SVGTransform</code> is the interface for one of the component transformations within an <code><a rel="custom" href="/api/js/html/svg/TransformList">SVGTransformList</a></code>
; thus, an <code>SVGTransform</code> object corresponds to a single component (e.g., <code>scale(…)</code> or <code>matrix(…)</code>) within a 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> attribute.</p>
<p>An <code>SVGTransform</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGTransform">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGTransform"</e></m></meta>
	</class>
	<class path="js.html.svg.TransformList" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/TransformList.hx" extern="1">
		<numberOfItems public="1" set="null"><x path="Int"/></numberOfItems>
		<appendItem public="1" set="method"><f a="item">
	<c path="js.html.svg.Transform"/>
	<c path="js.html.svg.Transform"/>
</f></appendItem>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<consolidate public="1" set="method"><f a=""><c path="js.html.svg.Transform"/></f></consolidate>
		<createSVGTransformFromMatrix public="1" set="method"><f a="matrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Transform"/>
</f></createSVGTransformFromMatrix>
		<getItem public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.svg.Transform"/>
</f></getItem>
		<initialize public="1" set="method"><f a="item">
	<c path="js.html.svg.Transform"/>
	<c path="js.html.svg.Transform"/>
</f></initialize>
		<insertItemBefore public="1" set="method"><f a="item:index">
	<c path="js.html.svg.Transform"/>
	<x path="Int"/>
	<c path="js.html.svg.Transform"/>
</f></insertItemBefore>
		<removeItem public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.svg.Transform"/>
</f></removeItem>
		<replaceItem public="1" set="method"><f a="item:index">
	<c path="js.html.svg.Transform"/>
	<x path="Int"/>
	<c path="js.html.svg.Transform"/>
</f></replaceItem>
		<haxe_doc><![CDATA[<p>The <code>SVGTransformList</code> defines a list of <code><a rel="custom" href="/api/js/html/svg/Transform">SVGTransform</a></code>
 objects.</p>
<p>An <code>SVGTransformList</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p>
<div class="geckoVersionNote"> <p>
</p><div class="geckoVersionHeading">Gecko 9.0 note<div>(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
</div></div>
<p></p> <p>Starting in Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
,the <code>SVGTransformList</code> DOM interface is now indexable and can be accessed like Arrays</p>
</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGTransformList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGTransformList"</e></m></meta>
	</class>
	<class path="js.html.svg.ViewSpec" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/svg/ViewSpec.hx" extern="1">
		<preserveAspectRatio public="1" set="null"><c path="js.html.svg.AnimatedPreserveAspectRatio"/></preserveAspectRatio>
		<preserveAspectRatioString public="1" set="null"><c path="String"/></preserveAspectRatioString>
		<transform public="1" set="null"><c path="js.html.svg.TransformList"/></transform>
		<transformString public="1" set="null"><c path="String"/></transformString>
		<viewBox public="1" set="null"><c path="js.html.svg.AnimatedRect"/></viewBox>
		<viewBoxString public="1" set="null"><c path="String"/></viewBoxString>
		<viewTarget public="1" set="null"><c path="js.html.svg.Element"/></viewTarget>
		<viewTargetString public="1" set="null"><c path="String"/></viewTargetString>
		<zoomAndPan public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</zoomAndPan>
		<meta><m n=":native"><e>"SVGViewSpec"</e></m></meta>
	</class>
	<class path="js.html.webgl.ActiveInfo" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/ActiveInfo.hx" extern="1">
		<name public="1" set="null"><c path="String"/></name>
		<size public="1" set="null"><x path="Int"/></size>
		<type public="1" set="null"><x path="Int"/></type>
		<meta><m n=":native"><e>"WebGLActiveInfo"</e></m></meta>
	</class>
	<class path="js.html.webgl.Buffer" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/Buffer.hx" extern="1"><meta><m n=":native"><e>"WebGLBuffer"</e></m></meta></class>
	<typedef path="js.html.webgl.ContextAttributes" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/ContextAttributes.hx"><a>
	<stencil>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</stencil>
	<preserveDrawingBuffer>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</preserveDrawingBuffer>
	<premultipliedAlpha>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</premultipliedAlpha>
	<depth>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</depth>
	<antialias>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</antialias>
	<alpha>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</alpha>
</a></typedef>
	<class path="js.html.webgl.Framebuffer" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/Framebuffer.hx" extern="1"><meta><m n=":native"><e>"WebGLFramebuffer"</e></m></meta></class>
	<class path="js.html.webgl.Program" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/Program.hx" extern="1"><meta><m n=":native"><e>"WebGLProgram"</e></m></meta></class>
	<class path="js.html.webgl.Renderbuffer" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/Renderbuffer.hx" extern="1"><meta><m n=":native"><e>"WebGLRenderbuffer"</e></m></meta></class>
	<class path="js.html.webgl.RenderingContext" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/RenderingContext.hx" extern="1">
		<extends path="js.html.CanvasRenderingContext"/>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ACTIVE_ATTRIBUTES>
		<ACTIVE_TEXTURE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></ACTIVE_TEXTURE>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></ACTIVE_UNIFORMS>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></ALIASED_LINE_WIDTH_RANGE>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></ALIASED_POINT_SIZE_RANGE>
		<ALPHA public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></ALPHA>
		<ALPHA_BITS public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></ALPHA_BITS>
		<ALWAYS public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></ALWAYS>
		<ARRAY_BUFFER public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></ARRAY_BUFFER_BINDING>
		<ATTACHED_SHADERS public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></ATTACHED_SHADERS>
		<BACK public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></BACK>
		<BLEND public="1" get="inline" set="null" line="53" static="1"><x path="Int"/></BLEND>
		<BLEND_COLOR public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></BLEND_COLOR>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></BLEND_DST_ALPHA>
		<BLEND_DST_RGB public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></BLEND_DST_RGB>
		<BLEND_EQUATION public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></BLEND_EQUATION>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" line="63" static="1"><x path="Int"/></BLEND_EQUATION_ALPHA>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></BLEND_EQUATION_RGB>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></BLEND_SRC_ALPHA>
		<BLEND_SRC_RGB public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></BLEND_SRC_RGB>
		<BLUE_BITS public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></BLUE_BITS>
		<BOOL public="1" get="inline" set="null" line="73" static="1"><x path="Int"/></BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" line="75" static="1"><x path="Int"/></BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" line="77" static="1"><x path="Int"/></BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" line="79" static="1"><x path="Int"/></BOOL_VEC4>
		<BROWSER_DEFAULT_WEBGL public="1" get="inline" set="null" line="81" static="1"><x path="Int"/></BROWSER_DEFAULT_WEBGL>
		<BUFFER_SIZE public="1" get="inline" set="null" line="83" static="1"><x path="Int"/></BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" line="85" static="1"><x path="Int"/></BUFFER_USAGE>
		<BYTE public="1" get="inline" set="null" line="87" static="1"><x path="Int"/></BYTE>
		<CCW public="1" get="inline" set="null" line="89" static="1"><x path="Int"/></CCW>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" line="91" static="1"><x path="Int"/></CLAMP_TO_EDGE>
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" line="93" static="1"><x path="Int"/></COLOR_ATTACHMENT0>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" line="95" static="1"><x path="Int"/></COLOR_BUFFER_BIT>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" line="97" static="1"><x path="Int"/></COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" line="99" static="1"><x path="Int"/></COLOR_WRITEMASK>
		<COMPILE_STATUS public="1" get="inline" set="null" line="101" static="1"><x path="Int"/></COMPILE_STATUS>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" line="103" static="1"><x path="Int"/></COMPRESSED_TEXTURE_FORMATS>
		<CONSTANT_ALPHA public="1" get="inline" set="null" line="105" static="1"><x path="Int"/></CONSTANT_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" line="107" static="1"><x path="Int"/></CONSTANT_COLOR>
		<CONTEXT_LOST_WEBGL public="1" get="inline" set="null" line="109" static="1"><x path="Int"/></CONTEXT_LOST_WEBGL>
		<CULL_FACE public="1" get="inline" set="null" line="111" static="1"><x path="Int"/></CULL_FACE>
		<CULL_FACE_MODE public="1" get="inline" set="null" line="113" static="1"><x path="Int"/></CULL_FACE_MODE>
		<CURRENT_PROGRAM public="1" get="inline" set="null" line="115" static="1"><x path="Int"/></CURRENT_PROGRAM>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" line="117" static="1"><x path="Int"/></CURRENT_VERTEX_ATTRIB>
		<CW public="1" get="inline" set="null" line="119" static="1"><x path="Int"/></CW>
		<DECR public="1" get="inline" set="null" line="121" static="1"><x path="Int"/></DECR>
		<DECR_WRAP public="1" get="inline" set="null" line="123" static="1"><x path="Int"/></DECR_WRAP>
		<DELETE_STATUS public="1" get="inline" set="null" line="125" static="1"><x path="Int"/></DELETE_STATUS>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" line="127" static="1"><x path="Int"/></DEPTH_ATTACHMENT>
		<DEPTH_BITS public="1" get="inline" set="null" line="129" static="1"><x path="Int"/></DEPTH_BITS>
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" line="131" static="1"><x path="Int"/></DEPTH_BUFFER_BIT>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" line="133" static="1"><x path="Int"/></DEPTH_CLEAR_VALUE>
		<DEPTH_COMPONENT public="1" get="inline" set="null" line="135" static="1"><x path="Int"/></DEPTH_COMPONENT>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" line="137" static="1"><x path="Int"/></DEPTH_COMPONENT16>
		<DEPTH_FUNC public="1" get="inline" set="null" line="139" static="1"><x path="Int"/></DEPTH_FUNC>
		<DEPTH_RANGE public="1" get="inline" set="null" line="141" static="1"><x path="Int"/></DEPTH_RANGE>
		<DEPTH_STENCIL public="1" get="inline" set="null" line="143" static="1"><x path="Int"/></DEPTH_STENCIL>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" line="145" static="1"><x path="Int"/></DEPTH_STENCIL_ATTACHMENT>
		<DEPTH_TEST public="1" get="inline" set="null" line="147" static="1"><x path="Int"/></DEPTH_TEST>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" line="149" static="1"><x path="Int"/></DEPTH_WRITEMASK>
		<DITHER public="1" get="inline" set="null" line="151" static="1"><x path="Int"/></DITHER>
		<DONT_CARE public="1" get="inline" set="null" line="153" static="1"><x path="Int"/></DONT_CARE>
		<DST_ALPHA public="1" get="inline" set="null" line="155" static="1"><x path="Int"/></DST_ALPHA>
		<DST_COLOR public="1" get="inline" set="null" line="157" static="1"><x path="Int"/></DST_COLOR>
		<DYNAMIC_DRAW public="1" get="inline" set="null" line="159" static="1"><x path="Int"/></DYNAMIC_DRAW>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" line="161" static="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="163" static="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER_BINDING>
		<EQUAL public="1" get="inline" set="null" line="165" static="1"><x path="Int"/></EQUAL>
		<FASTEST public="1" get="inline" set="null" line="167" static="1"><x path="Int"/></FASTEST>
		<FLOAT public="1" get="inline" set="null" line="169" static="1"><x path="Int"/></FLOAT>
		<FLOAT_MAT2 public="1" get="inline" set="null" line="171" static="1"><x path="Int"/></FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" line="173" static="1"><x path="Int"/></FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" line="175" static="1"><x path="Int"/></FLOAT_MAT4>
		<FLOAT_VEC2 public="1" get="inline" set="null" line="177" static="1"><x path="Int"/></FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" line="179" static="1"><x path="Int"/></FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" line="181" static="1"><x path="Int"/></FLOAT_VEC4>
		<FRAGMENT_SHADER public="1" get="inline" set="null" line="183" static="1"><x path="Int"/></FRAGMENT_SHADER>
		<FRAMEBUFFER public="1" get="inline" set="null" line="185" static="1"><x path="Int"/></FRAMEBUFFER>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" line="187" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" line="189" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" line="191" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" line="193" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" line="195" static="1"><x path="Int"/></FRAMEBUFFER_BINDING>
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" line="197" static="1"><x path="Int"/></FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" line="199" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" line="201" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" line="203" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" line="205" static="1"><x path="Int"/></FRAMEBUFFER_UNSUPPORTED>
		<FRONT public="1" get="inline" set="null" line="207" static="1"><x path="Int"/></FRONT>
		<FRONT_AND_BACK public="1" get="inline" set="null" line="209" static="1"><x path="Int"/></FRONT_AND_BACK>
		<FRONT_FACE public="1" get="inline" set="null" line="211" static="1"><x path="Int"/></FRONT_FACE>
		<FUNC_ADD public="1" get="inline" set="null" line="213" static="1"><x path="Int"/></FUNC_ADD>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" line="215" static="1"><x path="Int"/></FUNC_REVERSE_SUBTRACT>
		<FUNC_SUBTRACT public="1" get="inline" set="null" line="217" static="1"><x path="Int"/></FUNC_SUBTRACT>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" line="219" static="1"><x path="Int"/></GENERATE_MIPMAP_HINT>
		<GEQUAL public="1" get="inline" set="null" line="221" static="1"><x path="Int"/></GEQUAL>
		<GREATER public="1" get="inline" set="null" line="223" static="1"><x path="Int"/></GREATER>
		<GREEN_BITS public="1" get="inline" set="null" line="225" static="1"><x path="Int"/></GREEN_BITS>
		<HIGH_FLOAT public="1" get="inline" set="null" line="227" static="1"><x path="Int"/></HIGH_FLOAT>
		<HIGH_INT public="1" get="inline" set="null" line="229" static="1"><x path="Int"/></HIGH_INT>
		<INCR public="1" get="inline" set="null" line="231" static="1"><x path="Int"/></INCR>
		<INCR_WRAP public="1" get="inline" set="null" line="233" static="1"><x path="Int"/></INCR_WRAP>
		<INT public="1" get="inline" set="null" line="235" static="1"><x path="Int"/></INT>
		<INT_VEC2 public="1" get="inline" set="null" line="237" static="1"><x path="Int"/></INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" line="239" static="1"><x path="Int"/></INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" line="241" static="1"><x path="Int"/></INT_VEC4>
		<INVALID_ENUM public="1" get="inline" set="null" line="243" static="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" line="245" static="1"><x path="Int"/></INVALID_FRAMEBUFFER_OPERATION>
		<INVALID_OPERATION public="1" get="inline" set="null" line="247" static="1"><x path="Int"/></INVALID_OPERATION>
		<INVALID_VALUE public="1" get="inline" set="null" line="249" static="1"><x path="Int"/></INVALID_VALUE>
		<INVERT public="1" get="inline" set="null" line="251" static="1"><x path="Int"/></INVERT>
		<KEEP public="1" get="inline" set="null" line="253" static="1"><x path="Int"/></KEEP>
		<LEQUAL public="1" get="inline" set="null" line="255" static="1"><x path="Int"/></LEQUAL>
		<LESS public="1" get="inline" set="null" line="257" static="1"><x path="Int"/></LESS>
		<LINEAR public="1" get="inline" set="null" line="259" static="1"><x path="Int"/></LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" line="261" static="1"><x path="Int"/></LINEAR_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" line="263" static="1"><x path="Int"/></LINEAR_MIPMAP_NEAREST>
		<LINES public="1" get="inline" set="null" line="265" static="1"><x path="Int"/></LINES>
		<LINE_LOOP public="1" get="inline" set="null" line="267" static="1"><x path="Int"/></LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" line="269" static="1"><x path="Int"/></LINE_STRIP>
		<LINE_WIDTH public="1" get="inline" set="null" line="271" static="1"><x path="Int"/></LINE_WIDTH>
		<LINK_STATUS public="1" get="inline" set="null" line="273" static="1"><x path="Int"/></LINK_STATUS>
		<LOW_FLOAT public="1" get="inline" set="null" line="275" static="1"><x path="Int"/></LOW_FLOAT>
		<LOW_INT public="1" get="inline" set="null" line="277" static="1"><x path="Int"/></LOW_INT>
		<LUMINANCE public="1" get="inline" set="null" line="279" static="1"><x path="Int"/></LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" line="281" static="1"><x path="Int"/></LUMINANCE_ALPHA>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="283" static="1"><x path="Int"/></MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" line="285" static="1"><x path="Int"/></MAX_CUBE_MAP_TEXTURE_SIZE>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" line="287" static="1"><x path="Int"/></MAX_FRAGMENT_UNIFORM_VECTORS>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" line="289" static="1"><x path="Int"/></MAX_RENDERBUFFER_SIZE>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="291" static="1"><x path="Int"/></MAX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" line="293" static="1"><x path="Int"/></MAX_TEXTURE_SIZE>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" line="295" static="1"><x path="Int"/></MAX_VARYING_VECTORS>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" line="297" static="1"><x path="Int"/></MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="299" static="1"><x path="Int"/></MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" line="301" static="1"><x path="Int"/></MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" line="303" static="1"><x path="Int"/></MAX_VIEWPORT_DIMS>
		<MEDIUM_FLOAT public="1" get="inline" set="null" line="305" static="1"><x path="Int"/></MEDIUM_FLOAT>
		<MEDIUM_INT public="1" get="inline" set="null" line="307" static="1"><x path="Int"/></MEDIUM_INT>
		<MIRRORED_REPEAT public="1" get="inline" set="null" line="309" static="1"><x path="Int"/></MIRRORED_REPEAT>
		<NEAREST public="1" get="inline" set="null" line="311" static="1"><x path="Int"/></NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" line="313" static="1"><x path="Int"/></NEAREST_MIPMAP_LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" line="315" static="1"><x path="Int"/></NEAREST_MIPMAP_NEAREST>
		<NEVER public="1" get="inline" set="null" line="317" static="1"><x path="Int"/></NEVER>
		<NICEST public="1" get="inline" set="null" line="319" static="1"><x path="Int"/></NICEST>
		<NONE public="1" get="inline" set="null" line="321" static="1"><x path="Int"/></NONE>
		<NOTEQUAL public="1" get="inline" set="null" line="323" static="1"><x path="Int"/></NOTEQUAL>
		<NO_ERROR public="1" get="inline" set="null" line="325" static="1"><x path="Int"/></NO_ERROR>
		<ONE public="1" get="inline" set="null" line="327" static="1"><x path="Int"/></ONE>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" line="329" static="1"><x path="Int"/></ONE_MINUS_CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" line="331" static="1"><x path="Int"/></ONE_MINUS_CONSTANT_COLOR>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" line="333" static="1"><x path="Int"/></ONE_MINUS_DST_ALPHA>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" line="335" static="1"><x path="Int"/></ONE_MINUS_DST_COLOR>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" line="337" static="1"><x path="Int"/></ONE_MINUS_SRC_ALPHA>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" line="339" static="1"><x path="Int"/></ONE_MINUS_SRC_COLOR>
		<OUT_OF_MEMORY public="1" get="inline" set="null" line="341" static="1"><x path="Int"/></OUT_OF_MEMORY>
		<PACK_ALIGNMENT public="1" get="inline" set="null" line="343" static="1"><x path="Int"/></PACK_ALIGNMENT>
		<POINTS public="1" get="inline" set="null" line="345" static="1"><x path="Int"/></POINTS>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" line="347" static="1"><x path="Int"/></POLYGON_OFFSET_FACTOR>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" line="349" static="1"><x path="Int"/></POLYGON_OFFSET_FILL>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" line="351" static="1"><x path="Int"/></POLYGON_OFFSET_UNITS>
		<RED_BITS public="1" get="inline" set="null" line="353" static="1"><x path="Int"/></RED_BITS>
		<RENDERBUFFER public="1" get="inline" set="null" line="355" static="1"><x path="Int"/></RENDERBUFFER>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" line="357" static="1"><x path="Int"/></RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" line="359" static="1"><x path="Int"/></RENDERBUFFER_BINDING>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" line="361" static="1"><x path="Int"/></RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" line="363" static="1"><x path="Int"/></RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" line="365" static="1"><x path="Int"/></RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" line="367" static="1"><x path="Int"/></RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" line="369" static="1"><x path="Int"/></RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" line="371" static="1"><x path="Int"/></RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" line="373" static="1"><x path="Int"/></RENDERBUFFER_STENCIL_SIZE>
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" line="375" static="1"><x path="Int"/></RENDERBUFFER_WIDTH>
		<RENDERER public="1" get="inline" set="null" line="377" static="1"><x path="Int"/></RENDERER>
		<REPEAT public="1" get="inline" set="null" line="379" static="1"><x path="Int"/></REPEAT>
		<REPLACE public="1" get="inline" set="null" line="381" static="1"><x path="Int"/></REPLACE>
		<RGB public="1" get="inline" set="null" line="383" static="1"><x path="Int"/></RGB>
		<RGB565 public="1" get="inline" set="null" line="385" static="1"><x path="Int"/></RGB565>
		<RGB5_A1 public="1" get="inline" set="null" line="387" static="1"><x path="Int"/></RGB5_A1>
		<RGBA public="1" get="inline" set="null" line="389" static="1"><x path="Int"/></RGBA>
		<RGBA4 public="1" get="inline" set="null" line="391" static="1"><x path="Int"/></RGBA4>
		<SAMPLER_2D public="1" get="inline" set="null" line="393" static="1"><x path="Int"/></SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" line="395" static="1"><x path="Int"/></SAMPLER_CUBE>
		<SAMPLES public="1" get="inline" set="null" line="397" static="1"><x path="Int"/></SAMPLES>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" line="399" static="1"><x path="Int"/></SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" line="401" static="1"><x path="Int"/></SAMPLE_BUFFERS>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" line="403" static="1"><x path="Int"/></SAMPLE_COVERAGE>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" line="405" static="1"><x path="Int"/></SAMPLE_COVERAGE_INVERT>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" line="407" static="1"><x path="Int"/></SAMPLE_COVERAGE_VALUE>
		<SCISSOR_BOX public="1" get="inline" set="null" line="409" static="1"><x path="Int"/></SCISSOR_BOX>
		<SCISSOR_TEST public="1" get="inline" set="null" line="411" static="1"><x path="Int"/></SCISSOR_TEST>
		<SHADER_TYPE public="1" get="inline" set="null" line="413" static="1"><x path="Int"/></SHADER_TYPE>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" line="415" static="1"><x path="Int"/></SHADING_LANGUAGE_VERSION>
		<SHORT public="1" get="inline" set="null" line="417" static="1"><x path="Int"/></SHORT>
		<SRC_ALPHA public="1" get="inline" set="null" line="419" static="1"><x path="Int"/></SRC_ALPHA>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" line="421" static="1"><x path="Int"/></SRC_ALPHA_SATURATE>
		<SRC_COLOR public="1" get="inline" set="null" line="423" static="1"><x path="Int"/></SRC_COLOR>
		<STATIC_DRAW public="1" get="inline" set="null" line="425" static="1"><x path="Int"/></STATIC_DRAW>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" line="427" static="1"><x path="Int"/></STENCIL_ATTACHMENT>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" line="429" static="1"><x path="Int"/></STENCIL_BACK_FAIL>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" line="431" static="1"><x path="Int"/></STENCIL_BACK_FUNC>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" line="433" static="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" line="435" static="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" line="437" static="1"><x path="Int"/></STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" line="439" static="1"><x path="Int"/></STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" line="441" static="1"><x path="Int"/></STENCIL_BACK_WRITEMASK>
		<STENCIL_BITS public="1" get="inline" set="null" line="443" static="1"><x path="Int"/></STENCIL_BITS>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" line="445" static="1"><x path="Int"/></STENCIL_BUFFER_BIT>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" line="447" static="1"><x path="Int"/></STENCIL_CLEAR_VALUE>
		<STENCIL_FAIL public="1" get="inline" set="null" line="449" static="1"><x path="Int"/></STENCIL_FAIL>
		<STENCIL_FUNC public="1" get="inline" set="null" line="451" static="1"><x path="Int"/></STENCIL_FUNC>
		<STENCIL_INDEX public="1" get="inline" set="null" line="453" static="1"><x path="Int"/></STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="inline" set="null" line="455" static="1"><x path="Int"/></STENCIL_INDEX8>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" line="457" static="1"><x path="Int"/></STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" line="459" static="1"><x path="Int"/></STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" line="461" static="1"><x path="Int"/></STENCIL_REF>
		<STENCIL_TEST public="1" get="inline" set="null" line="463" static="1"><x path="Int"/></STENCIL_TEST>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" line="465" static="1"><x path="Int"/></STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" line="467" static="1"><x path="Int"/></STENCIL_WRITEMASK>
		<STREAM_DRAW public="1" get="inline" set="null" line="469" static="1"><x path="Int"/></STREAM_DRAW>
		<SUBPIXEL_BITS public="1" get="inline" set="null" line="471" static="1"><x path="Int"/></SUBPIXEL_BITS>
		<TEXTURE public="1" get="inline" set="null" line="473" static="1"><x path="Int"/></TEXTURE>
		<TEXTURE0 public="1" get="inline" set="null" line="475" static="1"><x path="Int"/></TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" line="477" static="1"><x path="Int"/></TEXTURE1>
		<TEXTURE10 public="1" get="inline" set="null" line="479" static="1"><x path="Int"/></TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" line="481" static="1"><x path="Int"/></TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" line="483" static="1"><x path="Int"/></TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" line="485" static="1"><x path="Int"/></TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" line="487" static="1"><x path="Int"/></TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" line="489" static="1"><x path="Int"/></TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" line="491" static="1"><x path="Int"/></TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" line="493" static="1"><x path="Int"/></TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" line="495" static="1"><x path="Int"/></TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" line="497" static="1"><x path="Int"/></TEXTURE19>
		<TEXTURE2 public="1" get="inline" set="null" line="499" static="1"><x path="Int"/></TEXTURE2>
		<TEXTURE20 public="1" get="inline" set="null" line="501" static="1"><x path="Int"/></TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" line="503" static="1"><x path="Int"/></TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" line="505" static="1"><x path="Int"/></TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" line="507" static="1"><x path="Int"/></TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" line="509" static="1"><x path="Int"/></TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" line="511" static="1"><x path="Int"/></TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" line="513" static="1"><x path="Int"/></TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" line="515" static="1"><x path="Int"/></TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" line="517" static="1"><x path="Int"/></TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" line="519" static="1"><x path="Int"/></TEXTURE29>
		<TEXTURE3 public="1" get="inline" set="null" line="521" static="1"><x path="Int"/></TEXTURE3>
		<TEXTURE30 public="1" get="inline" set="null" line="523" static="1"><x path="Int"/></TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" line="525" static="1"><x path="Int"/></TEXTURE31>
		<TEXTURE4 public="1" get="inline" set="null" line="527" static="1"><x path="Int"/></TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" line="529" static="1"><x path="Int"/></TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" line="531" static="1"><x path="Int"/></TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" line="533" static="1"><x path="Int"/></TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" line="535" static="1"><x path="Int"/></TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" line="537" static="1"><x path="Int"/></TEXTURE9>
		<TEXTURE_2D public="1" get="inline" set="null" line="539" static="1"><x path="Int"/></TEXTURE_2D>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" line="541" static="1"><x path="Int"/></TEXTURE_BINDING_2D>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" line="543" static="1"><x path="Int"/></TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" line="545" static="1"><x path="Int"/></TEXTURE_CUBE_MAP>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" line="547" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" line="549" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" line="551" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" line="553" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" line="555" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" line="557" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" line="559" static="1"><x path="Int"/></TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" line="561" static="1"><x path="Int"/></TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" line="563" static="1"><x path="Int"/></TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" line="565" static="1"><x path="Int"/></TEXTURE_WRAP_T>
		<TRIANGLES public="1" get="inline" set="null" line="567" static="1"><x path="Int"/></TRIANGLES>
		<TRIANGLE_FAN public="1" get="inline" set="null" line="569" static="1"><x path="Int"/></TRIANGLE_FAN>
		<TRIANGLE_STRIP public="1" get="inline" set="null" line="571" static="1"><x path="Int"/></TRIANGLE_STRIP>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" line="573" static="1"><x path="Int"/></UNPACK_ALIGNMENT>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="inline" set="null" line="575" static="1"><x path="Int"/></UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<UNPACK_FLIP_Y_WEBGL public="1" get="inline" set="null" line="577" static="1"><x path="Int"/></UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="inline" set="null" line="579" static="1"><x path="Int"/></UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<UNSIGNED_BYTE public="1" get="inline" set="null" line="581" static="1"><x path="Int"/></UNSIGNED_BYTE>
		<UNSIGNED_INT public="1" get="inline" set="null" line="583" static="1"><x path="Int"/></UNSIGNED_INT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" line="585" static="1"><x path="Int"/></UNSIGNED_SHORT>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" line="587" static="1"><x path="Int"/></UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" line="589" static="1"><x path="Int"/></UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" line="591" static="1"><x path="Int"/></UNSIGNED_SHORT_5_6_5>
		<VALIDATE_STATUS public="1" get="inline" set="null" line="593" static="1"><x path="Int"/></VALIDATE_STATUS>
		<VENDOR public="1" get="inline" set="null" line="595" static="1"><x path="Int"/></VENDOR>
		<VERSION public="1" get="inline" set="null" line="597" static="1"><x path="Int"/></VERSION>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="599" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" line="601" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" line="603" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" line="605" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" line="607" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" line="609" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" line="611" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_SHADER public="1" get="inline" set="null" line="613" static="1"><x path="Int"/></VERTEX_SHADER>
		<VIEWPORT public="1" get="inline" set="null" line="615" static="1"><x path="Int"/></VIEWPORT>
		<ZERO public="1" get="inline" set="null" line="617" static="1"><x path="Int"/></ZERO>
		<drawingBufferHeight public="1" set="null"><x path="Int"/></drawingBufferHeight>
		<drawingBufferWidth public="1" set="null"><x path="Int"/></drawingBufferWidth>
		<activeTexture public="1" set="method"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" set="method"><f a="program:shader">
	<c path="js.html.webgl.Program"/>
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></attachShader>
		<bindAttribLocation public="1" set="method"><f a="program:index:name">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" set="method"><f a="target:buffer">
	<x path="Int"/>
	<c path="js.html.webgl.Buffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindFramebuffer public="1" set="method"><f a="target:framebuffer">
	<x path="Int"/>
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" set="method"><f a="target:renderbuffer">
	<x path="Int"/>
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindTexture public="1" set="method"><f a="target:texture">
	<x path="Int"/>
	<c path="js.html.webgl.Texture"/>
	<x path="Void"/>
</f></bindTexture>
		<blendColor public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" set="method"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" set="method"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" set="method"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" set="method">
			<f a="target:size:usage">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<bufferData public="1" set="method">
					<f a="target:data:usage">
						<x path="Int"/>
						<c path="js.html.ArrayBuffer"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</bufferData>
				<bufferData public="1" set="method">
					<f a="target:data:usage">
						<x path="Int"/>
						<c path="js.html.ArrayBufferView"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</bufferData>
			</overloads>
		</bufferData>
		<bufferSubData public="1" set="method">
			<f a="target:offset:data">
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><bufferSubData public="1" set="method">
	<f a="target:offset:data">
		<x path="Int"/>
		<x path="Int"/>
		<c path="js.html.ArrayBuffer"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</bufferSubData></overloads>
		</bufferSubData>
		<checkFramebufferStatus public="1" set="method"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" set="method"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearColor public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepth public="1" set="method"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepth>
		<clearStencil public="1" set="method"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<colorMask public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" set="method"><f a="target:level:internalformat:width:height:border:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexSubImage2D public="1" set="method"><f a="target:level:xoffset:yoffset:width:height:format:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<copyTexImage2D public="1" set="method"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" set="method"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<createBuffer public="1" set="method"><f a=""><c path="js.html.webgl.Buffer"/></f></createBuffer>
		<createFramebuffer public="1" set="method"><f a=""><c path="js.html.webgl.Framebuffer"/></f></createFramebuffer>
		<createProgram public="1" set="method"><f a=""><c path="js.html.webgl.Program"/></f></createProgram>
		<createRenderbuffer public="1" set="method"><f a=""><c path="js.html.webgl.Renderbuffer"/></f></createRenderbuffer>
		<createShader public="1" set="method"><f a="type">
	<x path="Int"/>
	<c path="js.html.webgl.Shader"/>
</f></createShader>
		<createTexture public="1" set="method"><f a=""><c path="js.html.webgl.Texture"/></f></createTexture>
		<cullFace public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" set="method"><f a="buffer">
	<c path="js.html.webgl.Buffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" set="method"><f a="framebuffer">
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteRenderbuffer public="1" set="method"><f a="renderbuffer">
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteTexture public="1" set="method"><f a="texture">
	<c path="js.html.webgl.Texture"/>
	<x path="Void"/>
</f></deleteTexture>
		<depthFunc public="1" set="method"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" set="method"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRange public="1" set="method"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRange>
		<detachShader public="1" set="method"><f a="program:shader">
	<c path="js.html.webgl.Program"/>
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" set="method"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawElements public="1" set="method"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElements>
		<enable public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<finish public="1" set="method"><f a=""><x path="Void"/></f></finish>
		<flush public="1" set="method"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" set="method"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" set="method"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.Texture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<frontFace public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" set="method"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" set="method"><f a="program:index">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="js.html.webgl.ActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" set="method"><f a="program:index">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="js.html.webgl.ActiveInfo"/>
</f></getActiveUniform>
		<getAttachedShaders public="1" set="method">
			<f a="program">
				<c path="js.html.webgl.Program"/>
				<c path="Array"><c path="js.html.webgl.Shader"/></c>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><getAttachedShaders public="1" set="method">
	<f a="program">
		<c path="js.html.webgl.Program"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</getAttachedShaders></overloads>
		</getAttachedShaders>
		<getAttribLocation public="1" set="method"><f a="program:name">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBufferParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getBufferParameter public="1" set="method"><f a=""><x path="Void"/></f></getBufferParameter></overloads>
		</getBufferParameter>
		<getContextAttributes public="1" set="method"><f a=""><t path="js.html.webgl.ContextAttributes"/></f></getContextAttributes>
		<getError public="1" set="method"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" set="method"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFramebufferAttachmentParameter public="1" set="method">
			<f a="target:attachment:pname">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getFramebufferAttachmentParameter public="1" set="method"><f a=""><x path="Void"/></f></getFramebufferAttachmentParameter></overloads>
		</getFramebufferAttachmentParameter>
		<getParameter public="1" set="method">
			<f a="pname">
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getParameter public="1" set="method"><f a=""><x path="Void"/></f></getParameter></overloads>
		</getParameter>
		<getProgramInfoLog public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" set="method">
			<f a="program:pname">
				<c path="js.html.webgl.Program"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getProgramParameter public="1" set="method"><f a=""><x path="Void"/></f></getProgramParameter></overloads>
		</getProgramParameter>
		<getRenderbufferParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getRenderbufferParameter public="1" set="method"><f a=""><x path="Void"/></f></getRenderbufferParameter></overloads>
		</getRenderbufferParameter>
		<getShaderInfoLog public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" set="method">
			<f a="shader:pname">
				<c path="js.html.webgl.Shader"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><getShaderParameter public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</getShaderParameter></overloads>
		</getShaderParameter>
		<getShaderPrecisionFormat public="1" set="method"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.ShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
</f></getShaderSource>
		<getSupportedExtensions public="1" set="method"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getTexParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getTexParameter public="1" set="method"><f a=""><x path="Void"/></f></getTexParameter></overloads>
		</getTexParameter>
		<getUniform public="1" set="method">
			<f a="program:location">
				<c path="js.html.webgl.Program"/>
				<c path="js.html.webgl.UniformLocation"/>
				<d/>
			</f>
			<overloads><getUniform public="1" set="method"><f a=""><x path="Void"/></f></getUniform></overloads>
		</getUniform>
		<getUniformLocation public="1" set="method"><f a="program:name">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
	<c path="js.html.webgl.UniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" set="method">
			<f a="index:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getVertexAttrib public="1" set="method"><f a=""><x path="Void"/></f></getVertexAttrib></overloads>
		</getVertexAttrib>
		<getVertexAttribOffset public="1" set="method"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribOffset>
		<hint public="1" set="method"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<isBuffer public="1" set="method"><f a="buffer">
	<c path="js.html.webgl.Buffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" set="method"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" set="method"><f a="framebuffer">
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Bool"/>
</f></isProgram>
		<isRenderbuffer public="1" set="method"><f a="renderbuffer">
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Bool"/>
</f></isShader>
		<isTexture public="1" set="method"><f a="texture">
	<c path="js.html.webgl.Texture"/>
	<x path="Bool"/>
</f></isTexture>
		<lineWidth public="1" set="method"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></linkProgram>
		<pixelStorei public="1" set="method"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" set="method"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<readPixels public="1" set="method"><f a="x:y:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></readPixels>
		<releaseShaderCompiler public="1" set="method"><f a=""><x path="Void"/></f></releaseShaderCompiler>
		<renderbufferStorage public="1" set="method"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<sampleCoverage public="1" set="method"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<scissor public="1" set="method"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderSource public="1" set="method"><f a="shader:string">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" set="method"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" set="method"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" set="method"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" set="method"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" set="method"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" set="method"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" set="method">
			<f a="target:level:internalformat:format:type:video">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.VideoElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:width:height:border:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:image">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:canvas">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.CanvasElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
			</overloads>
		</texImage2D>
		<texParameterf public="1" set="method"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" set="method"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" set="method">
			<f a="target:level:xoffset:yoffset:format:type:video">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.VideoElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:image">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:canvas">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.CanvasElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
			</overloads>
		</texSubImage2D>
		<uniform1f public="1" set="method"><f a="location:x">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" set="method"><f a="location:x">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform2f public="1" set="method"><f a="location:x:y">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" set="method"><f a="location:x:y">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform3f public="1" set="method"><f a="location:x:y:z">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" set="method"><f a="location:x:y:z">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform4f public="1" set="method"><f a="location:x:y:z:w">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" set="method"><f a="location:x:y:z:w">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniformMatrix2fv public="1" set="method"><f a="location:transpose:array">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix3fv public="1" set="method"><f a="location:transpose:array">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix4fv public="1" set="method"><f a="location:transpose:array">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<useProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" set="method"><f a="indx:x">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" set="method"><f a="indx:x:y">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" set="method"><f a="indx:x:y:z">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" set="method"><f a="indx:x:y:z:w">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribPointer public="1" set="method"><f a="indx:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" set="method"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<meta><m n=":native"><e>"WebGLRenderingContext"</e></m></meta>
	</class>
	<class path="js.html.webgl.Shader" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/Shader.hx" extern="1"><meta><m n=":native"><e>"WebGLShader"</e></m></meta></class>
	<class path="js.html.webgl.ShaderPrecisionFormat" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/ShaderPrecisionFormat.hx" extern="1">
		<precision public="1" set="null"><x path="Int"/></precision>
		<rangeMax public="1" set="null"><x path="Int"/></rangeMax>
		<rangeMin public="1" set="null"><x path="Int"/></rangeMin>
		<meta><m n=":native"><e>"WebGLShaderPrecisionFormat"</e></m></meta>
	</class>
	<class path="js.html.webgl.Texture" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/Texture.hx" extern="1"><meta><m n=":native"><e>"WebGLTexture"</e></m></meta></class>
	<class path="js.html.webgl.UniformLocation" params="" file="K:\Program Files\HaxeToolkit\haxe\std/js/html/webgl/UniformLocation.hx" extern="1"><meta><m n=":native"><e>"WebGLUniformLocation"</e></m></meta></class>
</haxe>